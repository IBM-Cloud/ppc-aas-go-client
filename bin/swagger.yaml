consumes:
  - application/json
definitions:
  AccessRole:
    properties:
      permissions:
        $ref: '#/definitions/Permissions'
        description: Object containing what permissions are allowed
      role:
        description: String representation of an access role
        type: string
    required:
      - permissions
    type: object
  AccessToken:
    properties:
      accessToken:
        description: Access Token
        type: string
    required:
      - accessToken
    type: object
  AsyncOperation:
    properties:
      operation:
        type: string
    type: object
  AuxiliaryVolumeForOnboarding:
    properties:
      auxVolumeName:
        description: auxiliary volume name at storage host level
        type: string
      name:
        description: display name of auxVolumeName once onboarded,auxVolumeName will be set to display name if not provided.
        type: string
    required:
      - auxVolumeName
    type: object
  AuxiliaryVolumesForOnboarding:
    properties:
      auxiliaryVolumes:
        items:
          $ref: '#/definitions/AuxiliaryVolumeForOnboarding'
          type: object
        type: array
      sourceCRN:
        description: CRN of source ServiceBroker instance from where auxiliary volumes need to be onboarded
        type: string
    required:
      - sourceCRN
      - auxiliaryVolumes
    type: object
  AvailableStockImages:
    additionalProperties:
      $ref: '#/definitions/StockImages'
    description: A map of an array of stock images for each available storage type
    type: object
  Catalog:
    properties:
      services:
        items:
          $ref: '#/definitions/Service'
        type: array
    type: object
  CloneTaskReference:
    properties:
      cloneTaskID:
        description: ID of a long running PowerVC clone task
        type: string
      href:
        description: Link to PowerVC clone task resource
        type: string
    required:
      - cloneTaskID
      - href
    type: object
  CloneTaskStatus:
    properties:
      clonedVolumes:
        description: List of cloned volumes created from the clone volumes task
        items:
          $ref: '#/definitions/ClonedVolume'
        type: array
      failedReason:
        description: The reason the clone volumes task has failed
        type: string
        x-omitempty: true
      percentComplete:
        description: Snapshot completion percentage
        type: integer
      status:
        description: Status of the clone volumes task
        enum:
          - running
          - completed
          - failed
          - unknown
        type: string
    required:
      - status
      - percentComplete
    type: object
  ClonedVolume:
    properties:
      clonedVolumeID:
        description: ID of the new cloned volume
        type: string
      sourceVolumeID:
        description: ID of the source volume to be cloned
        type: string
    type: object
  ClonedVolumeDetail:
    properties:
      clone:
        $ref: '#/definitions/VolumeInfo'
        type: object
      source:
        $ref: '#/definitions/VolumeInfo'
        type: object
    required:
      - source
      - clone
    type: object
  CloudConnection:
    properties:
      classic:
        $ref: '#/definitions/CloudConnectionEndpointClassic'
        type: object
      cloudConnectionID:
        description: cloud connection ID
        type: string
      connectionMode:
        description: type of service the gateway is attached to
        type: string
      creationDate:
        description: creation date
        format: date-time
        type: string
      globalRouting:
        description: enable global routing for this cloud connection (default=false)
        type: boolean
      ibmIPAddress:
        description: IBM IP address
        type: string
      linkStatus:
        description: link status
        type: string
      metered:
        description: metered
        type: boolean
      name:
        description: name of the cloud connection
        type: string
      networks:
        description: Network References
        items:
          $ref: '#/definitions/NetworkReference'
        type: array
        x-omitempty: true
      port:
        description: port
        type: string
      speed:
        description: speed of the cloud connection (speed in megabits per second)
        type: integer
      userIPAddress:
        description: user IP address
        type: string
      vpc:
        $ref: '#/definitions/CloudConnectionEndpointVPC'
        type: object
    required:
      - cloudConnectionID
      - name
      - speed
      - globalRouting
      - creationDate
      - userIPAddress
      - ibmIPAddress
      - port
      - linkStatus
      - metered
    type: object
  CloudConnectionCreate:
    properties:
      classic:
        $ref: '#/definitions/CloudConnectionEndpointClassicUpdate'
        type: object
      globalRouting:
        description: enable global routing for this cloud connection (default=false)
        type: boolean
      metered:
        description: enable metered for this cloud connection (default=false)
        type: boolean
      name:
        description: name of the cloud connection
        type: string
      speed:
        description: speed of the cloud connection (speed in megabits per second)
        enum:
          - !!float 50
          - !!float 100
          - !!float 200
          - !!float 500
          - !!float 1000
          - !!float 2000
          - !!float 5000
          - !!float 10000
        type: integer
      subnets:
        description: list of subnets to attach to cloud connection
        items:
          type: string
        type: array
      transitEnabled:
        description: enable transit gateway for this cloud connection (default=false)
        type: boolean
      vpc:
        $ref: '#/definitions/CloudConnectionEndpointVPC'
        type: object
    required:
      - name
      - speed
    type: object
  CloudConnectionCreateResponse:
    allOf:
      - $ref: '#/definitions/CloudConnection'
    properties:
      jobRef:
        $ref: '#/definitions/JobReference'
  CloudConnectionEndpointClassic:
    properties:
      enabled:
        description: enable classic endpoint destination (default=false)
        type: boolean
        x-omitempty: false
      gre:
        $ref: '#/definitions/CloudConnectionGRETunnel'
        x-omitempty: true
    type: object
  CloudConnectionEndpointClassicUpdate:
    properties:
      enabled:
        description: enable classic endpoint destination (default=false)
        type: boolean
        x-omitempty: false
      gre:
        $ref: '#/definitions/CloudConnectionGRETunnelCreate'
        x-omitempty: true
    type: object
  CloudConnectionEndpointVPC:
    properties:
      enabled:
        description: enable vpc for this cloud connection (default=false)
        type: boolean
        x-omitempty: false
      vpcs:
        description: vpc connections
        items:
          $ref: '#/definitions/CloudConnectionVPC'
        type: array
        x-omitempty: true
    type: object
  CloudConnectionGRETunnel:
    properties:
      destIPAddress:
        description: gre destination IP address
        type: string
      sourceIPAddress:
        description: gre auto-assigned source IP address
        type: string
    required:
      - destIPAddress
      - sourceIPAddress
    type: object
  CloudConnectionGRETunnelCreate:
    properties:
      cidr:
        description: gre network in CIDR notation (192.168.0.0/24)
        type: string
      destIPAddress:
        description: gre destination IP address
        type: string
    required:
      - destIPAddress
      - cidr
    type: object
  CloudConnectionUpdate:
    properties:
      classic:
        $ref: '#/definitions/CloudConnectionEndpointClassicUpdate'
        type: object
      globalRouting:
        description: enable global routing for this cloud connection (default=false)
        type: boolean
        x-isnullable: true
      metered:
        description: enable metered for this cloud connection (default=false)
        type: boolean
        x-isnullable: true
      name:
        description: name of the cloud connection
        type: string
        x-isnullable: true
      speed:
        description: speed of the cloud connection (speed in megabits per second)
        enum:
          - !!float 50
          - !!float 100
          - !!float 200
          - !!float 500
          - !!float 1000
          - !!float 2000
          - !!float 5000
          - !!float 10000
        type: integer
        x-isnullable: true
      vpc:
        $ref: '#/definitions/CloudConnectionEndpointVPC'
        type: object
    type: object
  CloudConnectionVPC:
    properties:
      name:
        description: vpc name
        type: string
      vpcID:
        description: vpc id
        type: string
    required:
      - vpcID
    type: object
  CloudConnectionVirtualPrivateClouds:
    properties:
      virtualPrivateClouds:
        description: list of available virtual private clouds
        items:
          properties:
            classicAccess:
              description: indicates if vpc uses classic architecture
              type: boolean
            name:
              description: name for the vpc
              type: string
            status:
              description: status of this vpc
              type: string
            vpcID:
              description: virtual private cloud id
              type: string
          required:
            - classicAccess
            - vpcID
            - name
            - status
          type: object
          x-go-name: CloudConnectionVirtualPrivateCloud
        type: array
    required:
      - virtualPrivateClouds
    type: object
  CloudConnections:
    properties:
      cloudConnections:
        description: Cloud Connections
        items:
          $ref: '#/definitions/CloudConnection'
        type: array
    required:
      - cloudConnections
    type: object
  CloudInstance:
    properties:
      capabilities:
        description: Cloud Instance Capabilities
        items:
          description: Capability for this Cloud Instance
          type: string
        type: array
      cloudInstanceID:
        description: Cloud Instance ID
        type: string
      enabled:
        description: Indicates if the cloud instance is enabled
        type: boolean
      initialized:
        description: Indicates if the cloud instance is initialized and ready for use
        type: boolean
      limits:
        $ref: '#/definitions/CloudInstanceUsageLimits'
        description: Limits on the cloud instance
      name:
        description: Cloud Instance Name
        type: string
      openstackID:
        description: The open stack ID that controls this cloud instance
        type: string
      pvmInstances:
        description: PVM instances owned by the Cloud Instance
        items:
          $ref: '#/definitions/PVMInstanceReference'
        type: array
      region:
        description: The region the cloud instance lives
        type: string
      tenantID:
        description: The tenant ID that owns this cloud instance
        type: string
      usage:
        $ref: '#/definitions/CloudInstanceUsageLimits'
        description: Current usage on the cloud instance
    required:
      - cloudInstanceID
      - name
      - tenantID
      - openstackID
      - region
      - enabled
      - initialized
      - limits
      - usage
      - pvmInstances
    type: object
  CloudInstanceCreate:
    properties:
      instances:
        description: Number of power instances allowed
        type: number
        x-isnullable: true
      memory:
        description: Amount of memory allowed
        type: number
      procUnits:
        description: Number of processor units allowed
        type: number
      processors:
        description: Number of processors allowed
        type: number
      region:
        description: The region the cloud instance lives
        type: string
      storage:
        description: Amount of storage allowed (TB)
        type: number
        x-isnullable: true
      tenantID:
        description: The tenant ID that owns this cloud instance
        type: string
    required:
      - tenantID
      - region
      - processors
      - procUnits
      - memory
    type: object
    x-tag: Internal
  CloudInstanceReference:
    properties:
      capabilities:
        description: Cloud Instance Capabilities
        items:
          description: Capability for this Cloud Instance
          type: string
        type: array
      cloudInstanceID:
        description: Cloud Instance ID
        type: string
      enabled:
        description: Indicates if the cloud instance is enabled
        type: boolean
      href:
        description: Link to Cloud Instance resource
        type: string
      initialized:
        description: Indicates if the cloud instance is initialized and ready for use
        type: boolean
      limits:
        $ref: '#/definitions/CloudInstanceUsageLimits'
        description: Limits on the cloud instance
      name:
        description: Cloud Instance Name
        type: string
      region:
        description: The region the cloud instance lives
        type: string
    required:
      - cloudInstanceID
      - name
      - region
      - enabled
      - initialized
      - limits
      - href
    type: object
  CloudInstanceUpdate:
    properties:
      instances:
        description: Number of power instances allowed
        type: number
        x-isnullable: true
      memory:
        description: Amount of memory allowed
        type: number
        x-isnullable: true
      procUnits:
        description: Number of processor units allowed
        type: number
        x-isnullable: true
      processors:
        description: Number of processors allowed
        type: number
        x-isnullable: true
      storage:
        description: Amount of storage allowed (TB)
        type: number
        x-isnullable: true
    type: object
    x-tag: Internal
  CloudInstanceUsageLimits:
    properties:
      instanceMemory:
        description: Maximum memory (in GB) per PVMInstance
        type: number
        x-isnullable: true
        x-omitempty: true
      instanceProcUnits:
        description: Maximum proc units per PVMInstance
        type: number
        x-isnullable: true
        x-omitempty: true
      instances:
        description: Number of power instances allowed
        type: number
      memory:
        description: Amount of memory allowed
        type: number
      peeringBandwidth:
        description: Maximum network bandwidth to GCP Mbps
        type: integer
        x-isnullable: true
        x-omitempty: true
      peeringNetworks:
        description: Amount of peering networks allowed
        type: integer
        x-isnullable: true
        x-omitempty: true
      procUnits:
        description: Number of processor units allowed
        type: number
      processors:
        description: Number of processors allowed
        type: number
      storage:
        description: Amount of storage allowed (TB)
        type: number
      storageSSD:
        description: Amount of SSD storage allowed (TB)
        type: number
        x-isnullable: true
        x-omitempty: true
      storageStandard:
        description: Amount of standard (HDD) storage allowed (TB)
        type: number
        x-isnullable: true
        x-omitempty: true
    required:
      - processors
      - procUnits
      - memory
      - instances
      - storage
    type: object
  ConsoleLanguage:
    properties:
      code:
        description: language code
        type: string
      language:
        description: language description
        type: string
    required:
      - code
    type: object
  ConsoleLanguages:
    properties:
      consoleLanguages:
        description: console languages
        items:
          $ref: '#/definitions/ConsoleLanguage'
        type: array
    required:
      - consoleLanguages
    type: object
  Context:
    description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.
    type: object
  CreateCosImageImportJob:
    properties:
      accessKey:
        description: Cloud Object Storage access key; required for buckets with private access
        type: string
      bucketAccess:
        default: private
        description: indicates if the bucket has public or private access public access require no authentication keys private access requires hmac authentication keys (access,secret)
        enum:
          - public
          - private
        type: string
      bucketName:
        description: Cloud Object Storage bucket name; bucket-name[/optional/folder]
        type: string
      imageFilename:
        description: Cloud Object Storage image filename
        type: string
      imageName:
        description: Name for the image that will be loaded into the boot image catalog
        type: string
      osType:
        description: Image OS Type, required if importing a raw image; raw images can only be imported using the command line interface
        enum:
          - aix
          - ibmi
          - rhel
          - sles
        type: string
      region:
        description: Cloud Object Storage region
        type: string
      secretKey:
        description: Cloud Object Storage secret key; required for buckets with private access
        type: string
      storageAffinity:
        $ref: '#/definitions/StorageAffinity'
        description: Storage affinity data used for storage pool selection
      storagePool:
        description: Storage pool where the image will be loaded, if provided then storageType and storageAffinity will be ignored
        type: string
      storageType:
        description: Type of storage; will be ignored if storagePool or storageAffinity is provided. If only using storageType for storage selection then the storage pool with the most available space will be selected
        type: string
    required:
      - imageName
      - region
      - imageFilename
      - bucketName
    type: object
  CreateDataVolume:
    properties:
      affinityPVMInstance:
        description: PVM Instance (ID or Name) to base volume affinity policy against; required if requesting affinity and affinityVolume is not provided
        type: string
        x-isnullable: true
      affinityPolicy:
        description: Affinity policy for data volume being created; ignored if volumePool provided; for policy 'affinity' requires one of affinityPVMInstance or affinityVolume to be specified; for policy 'anti-affinity' requires one of antiAffinityPVMInstances or antiAffinityVolumes to be specified
        enum:
          - affinity
          - anti-affinity
        type: string
        x-isnullable: true
      affinityVolume:
        description: Volume (ID or Name) to base volume affinity policy against; required if requesting affinity and affinityPVMInstance is not provided
        type: string
        x-isnullable: true
      antiAffinityPVMInstances:
        description: List of pvmInstances to base volume anti-affinity policy against; required if requesting anti-affinity and antiAffinityVolumes is not provided
        items:
          description: PVM Instance (ID or Name)
          type: string
        type: array
      antiAffinityVolumes:
        description: List of volumes to base volume anti-affinity policy against; required if requesting anti-affinity and antiAffinityPVMInstances is not provided
        items:
          description: Volume (ID or Name)
          type: string
        type: array
      diskType:
        description: Type of Disk, required if affinityPolicy and volumePool not provided, otherwise ignored
        type: string
      name:
        description: Volume Name
        type: string
      replicationEnabled:
        description: Indicates if the volume should be replication enabled or not
        type: boolean
        x-isnullable: true
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: Volume Size (GB)
        type: number
      volumePool:
        description: Volume pool where the volume will be created; if provided then diskType and affinityPolicy values will be ignored
        type: string
    required:
      - name
      - size
    type: object
  CreateImage:
    properties:
      accessKey:
        description: Cloud Storage access key; required for import image
        type: string
      bucketName:
        description: Cloud Storage bucket name; bucket-name[/optional/folder]; required for import image
        type: string
      diskType:
        description: Type of Disk; will be ignored if storagePool or affinityPolicy is provided; Used only when importing an image from cloud storage.
        type: string
      imageFilename:
        description: Cloud Storage image filename; required for import image
        type: string
      imageID:
        description: Image ID of existing source image; required for copy image
        type: string
      imageName:
        description: Name to give created image; required for import image
        type: string
      imagePath:
        description: (deprecated - replaced by region, imageFilename and bucketName) Path to image starting with service endpoint and ending with image filename
        type: string
      osType:
        description: Image OS Type, required if importing a raw image; raw images can only be imported using the command line interface
        enum:
          - aix
          - ibmi
          - rhel
          - sles
        type: string
      region:
        description: Cloud Storage Region; only required to access IBM Cloud Storage
        type: string
      secretKey:
        description: Cloud Storage secret key; required for import image
        type: string
      source:
        description: Source of the image
        enum:
          - root-project
          - url
        type: string
      storageAffinity:
        $ref: '#/definitions/StorageAffinity'
        description: The storage affinity data; ignored if storagePool is provided; Used only when importing an image from cloud storage.
      storagePool:
        description: Storage pool where the image will be loaded; if provided then storageAffinity and diskType will be ignored; Used only when importing an image from cloud storage.
        type: string
    required:
      - source
    type: object
  DHCPServer:
    properties:
      id:
        description: The ID of the DHCP Server
        type: string
      network:
        $ref: '#/definitions/DHCPServerNetwork'
        description: The DHCP Server private network
        type: object
      status:
        description: The status of the DHCP Server
        type: string
    required:
      - id
      - status
      - network
    type: object
    x-tag: Internal
  DHCPServerCreate:
    properties:
      cidr:
        description: Optional cidr for DHCP private network
        type: string
        x-isnullable: true
      cloudConnectionID:
        description: Optional cloud connection uuid to connect with DHCP private network
        type: string
        x-isnullable: true
      dnsServer:
        description: Optional DNS Server for DHCP service
        type: string
        x-isnullable: true
      name:
        description: Optional name of DHCP Service. Only alphanumeric characters and dashes are allowed (will be prefixed by DHCP identifier)
        type: string
        x-isnullable: true
      snatEnabled:
        default: true
        description: Indicates if SNAT will be enabled for DHCP service
        type: boolean
        x-isnullable: true
    type: object
    x-tag: Internal
  DHCPServerDetail:
    properties:
      id:
        description: The ID of the DHCP Server
        type: string
      leases:
        description: The list of DHCP Server PVM Instance leases
        items:
          $ref: '#/definitions/DHCPServerLeases'
        type: array
      network:
        $ref: '#/definitions/DHCPServerNetwork'
        description: The DHCP Server private network
        type: object
      status:
        description: The status of the DHCP Server
        type: string
    required:
      - id
      - status
      - network
    type: object
    x-tag: Internal
  DHCPServerLeases:
    properties:
      instanceIP:
        description: The IP of the PVM Instance
        type: string
      instanceMacAddress:
        description: The MAC Address of the PVM Instance
        type: string
    required:
      - instanceIP
      - instanceMacAddress
    type: object
    x-tag: Internal
  DHCPServerNetwork:
    properties:
      id:
        description: The ID of the network
        type: string
      name:
        description: The name of the network
        type: string
    required:
      - id
      - name
    type: object
    x-tag: Internal
  DHCPServers:
    description: The list of DHCP Servers
    items:
      $ref: '#/definitions/DHCPServer'
    type: array
    x-tag: Internal
  DashboardClient:
    properties:
      id:
        type: string
      redirect_uri:
        type: string
      secret:
        type: string
    type: object
  DeadPeerDetection:
    description: Dead Peer Detection of the VPN Connection
    properties:
      action:
        description: Action to take when a Peer Gateway stops responding
        enum:
          - restart
        type: string
      interval:
        default: !!float 10
        description: How often to test that the Peer Gateway is responsive
        example: !!float 10
        maximum: !!float 60
        minimum: !!float 2
        type: integer
      threshold:
        default: !!float 5
        description: The number of attempts to connect before tearing down the connection
        example: !!float 5
        maximum: !!float 5
        minimum: !!float 1
        type: integer
    required:
      - action
      - interval
      - threshold
    type: object
  DeviceCode:
    properties:
      deviceCode:
        description: This code lets the device running the app securely determine whether the user has granted or denied access
        type: string
      expiresIn:
        description: The length of time, in seconds, that the device_code and user_code are valid
        type: number
      interval:
        description: The length of time, in seconds, that your device should wait between polling requests
        type: number
      userCode:
        description: The value given to the user to enter on device authentication page
        type: string
      verificationURL:
        description: A URL that the user must navigate to, on a separate device, to enter the user_code and grant or deny access to your application. Your user interface will also display this value
        type: string
    required:
      - deviceCode
      - userCode
      - verificationURL
      - expiresIn
      - interval
    type: object
  DisasterRecoveryLocation:
    properties:
      location:
        description: regionZone of a site
        type: string
      replicationSites:
        $ref: '#/definitions/ReplicationSites'
        description: The list of replication sites has mapped for the given location
    type: object
  DisasterRecoveryLocations:
    properties:
      disasterRecoveryLocations:
        description: The list of Disaster Recovery Locations
        items:
          $ref: '#/definitions/DisasterRecoveryLocation'
        type: array
    required:
      - disasterRecoveryLocations
    type: object
  Error:
    properties:
      code:
        type: integer
      description:
        type: string
      error:
        type: string
      message:
        type: string
    type: object
  Event:
    properties:
      action:
        description: Type of action for this event
        type: string
      eventID:
        description: ID of the Activity
        type: string
      level:
        description: Level of the event (notice, info, warning, error)
        enum:
          - notice
          - info
          - warning
          - error
        type: string
      message:
        description: The (translated) message of the event
        type: string
      metadata:
        description: Any metadata associated with the event
        type: object
      resource:
        description: Type of resource for this event
        type: string
      time:
        description: Time of activity in ISO 8601 - RFC3339
        format: date-time
        type: string
      timestamp:
        description: Time of activity in unix epoch
        type: integer
      user:
        $ref: '#/definitions/EventUser'
    required:
      - eventID
      - time
      - timestamp
      - level
      - resource
      - action
      - message
    type: object
  EventUser:
    properties:
      email:
        description: Email of the User
        type: string
      name:
        description: Name of the User
        type: string
      userID:
        description: ID of user who created/caused the event
        type: string
    required:
      - userID
    type: object
  Events:
    properties:
      events:
        description: Events
        items:
          $ref: '#/definitions/Event'
        type: array
    required:
      - events
    type: object
  ExportImage:
    properties:
      accessKey:
        description: Cloud Object Storage Access key
        type: string
      bucketName:
        description: Cloud Object Storage Bucket name
        type: string
      region:
        description: Cloud Object Storage Region; required for IBM COS
        type: string
      secretKey:
        description: Cloud Object Storage Secret key
        type: string
    required:
      - bucketName
      - accessKey
    type: object
  FlashCopyMapping:
    properties:
      copyRate:
        description: Indicates the rate of flash copy operation of a volume
        type: integer
      flashCopyName:
        description: Indicates flash copy name of the volume
        type: string
      progress:
        description: Indicates the progress of flash copy operation
        type: integer
      sourceVolumeName:
        description: Indicates name of the source volume
        type: string
      startTime:
        description: Indicates the start time of flash copy operation
        format: date-time
        type: string
      status:
        description: Copy status of a volume
        type: string
      targetVolumeName:
        description: Indicates name of the target volume
        type: string
    required:
      - flashCopyName
    type: object
  FlashCopyMappings:
    items:
      $ref: '#/definitions/FlashCopyMapping'
    type: array
  HardwarePlatform:
    description: Hardware platform detailing its limits and statistics
    properties:
      description:
        description: Description
        type: string
      hostsResources:
        description: The DataCenter list of servers and their available resources
        items:
          $ref: '#/definitions/HostResources'
        type: array
      memory:
        description: Configured Memory GB
        type: number
      processorMemoryRatio:
        description: Processor to Memory (GB) Ratio
        type: number
      processors:
        description: Configured Processors
        type: number
      sharedProcessorStep:
        description: Allowable granularity for shared processors
        type: number
      type:
        description: Short code for hardware
        type: string
    type: object
  HardwarePlatforms:
    additionalProperties:
      $ref: '#/definitions/HardwarePlatform'
    description: A map of hardware platforms detailing their limits and statistics
    type: object
  Health:
    properties:
      status:
        description: Returns a description of the current servers health
        type: string
    required:
      - status
    type: object
  HostInfo:
    properties:
      cores:
        $ref: '#/definitions/HostResource'
        description: Host core information
      hostname:
        description: Hostname
        type: string
      ipAddress:
        description: IP Address
        type: string
      memory:
        $ref: '#/definitions/HostResource'
        description: Host memory information
      pvmInstances:
        description: PVM Instances on host
        items:
          $ref: '#/definitions/HostPVMInstance'
        type: array
    required:
      - hostname
      - ipAddress
      - memory
      - cores
      - pvmInstances
    type: object
  HostPVMInstance:
    description: A pvm instance on host
    properties:
      cloudInstanceID:
        description: Cloud Instance ID pvm instance is a member of
        type: string
      owner:
        $ref: '#/definitions/OwnerInfo'
        description: Owner information of pvm instance
      pvmInstanceID:
        description: Instance ID
        type: string
      pvmName:
        description: Instance name
        type: string
      state:
        description: State of pvm instance
        type: string
      tenantID:
        description: Tenant ID of pvm instance
        type: string
    required:
      - owner
      - pvmInstanceID
      - pvmName
      - state
      - tenantID
      - cloudInstanceID
    type: object
  HostResource:
    properties:
      free:
        description: Free
        type: number
      total:
        description: Total
        type: number
      used:
        description: Used
        type: number
    required:
      - total
      - free
      - used
    type: object
  HostResources:
    properties:
      cores:
        description: The host available Processor units
        type: number
      id:
        description: The host identifier
        type: integer
      memory:
        description: The host available RAM memory in GiB
        type: integer
    required:
      - id
      - memory
      - cores
    type: object
  IKEPolicies:
    properties:
      ikePolicies:
        description: IKE Policies array
        items:
          $ref: '#/definitions/IKEPolicy'
        type: array
    required:
      - ikePolicies
    type: object
  IKEPolicy:
    description: IKE Policy object
    properties:
      authentication:
        $ref: '#/definitions/IKEPolicyAuthentication'
      dhGroup:
        description: DH group of the IKE Policy
        enum:
          - !!float 1
          - !!float 2
          - !!float 5
          - !!float 14
          - !!float 19
          - !!float 20
          - !!float 24
        example: !!float 2
        type: integer
      encryption:
        description: encryption of the IKE Policy
        enum:
          - aes-256-cbc
          - aes-192-cbc
          - aes-128-cbc
          - aes-256-gcm
          - aes-128-gcm
          - 3des-cbc
        example: aes-256-cbc
        type: string
      id:
        description: unique identifier of the IKE Policy object
        example: 7edc8988-eb18-4b5c-a594-0d73d8254463
        type: string
      keyLifetime:
        $ref: '#/definitions/KeyLifetime'
      name:
        description: name of the IKE Policy
        example: ikePolicy1
        type: string
      version:
        description: version of the IKE Policy
        enum:
          - !!float 1
          - !!float 2
        example: !!float 2
        type: integer
    required:
      - authentication
      - dhGroup
      - encryption
      - id
      - keyLifetime
      - name
      - version
    type: object
  IKEPolicyAuthentication:
    description: authentication of the IKE policy
    enum:
      - sha-256
      - sha-384
      - sha1
      - none
    example: sha-256
    type: string
  IKEPolicyAuthentications:
    example:
      - sha-256
      - sha-384
      - sha1
      - none
    items:
      type: string
    type: array
  IKEPolicyCreate:
    description: IKE Policy object used for creation
    properties:
      authentication:
        $ref: '#/definitions/IKEPolicyAuthentication'
      dhGroup:
        description: DH group of the IKE Policy
        enum:
          - !!float 1
          - !!float 2
          - !!float 5
          - !!float 14
          - !!float 19
          - !!float 20
          - !!float 24
        example: !!float 2
        type: integer
      encryption:
        description: encryption of the IKE Policy
        enum:
          - aes-256-cbc
          - aes-192-cbc
          - aes-128-cbc
          - aes-256-gcm
          - aes-128-gcm
          - 3des-cbc
        example: aes-256-cbc
        type: string
      keyLifetime:
        $ref: '#/definitions/KeyLifetime'
      name:
        description: name of the IKE Policy
        example: ikePolicy1
        maxLength: !!float 47
        minLength: !!float 1
        type: string
      presharedKey:
        description: Preshared key used in this IKE Policy (length of preshared key must be even)
        type: string
      version:
        description: version of the IKE Policy
        enum:
          - !!float 1
          - !!float 2
        example: !!float 2
        type: integer
    required:
      - dhGroup
      - encryption
      - keyLifetime
      - name
      - presharedKey
      - version
    type: object
  IKEPolicyDhGroups:
    example:
      - !!float 1
      - !!float 2
      - !!float 5
      - !!float 14
      - !!float 19
      - !!float 20
      - !!float 24
    items:
      type: number
    type: array
  IKEPolicyEncryptions:
    example:
      - aes-256-cbc
      - aes-192-cbc
      - aes-128-cbc
      - aes-256-gcm
      - aes-128-gcm
      - 3des-cbc
    items:
      type: string
    type: array
  IKEPolicyOptions:
    properties:
      authentications:
        $ref: '#/definitions/IKEPolicyAuthentications'
      dhGroups:
        $ref: '#/definitions/IKEPolicyDhGroups'
      encryptions:
        $ref: '#/definitions/IKEPolicyEncryptions'
      versions:
        $ref: '#/definitions/PolicyVersions'
    required:
      - authentications
      - dhGroups
      - encryptions
      - versions
    type: object
  IKEPolicyRef:
    description: IKE Policy reference object
    properties:
      id:
        description: unique identifier of IKE Policy
        example: 6edc8988-ab18-4b5c-b123-0d73e8254463
        type: string
      name:
        description: name of IKE Policy
        example: IKE Policy 1
        type: string
    required:
      - id
      - name
    type: object
  IKEPolicyTemplate:
    properties:
      authentication:
        description: ikePolicy Authentication default value
        example: sha256
        type: string
      dhGroup:
        description: ikePolicy DHGroup default value
        example: !!float 2
        type: integer
      encryption:
        description: ikePolicy Encryption default value
        example: aes-256-cbc
        type: string
      keyLifetime:
        $ref: '#/definitions/KeyLifetime'
      version:
        description: ikePolicy Version default value
        example: !!float 2
        type: number
    required:
      - authentication
      - dhGroup
      - encryption
      - keyLifetime
      - version
    type: object
  IKEPolicyUpdate:
    additionalProperties: true
    description: IKE Policy object used for update
    minProperties: !!float 1
    properties:
      authentication:
        $ref: '#/definitions/IKEPolicyAuthentication'
      dhGroup:
        description: DH group of the IKE Policy
        enum:
          - !!float 1
          - !!float 2
          - !!float 5
          - !!float 14
          - !!float 19
          - !!float 20
          - !!float 24
        example: !!float 2
        type: integer
      encryption:
        description: encryption of the IKE Policy
        enum:
          - aes-256-cbc
          - aes-192-cbc
          - aes-128-cbc
          - aes-256-gcm
          - aes-128-gcm
          - 3des-cbc
        example: aes-256-cbc
        type: string
      keyLifetime:
        $ref: '#/definitions/KeyLifetime'
      name:
        description: name of the IKE Policy
        example: ikePolicy1
        maxLength: !!float 47
        minLength: !!float 1
        type: string
      presharedKey:
        description: Preshared key used in this IKE Policy (length of preshared key must be even)
        type: string
      version:
        description: version of the IKE Policy
        enum:
          - !!float 1
          - !!float 2
        example: !!float 2
        type: integer
    type: object
  IPAddressRange:
    properties:
      endingIPAddress:
        description: Ending IP Address
        type: string
      startingIPAddress:
        description: Starting IP Address
        type: string
    required:
      - startingIPAddress
      - endingIPAddress
    type: object
  IPSECPolicyAuthentication:
    description: authentication for IPSec policy
    enum:
      - hmac-sha-256-128
      - hmac-sha1-96
      - none
    example: hmac-sha-256-128
    type: string
  IPSECPolicyAuthentications:
    example:
      - hmac-sha-256-128
      - hmac-sha1-96
      - none
    items:
      type: string
    type: array
  IPSECPolicyDhGroups:
    example:
      - !!float 1
      - !!float 2
      - !!float 5
      - !!float 14
      - !!float 19
      - !!float 20
    items:
      type: number
    type: array
  IPSECPolicyEncryptions:
    example:
      - aes-256-cbc
      - aes-192-cbc
      - aes-128-cbc
      - aes-256-gcm
      - aes-128-gcm
      - 3des-cbc
    items:
      type: string
    type: array
  IPSecPolicies:
    properties:
      ipSecPolicies:
        description: IPSec Policies array
        items:
          $ref: '#/definitions/IPSecPolicy'
        type: array
    required:
      - ipSecPolicies
    type: object
  IPSecPolicy:
    description: IPSec Policy object
    properties:
      authentication:
        $ref: '#/definitions/IPSECPolicyAuthentication'
      dhGroup:
        description: Diffie-Hellman group
        enum:
          - !!float 1
          - !!float 2
          - !!float 5
          - !!float 14
          - !!float 19
          - !!float 20
          - !!float 24
        example: !!float 2
        type: integer
      encryption:
        description: connection encryption policy
        enum:
          - aes-256-cbc
          - aes-192-cbc
          - aes-128-cbc
          - aes-256-gcm
          - aes-192-gcm
          - aes-128-gcm
          - 3des-cbc
        example: aes-256-cbc
        type: string
      id:
        description: unique identifier of the IPSec Policy
        example: 6edc8988-eb18-4b5c-a594-0d73d8254463
        type: string
      keyLifetime:
        $ref: '#/definitions/KeyLifetime'
      name:
        description: IPSec Policy name
        example: ipSecPolicy2
        type: string
      pfs:
        description: Perfect Forward Secrecy
        example: true
        type: boolean
    required:
      - authentication
      - dhGroup
      - encryption
      - id
      - keyLifetime
      - name
      - pfs
    type: object
  IPSecPolicyCreate:
    description: IPSec Policy object used for creation
    properties:
      authentication:
        $ref: '#/definitions/IPSECPolicyAuthentication'
      dhGroup:
        description: Diffie-Hellman group
        enum:
          - !!float 1
          - !!float 2
          - !!float 5
          - !!float 14
          - !!float 19
          - !!float 20
          - !!float 24
        example: !!float 2
        type: integer
      encryption:
        description: connection encryption policy
        enum:
          - aes-256-cbc
          - aes-192-cbc
          - aes-128-cbc
          - aes-256-gcm
          - aes-192-gcm
          - aes-128-gcm
          - 3des-cbc
        example: aes-256-cbc
        type: string
      keyLifetime:
        $ref: '#/definitions/KeyLifetime'
      name:
        description: IPSec Policy name
        example: ipSecPolicy2
        maxLength: !!float 47
        minLength: !!float 1
        type: string
      pfs:
        description: Perfect Forward Secrecy
        example: true
        type: boolean
    required:
      - encryption
      - dhGroup
      - name
      - pfs
      - keyLifetime
    type: object
  IPSecPolicyOptions:
    properties:
      authentications:
        $ref: '#/definitions/IPSECPolicyAuthentications'
      dhGroups:
        $ref: '#/definitions/IPSECPolicyDhGroups'
      encryptions:
        $ref: '#/definitions/IPSECPolicyEncryptions'
    required:
      - authentications
      - dhGroups
      - encryptions
    type: object
  IPSecPolicyRef:
    description: IPSec Policy reference object
    properties:
      id:
        description: unique identifier of IPSec Policy
        example: 7abc1234-ab18-4b5c-b123-0d73e8254463
        type: string
      name:
        description: name of IPSec Policy
        example: IPSec Policy 1
        type: string
    required:
      - id
      - name
    type: object
  IPSecPolicyTemplate:
    properties:
      authentication:
        description: ipSecPolicy Authentication default value
        example: sha256
        type: string
      dhGroup:
        description: ipSecPolicy DHGroup default value
        example: !!float 2
        type: integer
      encryption:
        description: ipSecPolicy Encryption default value
        example: aes-256-cbc
        type: string
      keyLifetime:
        $ref: '#/definitions/KeyLifetime'
    required:
      - authentication
      - dhGroup
      - encryption
      - keyLifetime
    type: object
  IPSecPolicyUpdate:
    additionalProperties: true
    description: IPSEc Policy object used for update
    minProperties: !!float 1
    properties:
      authentication:
        $ref: '#/definitions/IPSECPolicyAuthentication'
      dhGroup:
        description: Diffie-Hellman group
        enum:
          - !!float 1
          - !!float 2
          - !!float 5
          - !!float 14
          - !!float 19
          - !!float 20
          - !!float 24
        example: !!float 2
        type: integer
      encryption:
        description: connection encryption policy
        enum:
          - aes-256-cbc
          - aes-192-cbc
          - aes-128-cbc
          - aes-256-gcm
          - aes-192-gcm
          - aes-128-gcm
          - 3des-cbc
        example: aes-256-cbc
        type: string
      keyLifetime:
        $ref: '#/definitions/KeyLifetime'
      name:
        description: IPSec Policy name
        example: ipSecPolicy2
        maxLength: !!float 47
        minLength: !!float 1
        type: string
      pfs:
        description: Perfect Forward Secrecy
        example: true
        type: boolean
        x-isnullable: true
    type: object
  Image:
    properties:
      creationDate:
        description: Creation Date
        format: date-time
        type: string
      description:
        description: Description
        type: string
      imageID:
        description: Image ID
        type: string
      lastUpdateDate:
        description: Last Update Date
        format: date-time
        type: string
      name:
        description: Image Name
        type: string
      servers:
        description: List of Servers that have deployed the image
        items:
          description: Server name
          type: string
        type: array
      size:
        description: Image Size
        type: number
      specifications:
        $ref: '#/definitions/ImageSpecifications'
        type: object
      state:
        description: Image State
        type: string
      storagePool:
        description: Storage pool where the image resides
        type: string
      storageType:
        description: Storage type for image
        type: string
      taskref:
        $ref: '#/definitions/TaskReference'
        type: object
        x-omitempty: true
      volumes:
        description: Image Volumes
        items:
          $ref: '#/definitions/ImageVolume'
        type: array
    required:
      - imageID
      - name
      - size
      - storageType
      - storagePool
      - creationDate
      - lastUpdateDate
    type: object
  ImageReference:
    properties:
      creationDate:
        description: Creation Date
        format: date-time
        type: string
      description:
        description: Description
        type: string
      href:
        description: Link to Image resource
        type: string
      imageID:
        description: Image ID
        type: string
      lastUpdateDate:
        description: Last Update Date
        format: date-time
        type: string
      name:
        description: Image Name
        type: string
      specifications:
        $ref: '#/definitions/ImageSpecifications'
        type: object
      state:
        description: Image State
        type: string
      storagePool:
        description: Storage pool where image resides
        type: string
      storageType:
        description: Storage type for image
        type: string
    required:
      - imageID
      - name
      - state
      - description
      - storageType
      - storagePool
      - creationDate
      - lastUpdateDate
      - specifications
      - href
    type: object
  ImageSpecifications:
    properties:
      architecture:
        description: Architecture
        type: string
      containerFormat:
        description: Container Format
        type: string
      diskFormat:
        description: Disk Format
        type: string
      endianness:
        description: Endianness
        type: string
      hypervisorType:
        description: Hypervisor Type
        type: string
      imageType:
        description: Image Type
        type: string
      operatingSystem:
        description: Operating System
        type: string
    type: object
  ImageVolume:
    properties:
      bootable:
        description: Indicates if the volume is boot capable
        type: boolean
      name:
        description: Volume Name
        type: string
      size:
        description: Volume Size
        type: number
      volumeID:
        description: Volume ID
        type: string
    required:
      - volumeID
      - name
      - size
      - bootable
    type: object
  Images:
    properties:
      images:
        description: Images
        items:
          $ref: '#/definitions/ImageReference'
        type: array
    required:
      - images
    type: object
  InstanceCapabilities:
    additionalProperties:
      $ref: '#/definitions/InstanceCapability'
    description: List of available capabilities for a specific service
    example:
      per: true
    type: object
  InstanceCapability:
    description: Capability value
    type: boolean
  JSONSchemaObject:
    type: object
  Job:
    properties:
      createTimestamp:
        description: create timestamp for the job
        format: date-time
        type: string
      id:
        description: id of a job
        type: string
      operation:
        $ref: '#/definitions/Operation'
        type: object
      status:
        $ref: '#/definitions/Status'
        type: object
    required:
      - id
      - operation
      - status
    type: object
  JobReference:
    properties:
      href:
        description: Link to job resource
        type: string
      id:
        description: id of a job used to get status of long running operation
        type: string
    required:
      - id
      - href
    type: object
  Jobs:
    properties:
      jobs:
        description: Jobs
        items:
          $ref: '#/definitions/Job'
        type: array
    required:
      - jobs
    type: object
  KeyLifetime:
    description: Policy key lifetime
    example: !!float 28800
    maximum: !!float 86400
    minimum: !!float 180
    type: integer
  LastOperationResource:
    properties:
      description:
        type: string
      state:
        enum:
          - in progress
          - succeeded
          - failed
        type: string
    required:
      - state
    type: object
  MaximumStorageAllocation:
    description: Maximum storage allocation
    properties:
      maxAllocationSize:
        description: Maximum allocation storage size (GB)
        type: integer
      storagePool:
        description: Storage pool
        type: string
      storageType:
        description: Storage type
        type: string
    required:
      - maxAllocationSize
      - storageType
      - storagePool
    type: object
  Metadata:
    description: See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata) for more details.
    type: object
  MinMaxDefault:
    properties:
      default:
        description: default value
        type: number
      max:
        description: max value
        type: number
      min:
        description: min value
        type: number
    required:
      - min
      - max
      - default
    type: object
  MultiVolumesCreate:
    properties:
      affinityPVMInstance:
        description: PVM Instance (ID or Name)to base volume affinity policy against; required if requesting affinity and affinityVolume is not provided
        type: string
        x-isnullable: true
      affinityPolicy:
        description: Affinity policy for data volume being created; ignored if volumePool provided; for policy 'affinity' requires one of affinityPVMInstance or affinityVolume to be specified; for policy 'anti-affinity' requires one of antiAffinityPVMInstances or antiAffinityVolumes to be specified
        enum:
          - affinity
          - anti-affinity
        type: string
        x-isnullable: true
      affinityVolume:
        description: Volume (ID or Name) to base volume affinity policy against; required if requesting affinity and affinityPVMInstance is not provided
        type: string
        x-isnullable: true
      antiAffinityPVMInstances:
        description: List of pvmInstances to base volume anti-affinity policy against; required if requesting anti-affinity and antiAffinityVolumes is not provided
        items:
          description: PVM Instance (ID or Name)
          type: string
        type: array
      antiAffinityVolumes:
        description: List of volumes to base volume anti-affinity policy against; required if requesting anti-affinity and antiAffinityPVMInstances is not provided
        items:
          description: Volume (ID or Name)
          type: string
        type: array
      count:
        description: Number of volumes to create
        type: integer
      diskType:
        description: Type of Disk, required if affinityPolicy and volumePool not provided, otherwise ignored
        type: string
      name:
        description: Base name of the volume(s)
        type: string
      replicationEnabled:
        description: Indicates if the volume should be replication enabled or not
        type: boolean
        x-isnullable: true
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: Volume Size (GB)
        type: integer
      volumePool:
        description: Volume pool where the volume will be created; if provided then diskType and affinityPolicy values will be ignored
        type: string
    required:
      - name
      - size
    type: object
  Network:
    properties:
      cidr:
        description: Network in CIDR notation (192.168.0.0/24)
        type: string
      cloudConnections:
        description: (currently not available) cloud connections this network is attached
        items:
          properties:
            cloudConnectionID:
              description: the cloud connection id
              type: string
            href:
              description: link to the cloud connection resource
              type: string
          type: object
        type: array
        x-omitempty: true
      dhcpManaged:
        description: DHCP Managed Network
        type: boolean
      dnsServers:
        description: DNS Servers
        items:
          type: string
        type: array
      gateway:
        description: Gateway IP Address
        type: string
      ipAddressMetrics:
        description: IP Address Metrics
        properties:
          available:
            description: Number of available IP addresses
            type: number
          total:
            description: Total number of all IP addresses in all ipAddressRanges
            type: number
          used:
            description: Number of IP addresses currently in use
            type: number
          utilization:
            description: Utilization of IP addresses in percent form (used / total) [0 - 100]
            type: number
        required:
          - available
          - used
          - total
          - utilization
        type: object
      ipAddressRanges:
        description: IP Address Ranges
        items:
          $ref: '#/definitions/IPAddressRange'
        type: array
      jumbo:
        description: MTU Jumbo Network enabled
        type: boolean
      name:
        description: Network Name
        type: string
      networkID:
        description: Unique Network ID
        type: string
      publicIPAddressRanges:
        description: Public IP Address Ranges (for pub-vlan networks)
        items:
          $ref: '#/definitions/IPAddressRange'
        type: array
        x-omitempty: true
      type:
        default: vlan
        description: Type of Network {vlan, pub-vlan}
        enum:
          - vlan
          - pub-vlan
        type: string
      vlanID:
        description: VLAN ID
        type: number
    required:
      - networkID
      - name
      - type
      - vlanID
      - cidr
      - dnsServers
      - ipAddressRanges
      - ipAddressMetrics
      - jumbo
    type: object
  NetworkCreate:
    properties:
      cidr:
        description: Network in CIDR notation (192.168.0.0/24)
        type: string
      dnsServers:
        description: DNS Servers. If not specified, default is 127.0.0.1 for 'vlan' (private network) and 9.9.9.9 for 'pub-vlan' (public network)
        items:
          type: string
        type: array
      gateway:
        description: Gateway IP Address
        type: string
      ipAddressRanges:
        description: IP Address Ranges
        items:
          $ref: '#/definitions/IPAddressRange'
        type: array
      jumbo:
        description: Enable MTU Jumbo Network
        type: boolean
      name:
        description: Network Name
        type: string
      type:
        default: vlan
        description: Type of Network - 'vlan' (private network) 'pub-vlan' (public network)
        enum:
          - vlan
          - pub-vlan
        type: string
    required:
      - type
    type: object
  NetworkID:
    description: unique identifier of a network
    properties:
      networkID:
        example: 7f950c76-8582-11qeb-8dcd-0242ac172
        type: string
    required:
      - networkID
    type: object
  NetworkIDs:
    properties:
      networkIDs:
        description: an array of network IDs
        example:
          - 7f950c76-8582-11qeb-8dcd-0242ac143
          - 7f950c76-8582-11veb-8dcd-0242ac153
          - 7f950c76-8582-11deb-8dcd-0242ac163
        items:
          type: string
        type: array
    type: object
  NetworkPort:
    properties:
      description:
        description: Description of the port (not unique or indexable)
        type: string
      externalIP:
        description: The external ip address (for pub-vlan networks)
        type: string
        x-omitempty: true
      href:
        description: Link to port resource
        type: string
      ipAddress:
        description: The ip address of this port
        type: string
      macAddress:
        description: The mac address of the network interface
        type: string
      portID:
        description: The unique Port ID
        type: string
      pvmInstance:
        description: The attached pvm-instance to this port
        properties:
          href:
            description: Link to pvm-instance resource
            type: string
          pvmInstanceID:
            description: The attahed pvm-instance ID
            type: string
        type: object
        x-omitempty: true
      status:
        description: Te
        type: string
    required:
      - portID
      - description
      - status
      - macAddress
      - ipAddress
    type: object
  NetworkPortCreate:
    properties:
      description:
        description: Description of the port (not unique or indexable)
        type: string
      ipAddress:
        description: The requested ip address of this port
        type: string
    type: object
  NetworkPortUpdate:
    properties:
      description:
        description: Description of the port (not unique or indexable)
        type: string
        x-isnullable: true
      pvmInstanceID:
        description: If supplied populated it attaches to the PVMInstanceID, if empty detaches from PVMInstanceID
        type: string
        x-isnullable: true
    type: object
  NetworkPorts:
    properties:
      ports:
        description: Network Ports
        items:
          $ref: '#/definitions/NetworkPort'
        type: array
    required:
      - ports
    type: object
  NetworkReference:
    properties:
      dhcpManaged:
        description: DHCP Managed Network
        type: boolean
      href:
        description: Link to Network resource
        type: string
      jumbo:
        description: MTU Jumbo Network enabled
        type: boolean
      name:
        description: Network Name
        type: string
      networkID:
        description: Unique Network ID
        type: string
      type:
        default: vlan
        description: Type of Network {vlan, pub-vlan}
        enum:
          - vlan
          - pub-vlan
        type: string
      vlanID:
        description: VLAN ID
        type: number
    required:
      - networkID
      - name
      - vlanID
      - type
      - jumbo
      - href
    type: object
  NetworkUpdate:
    properties:
      dnsServers:
        description: Replaces the current DNS Servers
        items:
          type: string
        type: array
        x-isnullable: true
      gateway:
        description: Replaces the current Gateway IP Address
        type: string
        x-isnullable: true
      ipAddressRanges:
        description: Replaces the current IP Address Ranges
        items:
          $ref: '#/definitions/IPAddressRange'
        type: array
        x-isnullable: true
      name:
        description: Replaces the current Network Name
        type: string
        x-isnullable: true
    type: object
  Networks:
    properties:
      networks:
        description: Network References
        items:
          $ref: '#/definitions/NetworkReference'
        type: array
    required:
      - networks
    type: object
  Object:
    type: object
  OpenStack:
    properties:
      id:
        description: Unique identifier for the OpenStack instance
        type: string
      ipAddress:
        description: Internal IP address of the OpenStack instance
        type: string
      name:
        description: Shortname of the OpenStack instance
        type: string
      nextVLANID:
        description: Next available VLAN ID to be used for a network creation
        type: number
      region:
        description: The region where the open stack lives
        type: string
    required:
      - id
      - name
      - ipAddress
      - region
      - nextVLANID
    type: object
  OpenStackCreate:
    properties:
      ipAddress:
        description: Internal IP address of the OpenStack instance
        type: string
      name:
        description: Shortname of the OpenStack instance
        type: string
      region:
        description: The region where the open stack lives
        type: string
    required:
      - name
      - ipAddress
      - region
    type: object
  OpenStackInfo:
    properties:
      hosts:
        description: Hosts on OpenStack
        items:
          $ref: '#/definitions/HostInfo'
        type: array
      region:
        description: Requested region
        type: string
    required:
      - hosts
      - region
    type: object
  OpenStacks:
    properties:
      openStacks:
        description: OpenStacks managed by Power IAAS
        items:
          $ref: '#/definitions/OpenStack'
        type: array
    required:
      - openStacks
    type: object
  Operation:
    properties:
      action:
        description: current action of the operation
        type: string
      id:
        description: ID of an operation
        type: string
      target:
        description: target resource of the operation
        type: string
    required:
      - id
      - target
      - action
    type: object
  Operations:
    properties:
      bootMode:
        description: Name of the server boot mode a(Boot from disk using copy A), b(Boot from disk using copy B), c(Reserved for IBM lab use only), d(Boot from media/drives)
        enum:
          - a
          - b
          - c
          - d
        type: string
      operatingMode:
        description: Name of the server operating mode
        enum:
          - normal
          - manual
        type: string
      task:
        description: Name of the job task to execute
        enum:
          - dston
          - retrydump
          - consoleservice
          - iopreset
          - remotedstoff
          - remotedston
          - iopdump
          - dumprestart
        type: string
    type: object
  Options:
    properties:
      vpnaasOptions:
        $ref: '#/definitions/VPNaaSOptions'
    required:
      - vpnaasOptions
    type: object
  OwnerInfo:
    properties:
      countryCode:
        description: Country code of user
        type: string
      currencyCode:
        description: Currency code of user
        type: string
      email:
        description: Email address of user
        type: string
      iamID:
        description: IAM id of user
        type: string
      isIBMer:
        description: Indicates if user is an IBMer
        type: boolean
      name:
        description: Name of user
        type: string
      softlayerIDs:
        description: (deprecated - replaced by softlayerSubscriptions) Array of Soft Layer IDs
        items:
          description: Softlayer account ID
          type: string
        type: array
      softlayerSubscriptions:
        description: Array of softlayer subscriptions
        items:
          $ref: '#/definitions/SoftlayerSubscription'
        type: array
      userID:
        description: User id of user
        type: string
    required:
      - softlayerSubscriptions
      - countryCode
      - currencyCode
      - email
      - iamID
      - isIBMer
      - name
      - userID
    type: object
  PVMInstance:
    properties:
      addresses:
        description: (deprecated - replaced by networks) The list of addresses and their network information
        items:
          $ref: '#/definitions/PVMInstanceNetwork'
        type: array
      consoleLanguage:
        $ref: '#/definitions/ConsoleLanguage'
        description: Console language and code
      creationDate:
        description: Date/Time of PVM creation
        format: date-time
        type: string
      deploymentType:
        description: The custom deployment type
        type: string
      diskSize:
        description: Size of allocated disk (in GB)
        type: number
      fault:
        $ref: '#/definitions/PVMInstanceFault'
      health:
        $ref: '#/definitions/PVMInstanceHealth'
      hostID:
        description: The PVM Instance Host ID (Internal Use Only)
        type: integer
      imageID:
        description: The ImageID used by the server
        type: string
      licenseRepositoryCapacity:
        description: The VTL license repository capacity TB value
        type: integer
      maxmem:
        description: Maximum amount of memory that can be allocated (in GB, for resize)
        type: number
      maxproc:
        description: Maximum number of processors that can be allocated (for resize)
        type: number
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      migratable:
        default: true
        description: whether the instance can be migrated
        type: boolean
      minmem:
        description: Minimum amount of memory that can be allocated (in GB, for resize)
        type: number
      minproc:
        description: Minimum number of processors that can be allocated (for resize)
        type: number
      networkIDs:
        description: (deprecated - replaced by networks) List of Network IDs
        items:
          description: Network ID
          type: string
        type: array
      networks:
        description: The pvm instance networks information
        items:
          $ref: '#/definitions/PVMInstanceNetwork'
        type: array
      operatingSystem:
        description: OS system information (usually version and build)
        type: string
      osType:
        description: Type of the OS [aix, ibmi, rhel, sles, vtl, rhcos]
        type: string
      pinPolicy:
        description: VM pinning policy to use [none, soft, hard]
        type: string
      placementGroup:
        default: none
        description: The placement group of the server
        type: string
      procType:
        default: dedicated
        description: Processor type (dedicated, shared, capped)
        enum:
          - dedicated
          - shared
          - capped
          - ""
        type: string
      processors:
        description: Number of processors allocated
        type: number
      progress:
        description: The progress of an operation
        type: number
      pvmInstanceID:
        description: PCloud PVM Instance ID
        type: string
      sapProfile:
        $ref: '#/definitions/SAPProfileReference'
        description: If this is an SAP pvm-instance the profile reference will link to the SAP profile
      serverName:
        description: Name of the server
        type: string
      sharedProcessorPool:
        description: The shared processor pool of the server
        type: string
      sharedProcessorPoolID:
        description: The shared processor pool id
        type: string
      softwareLicenses:
        $ref: '#/definitions/SoftwareLicenses'
        description: The pvm instance Software Licenses
        x-isnullable: true
      srcs:
        description: The pvm instance SRC lists
        items:
          items:
            $ref: '#/definitions/SRC'
          type: array
        type: array
      status:
        description: The status of the instance
        type: string
      storagePool:
        description: Storage Pool where server is deployed
        type: string
      storagePoolAffinity:
        default: true
        description: Indicates if all volumes attached to the server must reside in the same storage pool; Defaults to true when initially deploying a PVMInstance
        type: boolean
      storageType:
        description: Storage type where server is deployed
        type: string
      sysType:
        description: System type used to host the instance
        type: string
      updatedDate:
        description: Date/Time of PVM last update
        format: date-time
        type: string
      virtualCores:
        $ref: '#/definitions/VirtualCores'
        description: The pvm instance virtual CPU information
      volumeIDs:
        description: List of volume IDs
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - pvmInstanceID
      - serverName
      - imageID
      - processors
      - procType
      - memory
      - diskSize
      - networkIDs
      - volumeIDs
      - status
      - storageType
      - osType
    type: object
  PVMInstanceAction:
    properties:
      action:
        description: Name of the action to take; can be start, stop, hard-reboot, soft-reboot, immediate-shutdown, reset-state
        enum:
          - start
          - stop
          - immediate-shutdown
          - hard-reboot
          - soft-reboot
          - reset-state
        type: string
    required:
      - action
    type: object
  PVMInstanceAddNetwork:
    properties:
      ipAddress:
        description: The requested ip address of this network interface
        type: string
      networkID:
        description: ID of the network
        type: string
    required:
      - networkID
    type: object
  PVMInstanceAddress:
    $ref: '#/definitions/PVMInstanceNetwork'
    description: deprecated - replaced by PVMInstanceNetwork
  PVMInstanceCapture:
    properties:
      captureDestination:
        default: cloud-storage
        description: Destination for the deployable image
        enum:
          - image-catalog
          - cloud-storage
          - both
        type: string
      captureName:
        description: Name of the deployable image created for the captured PVMInstance
        type: string
      captureVolumeIDs:
        description: List of Data volume IDs to include in the captured PVMInstance
        items:
          description: Volume ID
          type: string
        type: array
      cloudStorageAccessKey:
        description: Cloud Storage Access key
        type: string
      cloudStorageImagePath:
        description: Cloud Storage Image Path (bucket-name [/folder/../..])
        type: string
      cloudStorageRegion:
        description: Cloud Storage Region
        type: string
      cloudStorageSecretKey:
        description: Cloud Storage Secret key
        type: string
    required:
      - captureName
      - captureDestination
    type: object
  PVMInstanceClone:
    properties:
      keyPairName:
        description: The name of the SSH key pair provided to the server for authenticating users (looked up in the tenant's list of keys)
        type: string
      memory:
        description: Amount of memory allocated (in GB)
        type: number
        x-isnullable: true
      name:
        description: Name of the server to create
        type: string
      networks:
        description: The pvm instance networks information
        items:
          $ref: '#/definitions/PVMInstanceAddNetwork'
        type: array
      procType:
        default: dedicated
        description: Processor type (dedicated, shared, capped)
        enum:
          - dedicated
          - shared
          - capped
        type: string
        x-isnullable: true
      processors:
        description: Number of processors allocated
        type: number
        x-isnullable: true
      softwareLicenses:
        $ref: '#/definitions/SoftwareLicenses'
        description: The pvm instance Software Licenses
        x-isnullable: true
      volumeIDs:
        description: List of volume IDs
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - name
      - networks
    type: object
  PVMInstanceConsole:
    properties:
      consoleURL:
        description: The URL to the noVNC console for the PVM Instance
        type: string
    required:
      - consoleURL
    type: object
  PVMInstanceCreate:
    properties:
      deploymentType:
        description: The custom deployment type
        type: string
      imageID:
        description: Image ID of the image to use for the server
        type: string
      keyPairName:
        description: The name of the SSH key pair provided to the server for authenticating users (looked up in the tenant's list of keys)
        type: string
      licenseRepositoryCapacity:
        description: The VTL license repository capacity TB value
        type: integer
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      migratable:
        default: true
        description: (deprecated - replaced by pinPolicy) Indicates if the server is allowed to migrate between hosts
        type: boolean
      networkIDs:
        description: (deprecated - replaced by networks) List of Network IDs
        items:
          description: Network ID
          type: string
        type: array
      networks:
        description: The pvm instance networks information
        items:
          $ref: '#/definitions/PVMInstanceAddNetwork'
        type: array
      pinPolicy:
        $ref: '#/definitions/PinPolicy'
      placementGroup:
        description: The placement group for the server
        type: string
      procType:
        default: dedicated
        description: Processor type (dedicated, shared, capped)
        enum:
          - dedicated
          - shared
          - capped
        type: string
      processors:
        description: Number of processors allocated
        type: number
      replicantAffinityPolicy:
        default: none
        description: Affinity policy for replicants being created; affinity for the same host, anti-affinity for different hosts, none for no preference
        enum:
          - affinity
          - anti-affinity
          - none
        type: string
      replicantNamingScheme:
        default: suffix
        description: How to name the created vms
        enum:
          - prefix
          - suffix
        type: string
      replicants:
        description: Number of duplicate instances to create in this request
        type: number
      serverName:
        description: Name of the server to create
        type: string
      sharedProcessorPool:
        description: The shared processor pool for server deployment
        type: string
      softwareLicenses:
        $ref: '#/definitions/SoftwareLicenses'
        description: The pvm instance Software Licenses
        x-isnullable: true
      storageAffinity:
        $ref: '#/definitions/StorageAffinity'
        description: The storage affinity data; ignored if storagePool is provided; Only valid when you deploy one of the IBM supplied stock images. Storage type and pool for a custom image (an imported image or an image that is created from a PVMInstance capture) defaults to the storage type and pool the image was created in
      storageConnection:
        description: The storage connection type
        enum:
          - vSCSI
        type: string
      storagePool:
        description: Storage Pool for server deployment; if provided then storageAffinity and storageType will be ignored; Only valid when you deploy one of the IBM supplied stock images. Storage type and pool for a custom image (an imported image or an image that is created from a PVMInstance capture) defaults to the storage type and pool the image was created in
        type: string
      storageType:
        description: Storage type for server deployment; will be ignored if storagePool or storageAffinity is provided; Only valid when you deploy one of the IBM supplied stock images. Storage type and pool for a custom image (an imported image or an image that is created from a PVMInstance capture) defaults to the storage type and pool the image was created in
        type: string
      sysType:
        description: System type used to host the instance
        type: string
      userData:
        description: Cloud init user defined data
        type: string
      virtualCores:
        $ref: '#/definitions/VirtualCores'
        description: The pvm instance virtual CPU information
      volumeIDs:
        description: List of volume IDs
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - serverName
      - imageID
      - processors
      - procType
      - memory
    type: object
  PVMInstanceFault:
    description: Fault information (if occurred)
    properties:
      code:
        description: The fault status of the server, if any
        type: number
      created:
        description: The date and time the fault occurred
        format: date-time
        type: string
      details:
        description: The fault details of the server, if any
        type: string
      message:
        description: The fault message of the server, if any
        type: string
    type: object
  PVMInstanceHealth:
    description: PVM's health status details
    properties:
      lastUpdate:
        description: Date/Time of PVM last health status change
        type: string
      reason:
        description: The health status reason, if any
        type: string
      status:
        description: The PVM's health status value
        type: string
    type: object
  PVMInstanceList:
    description: A list of PVMInstances
    items:
      $ref: '#/definitions/PVMInstance'
    type: array
  PVMInstanceMultiCreate:
    properties:
      affinityPolicy:
        default: none
        description: Affinity policy for pvm-instances being created; affinity for the same host, anti-affinity for different hosts, none for no preference
        enum:
          - affinity
          - anti-affinity
          - none
        type: string
      count:
        description: Number of pvm-instances to create
        type: integer
      numerical:
        default: suffix
        description: Where to place the numerical number of the multi-created instance
        enum:
          - prefix
          - suffix
        type: string
    type: object
  PVMInstanceNetwork:
    description: A map containing information about a network address
    properties:
      externalIP:
        description: The external ip address (for pub-vlan networks)
        type: string
        x-omitempty: true
      href:
        description: Link to PVM Instance Network
        type: string
        x-omitempty: true
      ip:
        description: (deprecated - replaced by ipAddress)
        type: string
      ipAddress:
        description: The ip address of this network interface
        type: string
      macAddress:
        description: The mac address of the network interface
        type: string
      networkID:
        description: ID of the network
        type: string
      networkName:
        description: The name of the network the address is on
        type: string
      type:
        description: The address type (fixed or dynamic)
        type: string
      version:
        description: The version of the information provided
        type: number
    type: object
  PVMInstanceNetworks:
    properties:
      networks:
        description: PVM Instance Networks
        items:
          $ref: '#/definitions/PVMInstanceNetwork'
        type: array
    required:
      - networks
    type: object
  PVMInstanceOperation:
    properties:
      operation:
        $ref: '#/definitions/Operations'
      operationType:
        description: Name of the operation to execute; can be job or boot
        enum:
          - job
          - boot
        type: string
    required:
      - operationType
      - operation
    type: object
  PVMInstanceReference:
    properties:
      addresses:
        description: (deprecated - replaced by networks) The list of addresses and their network information
        items:
          $ref: '#/definitions/PVMInstanceNetwork'
        type: array
      consoleLanguage:
        $ref: '#/definitions/ConsoleLanguage'
        description: Console language and code
      creationDate:
        description: Date/Time of PVM creation
        format: date-time
        type: string
      diskSize:
        description: Size of allocated disk (in GB)
        type: number
      fault:
        $ref: '#/definitions/PVMInstanceFault'
      health:
        $ref: '#/definitions/PVMInstanceHealth'
      hostID:
        description: The PVM Instance Host ID (Internal Use Only)
        type: integer
      href:
        description: Link to Cloud Instance resource
        type: string
      imageID:
        description: The ImageID used by the server
        type: string
      licenseRepositoryCapacity:
        description: The VTL license repository capacity TB value
        type: integer
      maxmem:
        description: Maximum amount of memory that can be allocated (in GB, for resize)
        type: number
      maxproc:
        description: Maximum number of processors that can be allocated (for resize)
        type: number
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      minmem:
        description: Minimum amount of memory that can be allocated (in GB, for resize)
        type: number
      minproc:
        description: Minimum number of processors that can be allocated (for resize)
        type: number
      networks:
        description: The list of addresses and their network information
        items:
          $ref: '#/definitions/PVMInstanceNetwork'
        type: array
      operatingSystem:
        description: OS system information (usually version and build)
        type: string
      osType:
        description: Type of the OS [aix, ibmi, rhel, sles, vtl, rhcos]
        type: string
      pinPolicy:
        description: VM pinning policy to use [none, soft, hard]
        type: string
      placementGroup:
        default: none
        description: The placement group of the server
        type: string
      procType:
        default: dedicated
        description: Processor type (dedicated, shared, capped)
        enum:
          - dedicated
          - shared
          - capped
        type: string
      processors:
        description: Number of processors allocated
        type: number
      progress:
        description: The progress of an operation
        type: number
      pvmInstanceID:
        description: PCloud PVM Instance ID
        type: string
      sapProfile:
        $ref: '#/definitions/SAPProfileReference'
        description: If this is an SAP pvm-instance the profile reference will link to the SAP profile
      serverName:
        description: Name of the server
        type: string
      sharedProcessorPool:
        description: The shared processor pool of the server
        type: string
      sharedProcessorPoolID:
        description: The shared processor pool id
        type: string
      softwareLicenses:
        $ref: '#/definitions/SoftwareLicenses'
        description: The pvm instance Software Licenses
        x-isnullable: true
        x-omitempty: true
      srcs:
        description: The pvm instance SRC lists
        items:
          items:
            $ref: '#/definitions/SRC'
          type: array
        type: array
      status:
        description: The status of the instance
        type: string
      storagePool:
        description: Storage Pool where server is deployed
        type: string
      storagePoolAffinity:
        default: true
        description: Indicates if all volumes attached to the server must reside in the same storage pool
        type: boolean
      storageType:
        description: Storage type of the deployment storage pool
        type: string
      sysType:
        description: System type used to host the instance
        type: string
      updatedDate:
        description: Date/Time of PVM last update
        format: date-time
        type: string
      virtualCores:
        $ref: '#/definitions/VirtualCores'
        description: The pvm instance virtual CPU information
    required:
      - pvmInstanceID
      - serverName
      - imageID
      - processors
      - procType
      - memory
      - diskSize
      - status
      - osType
      - href
    type: object
  PVMInstanceRemoveNetwork:
    properties:
      macAddress:
        description: The mac address of the network interface to be removed
        type: string
    type: object
  PVMInstanceUpdate:
    properties:
      licenseRepositoryCapacity:
        description: The VTL license repository capacity TB value
        type: integer
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      migratable:
        default: true
        description: (deprecated - replaced by pinPolicy) Indicates if the server is allowed to migrate between hosts
        type: boolean
      pinPolicy:
        $ref: '#/definitions/PinPolicy'
      procType:
        description: Processor type (dedicated, shared, capped)
        enum:
          - dedicated
          - shared
          - capped
        type: string
      processors:
        description: Number of processors allocated
        type: number
      sapProfileID:
        description: If an SAP pvm-instance, the SAP profile ID to switch to (only while shutdown)
        type: string
      serverName:
        description: Name of the server to create
        type: string
      softwareLicenses:
        $ref: '#/definitions/SoftwareLicenses'
        description: The pvm instance Software Licenses
        x-isnullable: true
      storagePoolAffinity:
        default: true
        description: Indicates if all volumes attached to the server must reside in the same storage pool; If set to false then volumes from any storage type and pool can be attached to the PVMInstance; Impacts PVMInstance snapshot, capture, and clone, for capture and clone - only data volumes that are of the same storage type and in the same storage pool of the PVMInstance's boot volume can be included; for snapshot - all data volumes to be included in the snapshot must reside in the same storage type and pool. Once set to false, cannot be set back to true unless all volumes attached reside in the same storage type and pool.
        type: boolean
      virtualCores:
        $ref: '#/definitions/VirtualCores'
        description: The pvm instance virtual CPU information
    type: object
  PVMInstanceUpdateResponse:
    properties:
      licenseRepositoryCapacity:
        description: The VTL license repository capacity TB value
        type: integer
      memory:
        description: Amount of memory allocated (in GB)
        type: number
      pinPolicy:
        $ref: '#/definitions/PinPolicy'
      procType:
        description: Processor type (dedicated, shared, capped)
        enum:
          - dedicated
          - shared
          - capped
        type: string
      processors:
        description: Number of processors allocated
        type: number
      serverName:
        description: Name of the server to create
        type: string
      statusUrl:
        description: URL to check for status of the operation (for now, just the URL for the GET on the server, which has status information from powervc)
        type: string
    type: object
  PVMInstanceVolumeUpdate:
    properties:
      deleteOnTermination:
        description: Indicates if the volume should be deleted when the PVMInstance is terminated
        type: boolean
    required:
      - deleteOnTermination
    type: object
  PVMInstances:
    properties:
      pvmInstances:
        description: PVM Instance References
        items:
          $ref: '#/definitions/PVMInstanceReference'
        type: array
    required:
      - pvmInstances
    type: object
  PeerGatewayAddress:
    description: IP address of the Peer Gateway attached to this VPNConnection
    example: 192.168.1.1
    format: ipv4
    type: string
  PeerSubnetUpdate:
    description: CIDR of peer subnet to attach/detach
    properties:
      cidr:
        example: 128.170.1.0/32
        type: string
    required:
      - cidr
    type: object
  PeerSubnets:
    properties:
      peerSubnets:
        description: an array of strings containing CIDR of peer subnets
        example:
          - 128.170.1.0/20
          - 128.169.1.0/24
          - 128.168.1.0/27
          - 128.170.1.0/32
        items:
          type: string
        type: array
    type: object
  PeeringNetwork:
    properties:
      cidr:
        description: Network in CIDR notation (192.168.0.0/24)
        type: string
        x-go-custom-tag: datastore:"cidr"
      dnsServers:
        description: DNS Servers
        items:
          type: string
        type: array
        x-go-custom-tag: datastore:"dnsServers"
        x-omitempty: true
      projectName:
        description: Name of project to be peered
        type: string
        x-go-custom-tag: datastore:"projectName"
    required:
      - projectName
      - cidr
    type: object
  Permissions:
    properties:
      manage:
        description: Determines if role has manage (ex. delete) level access
        type: boolean
      read:
        description: Determines if role has read level access
        type: boolean
      write:
        description: Determines if role has write level access
        type: boolean
    required:
      - read
      - write
      - manage
    type: object
  PinPolicy:
    description: Specify PVM pin policy
    enum:
      - none
      - soft
      - hard
    type: string
  PlacementGroup:
    properties:
      id:
        description: The id of the Placement Group
        type: string
      members:
        description: The List of PVM Instance IDs associated with the Placement Group
        items:
          type: string
        type: array
      name:
        description: The name of the Placement Group
        type: string
      policy:
        description: The Placement Group Policy
        enum:
          - affinity
          - anti-affinity
        type: string
    required:
      - id
      - name
      - policy
      - members
    type: object
  PlacementGroupCreate:
    properties:
      name:
        description: The name of the Placement Group
        type: string
      policy:
        description: The Placement Group Policy
        enum:
          - affinity
          - anti-affinity
        type: string
    required:
      - name
      - policy
    type: object
  PlacementGroupServer:
    properties:
      id:
        description: The ID of the Server
        type: string
    required:
      - id
    type: object
  PlacementGroups:
    properties:
      placementGroups:
        description: List of Server Placement Groups
        items:
          $ref: '#/definitions/PlacementGroup'
        type: array
    required:
      - placementGroups
    type: object
  Plan:
    properties:
      bindable:
        type: boolean
      description:
        type: string
      free:
        default: true
        type: boolean
      id:
        type: string
      metadata:
        $ref: '#/definitions/Metadata'
      name:
        type: string
      schemas:
        $ref: '#/definitions/SchemasObject'
    required:
      - id
      - name
      - description
    type: object
  PolicyVersions:
    example:
      - !!float 1
      - !!float 2
    items:
      type: number
    type: array
  PowerVSInstance:
    description: PowerVS Instance for a specific IBM Cloud Account
    properties:
      capabilities:
        $ref: '#/definitions/InstanceCapabilities'
      creationDate:
        description: The timestamp in which the PowerVS service instance was created
        example: "2022-04-04T16:20:15.581636275Z"
        type: string
      crn:
        description: The PowerVS Service Instance CRN
        example: 'crn:v1:bluemix:public:power-iaas:dal12:a/2bc3df23c0d14ebe921397bd8aa2573a:3a5798f1-4d2b-4e0a-9311-9b0fd6b94698::'
        type: string
      href:
        description: The PowerVS IBM Cloud URL path for UI (Tentative, still need verification that this is possible)
        example: https://cloud.ibm.com/services/power-iaas/crn%3Av1%3Abluemix%3Apublic%3Apower-iaas%3Adal12%3Aa%2F2bc3df23c0d14ebe921397bd8aa2573a%3A5de8348d-bc6a-466e-854f-661d1e86b230%3A%3A
        type: string
      id:
        description: The PowerVS Service Instance ID
        example: 3a5798f1-4d2b-4e0a-9311-9b0fd6b94698
        type: string
      location:
        description: Location of the PowerVS Instance
        example: dal12
        type: string
      locationUrl:
        description: The PowerVS URL path to access specific service instance information
        example: https://us-south.power-iaas.cloud.ibm.com
        type: string
      name:
        description: The name of the service instance (This field will be empty for old accounts as PowerVS did not previously saved the names)
        example: Test Name
        type: string
      privilegedUser:
        description: Defines if the user has administrator privileges
        example: true
        type: boolean
      resourceGroupId:
        description: IBM Resource Group ID associated with the PowerVS Service Instance (This field will be empty for old accounts as PowerVS did not previously saved the Resource Group ID)
        example: 2bf1887bf5c947b1966de2bd88220489
        type: string
      status:
        description: The status of the service instance (PowerVS behavior, if Service Instance exists then then status is active)
        example: Active
        type: string
    required:
      - id
      - name
      - status
      - crn
      - href
      - creationDate
      - locationUrl
      - location
      - privilegedUser
      - capabilities
    type: object
  PowerVSInstances:
    description: The List of PowerVS Instances for a specific IBM Cloud Account
    properties:
      powerVsInstances:
        items:
          $ref: '#/definitions/PowerVSInstance'
        type: array
    required:
      - powerVsInstances
    type: object
  Principal:
    properties:
      credentialType:
        description: Workaround for AT event tracker
        type: string
      crn:
        description: Workaround for AT event tracker
        type: string
      region:
        description: Workaround for API's not having region in their context
        type: string
      resourceGroupCRN:
        description: Workaround for AT event tracker
        type: string
      resourceTarget:
        $ref: '#/definitions/ResourceTargetInfo'
        description: Info about the resource that is being targeted for the action the user/service wants to perform
      serviceInfo:
        $ref: '#/definitions/ServiceAuthenticationInfo'
        description: Object that keeps track of service authentication info
      token:
        $ref: '#/definitions/Token'
        description: OAuth2 Token
      userAccess:
        $ref: '#/definitions/UserAccess'
        description: User Access
      userEmail:
        description: Email of User
        type: string
      userID:
        description: ID of User
        type: string
      userInfo:
        $ref: '#/definitions/UserAuthenticationInfo'
        description: Object that keeps track of user authentication info
    type: object
  RegionStorageTypes:
    description: An array of of storage types supported in a region
    items:
      $ref: '#/definitions/StorageType'
    type: array
  RemoteCopyRelationship:
    properties:
      auxChangedVolumeName:
        description: Name of the volume that is acting as the auxiliary change volume for the relationship
        type: string
      auxVolumeName:
        description: Auxiliary volume name at storage host level
        type: string
      consistencyGroupName:
        description: Consistency Group Name if volume is a part of volume group
        type: string
      copyType:
        description: Indicates the copy type.
        type: string
      cyclingMode:
        description: Indicates the type of cycling mode used.
        type: string
      freezeTime:
        description: Freeze time of remote copy relationship
        format: date-time
        type: string
      masterChangedVolumeName:
        description: Name of the volume that is acting as the master change volume for the relationship
        type: string
      masterVolumeName:
        description: Master volume name at storage host level
        type: string
      name:
        description: Remote copy relationship name
        type: string
      primaryRole:
        description: Indicates whether master/aux volume is playing the primary role
        type: string
      progress:
        description: Indicates the relationship progress
        type: integer
      remoteCopyID:
        description: Remote copy relationship ID
        type: string
      state:
        description: Indicates the relationship state
        type: string
      sync:
        description: Indicates whether the relationship is synchronized
        type: string
    required:
      - name
      - remoteCopyID
    type: object
  ReplicationSites:
    description: list of Replication Sites
    items:
      $ref: '#/definitions/Site'
    type: array
  ResourceAccess:
    additionalProperties:
      $ref: '#/definitions/AccessRole'
    type: object
  ResourceTargetInfo:
    properties:
      region:
        description: Workaround for API's not having region in their context
        type: string
      resourceGroupCRN:
        description: Workaround for AT event tracker
        type: string
      targetCRN:
        description: CRN of the target resource
        type: string
    type: object
  SAPCreate:
    properties:
      deploymentType:
        description: Custom SAP Deployment Type Information (For Internal Use Only)
        type: string
      imageID:
        description: Image ID of the sap image to use for the server
        type: string
      instances:
        $ref: '#/definitions/PVMInstanceMultiCreate'
      name:
        description: Name of the sap pvm-instance
        type: string
      networks:
        description: The pvm instance networks information
        items:
          $ref: '#/definitions/PVMInstanceAddNetwork'
        type: array
      pinPolicy:
        $ref: '#/definitions/PinPolicy'
      placementGroup:
        description: The placement group for the server
        type: string
      profileID:
        description: SAP Profile ID for the amount of cores and memory
        type: string
      sshKeyName:
        description: The name of the SSH Key to provide to the server for authenticating
        type: string
      storageAffinity:
        $ref: '#/definitions/StorageAffinity'
        description: The storage affinity data; ignored if storagePool is provided; Only valid when you deploy one of the IBM supplied stock images. Storage type and pool for a custom image (an imported image or an image that is created from a PVMInstance capture) defaults to the storage type and pool the image was created in
      storagePool:
        description: Storage Pool for server deployment; if provided then storageAffinity and storageType will be ignored; Only valid when you deploy one of the IBM supplied stock images. Storage type and pool for a custom image (an imported image or an image that is created from a PVMInstance capture) defaults to the storage type and pool the image was created in
        type: string
      storageType:
        description: Storage type for server deployment; will be ignored if storagePool or storageAffinity is provided; Only valid when you deploy one of the IBM supplied stock images. Storage type and pool for a custom image (an imported image or an image that is created from a PVMInstance capture) defaults to the storage type and pool the image was created in
        type: string
      sysType:
        description: System type used to host the instance. Only e880, e980, e1080 are supported
        type: string
      userData:
        description: Cloud init user defined data
        type: string
      volumeIDs:
        description: List of Volume IDs to attach to the pvm-instance on creation
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - name
      - imageID
      - profileID
      - networks
    type: object
  SAPProfile:
    properties:
      certified:
        description: Has certification been performed on profile
        type: boolean
      cores:
        description: Amount of cores
        type: integer
      memory:
        description: Amount of memory (in GB)
        type: integer
      profileID:
        description: SAP Profile ID
        type: string
      type:
        default: balanced
        description: Type of profile
        enum:
          - balanced
          - compute
          - memory
          - non-production
          - ultra-memory
        type: string
    required:
      - profileID
      - type
      - cores
      - memory
      - certified
    type: object
  SAPProfileReference:
    properties:
      href:
        description: Link to SAP profile resource
        type: string
      profileID:
        description: SAP Profile ID
        type: string
    required:
      - profileID
      - href
    type: object
  SAPProfiles:
    properties:
      profiles:
        description: SAP Profiles
        items:
          $ref: '#/definitions/SAPProfile'
        type: array
    required:
      - profiles
    type: object
  SPPPlacementGroup:
    properties:
      id:
        description: The id of the Shared Processor Pool Placement Group
        type: string
      memberSharedProcessorPools:
        description: The list of Shared Processor Pool names that are a member of the Shared Processor Pool Placement Group
        items:
          type: string
        type: array
      name:
        description: The name of the Shared Processor Pool Placement Group
        type: string
      policy:
        description: The Shared Processor Pool Placement Group policy
        type: string
    required:
      - id
      - name
      - policy
    type: object
  SPPPlacementGroupCreate:
    properties:
      name:
        description: The name of the Shared Processor Pool Placement Group; minimum of 2 characters, maximum of 12, the only special character allowed is the underscore '_'.
        type: string
      policy:
        description: The placement group policy
        enum:
          - affinity
          - anti-affinity
        type: string
    required:
      - name
      - policy
    type: object
  SPPPlacementGroups:
    properties:
      sppPlacementGroups:
        description: list of Shared Processor Pool Placement Groups
        items:
          $ref: '#/definitions/SPPPlacementGroup'
        type: array
    type: object
  SRC:
    properties:
      src:
        description: The SRC reference code
        type: string
      timestamp:
        description: The date stamp of the SRC
        type: string
    type: object
  SSHKey:
    properties:
      creationDate:
        description: Date of sshkey creation
        format: date-time
        type: string
        x-go-custom-tag: datastore:"creationDate"
        x-isnullable: true
      name:
        description: User defined name for the SSH key
        type: string
        x-go-custom-tag: datastore:"name"
      sshKey:
        description: SSH RSA key
        type: string
        x-go-custom-tag: datastore:"sshKey"
    required:
      - name
      - sshKey
    type: object
  SSHKeys:
    properties:
      sshKeys:
        description: SSH Keys
        items:
          $ref: '#/definitions/SSHKey'
        type: array
    required:
      - sshKeys
    type: object
  SchemaParameters:
    properties:
      parameters:
        $ref: '#/definitions/JSONSchemaObject'
    type: object
  SchemasObject:
    properties:
      service_binding:
        $ref: '#/definitions/ServiceBindingSchemaObject'
      service_instance:
        $ref: '#/definitions/ServiceInstanceSchemaObject'
    type: object
  Service:
    properties:
      bindable:
        type: boolean
      dashboard_client:
        $ref: '#/definitions/DashboardClient'
      description:
        type: string
      iam_compatible:
        type: boolean
      id:
        type: string
      metadata:
        $ref: '#/definitions/Metadata'
      name:
        type: string
      plan_updateable:
        type: boolean
      plans:
        items:
          $ref: '#/definitions/Plan'
        type: array
      provisionable:
        type: boolean
      rc_compatible:
        type: boolean
      requires:
        items:
          enum:
            - syslog_drain
            - route_forwarding
            - volume_mount
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      unique_api_key:
        type: boolean
    required:
      - name
      - id
      - description
      - bindable
      - plans
    type: object
  ServiceAuthenticationInfo:
    properties:
      capabilities:
        $ref: '#/definitions/ResourceAccess'
        description: Map of internal capabilities the user has access to and their level of access
      id:
        description: Service ID
        type: string
      name:
        description: Service Name
        type: string
      token:
        $ref: '#/definitions/Token'
        description: OAuth2 Token
    required:
      - id
      - name
      - token
    type: object
  ServiceBinding:
    properties:
      credentials:
        $ref: '#/definitions/Object'
      route_service_url:
        type: string
      syslog_drain_url:
        type: string
      volume_mounts:
        items:
          $ref: '#/definitions/ServiceBindingVolumeMount'
        type: array
    type: object
  ServiceBindingRequest:
    properties:
      app_guid:
        type: string
        x-deprecated: true
      bind_resource:
        $ref: '#/definitions/ServiceBindingResourceObject'
      context:
        $ref: '#/definitions/Context'
      parameters:
        $ref: '#/definitions/Object'
      plan_id:
        type: string
      service_id:
        type: string
    required:
      - service_id
      - plan_id
    type: object
  ServiceBindingResource:
    properties:
      credentials:
        $ref: '#/definitions/Object'
      parameters:
        $ref: '#/definitions/Object'
      route_service_url:
        type: string
      syslog_drain_url:
        type: string
      volume_mounts:
        items:
          $ref: '#/definitions/ServiceBindingVolumeMount'
        type: array
    type: object
  ServiceBindingResourceObject:
    properties:
      app_guid:
        type: string
      route:
        type: string
    type: object
  ServiceBindingSchemaObject:
    properties:
      create:
        $ref: '#/definitions/SchemaParameters'
    type: object
  ServiceBindingVolumeMount:
    properties:
      container_dir:
        type: string
      device:
        $ref: '#/definitions/ServiceBindingVolumeMountDevice'
      device_type:
        enum:
          - shared
        type: string
      driver:
        type: string
      mode:
        enum:
          - r
          - rw
        type: string
    required:
      - driver
      - container_dir
      - mode
      - device_type
      - device
    type: object
  ServiceBindingVolumeMountDevice:
    properties:
      mount_config:
        $ref: '#/definitions/Object'
      volume_id:
        type: string
    required:
      - volume_id
    type: object
  ServiceInstance:
    properties:
      active:
        description: Indicates (from the viewpoint of the provider) whether the service instance is (perceived) active or not and is meaningful if enabled is true. The default value is true if not specified.
        type: boolean
      enable:
        description: Indicates the current state of the service instance.
        type: boolean
      last_active:
        description: Indicates when the service instance was last accessed or modified, and is meaningful if enabled is true AND active is false. Represented as milliseconds since the epoch, but does not need to be accurate to the second/hour.
        type: number
    required:
      - active
      - enable
      - last_active
    type: object
  ServiceInstanceAsyncOperation:
    properties:
      dashboard_url:
        type: string
      operation:
        type: string
    type: object
  ServiceInstancePreviousValues:
    properties:
      organization_id:
        type: string
        x-deprecated: true
      plan_id:
        type: string
      service_id:
        type: string
        x-deprecated: true
      space_id:
        type: string
        x-deprecated: true
    type: object
  ServiceInstanceProvision:
    properties:
      dashboard_url:
        type: string
    type: object
  ServiceInstanceProvisionRequest:
    properties:
      context:
        $ref: '#/definitions/Context'
      organization_guid:
        type: string
        x-deprecated: true
      parameters:
        $ref: '#/definitions/Object'
      plan_id:
        type: string
      service_id:
        type: string
      space_guid:
        type: string
        x-deprecated: true
    required:
      - service_id
      - plan_id
    type: object
  ServiceInstanceRequest:
    properties:
      enabled:
        description: Indicates the current state of the service instance.
        type: boolean
      initiator_id:
        description: Optional string stating the reason code for the service instance state change. Valid values are BMX_ACCT_ACTIVATE, BMX_SERVICE_INSTANCE_BELOW_CAP for enable calls, and BMX_ACCT_SUSPEND, BMX_SERVICE_INSTANCE_ABOVE_CAP for disable calls.
        type: string
      reason_code:
        description: Optional string showing the user id initiating the call
        type: string
    required:
      - enabled
    type: object
  ServiceInstanceResource:
    properties:
      dashboard_url:
        type: string
      parameters:
        $ref: '#/definitions/Object'
      plan_id:
        type: string
      service_id:
        type: string
    type: object
  ServiceInstanceSchemaObject:
    properties:
      create:
        $ref: '#/definitions/SchemaParameters'
      update:
        $ref: '#/definitions/SchemaParameters'
    type: object
  ServiceInstanceUpdateRequest:
    properties:
      context:
        $ref: '#/definitions/Context'
      parameters:
        $ref: '#/definitions/Object'
      plan_id:
        type: string
      previous_values:
        $ref: '#/definitions/ServiceInstancePreviousValues'
      service_id:
        type: string
    required:
      - service_id
    type: object
  SharedProcessorPool:
    properties:
      allocatedCores:
        description: The amount of allocated processor cores for the Shared Processor Pool
        type: number
      availableCores:
        description: The amount of available processor cores for the Shared Processor Pool
        type: number
      hostGroup:
        description: The host group the host belongs to
        type: string
      hostID:
        description: The ID of the host where the Shared Processor Pool resides
        type: integer
      id:
        description: The id of the Shared Processor Pool
        type: string
      name:
        description: The name of the Shared Processor Pool
        type: string
      reservedCores:
        description: The amount of reserved processor cores for the Shared Processor Pool
        type: integer
      sharedProcessorPoolPlacementGroups:
        description: list of Shared Processor Pool Placement Groups
        items:
          $ref: '#/definitions/SharedProcessorPoolPlacementGroup'
        type: array
      status:
        description: The status of the Shared Processor Pool
        type: string
      statusDetail:
        description: The status details of the Shared Processor Pool
        type: string
    required:
      - id
      - name
      - reservedCores
      - allocatedCores
      - availableCores
    type: object
  SharedProcessorPoolCreate:
    properties:
      hostGroup:
        description: The host group; a host from the group will be automatically selected based on available resources
        type: string
      name:
        description: The name of the Shared Processor Pool; minumum of 2 characters, maximum of 12, the only special character allowed is the underscore '_'.
        type: string
      placementGroupID:
        description: The ID of the placement group
        type: string
      reservedCores:
        description: The amount of reserved processor cores for the Shared Processor Pool; only integers allowed, no fractional values
        type: integer
    required:
      - hostGroup
      - name
      - reservedCores
    type: object
  SharedProcessorPoolDetail:
    properties:
      servers:
        description: list of servers deployed in the Shared Processor Pool
        items:
          $ref: '#/definitions/SharedProcessorPoolServer'
        type: array
      sharedProcessorPool:
        $ref: '#/definitions/SharedProcessorPool'
        type: object
    required:
      - sharedProcessorPool
      - servers
    type: object
  SharedProcessorPoolPlacementGroup:
    properties:
      id:
        description: The id of the Shared Processor Pool Placement Group
        type: string
      name:
        description: The name of the Shared Processor Pool Placement Group
        type: string
      policy:
        description: The Shared Processor Pool Placement Group policy
        type: string
    required:
      - id
      - name
      - policy
    type: object
  SharedProcessorPoolServer:
    properties:
      Cpus:
        description: The amount of cpus for the server
        type: integer
      Uncapped:
        description: Identifies if uncapped or not
        type: boolean
      availabilityZone:
        description: Availability zone for the server
        type: string
      id:
        description: The server ID
        type: string
      memory:
        description: The amount of memory for the server
        type: integer
      name:
        description: The server name
        type: string
      status:
        description: Status of the server
        type: string
      vcpus:
        description: The amout of vcpus for the server
        type: number
    type: object
  SharedProcessorPoolUpdate:
    properties:
      name:
        description: The new name for the Shared Processor Pool; minumum of 2 characters, maximum of 12, the only special character allowed is the underscore '_'.
        type: string
      reservedCores:
        description: The amount of reserved processor cores for the Shared Processor Pool; only integers allowed, no fractional values; the amount can be increased (dependent on available resources) or decreased (dependent on currently allocated resources)
        type: integer
    type: object
  SharedProcessorPools:
    properties:
      sharedProcessorPools:
        description: list of Shared Processor Pools
        items:
          $ref: '#/definitions/SharedProcessorPool'
        type: array
    type: object
  Site:
    properties:
      isActive:
        description: true if location is active , otherwise it is false
        type: boolean
      location:
        description: regionZone of the location
        type: string
    type: object
  Snapshot:
    properties:
      action:
        description: Action performed on the instance snapshot
        type: string
      creationDate:
        description: Creation Date
        format: date-time
        type: string
      description:
        description: Description of the PVM instance snapshot
        type: string
      lastUpdateDate:
        description: Last Update Date
        format: date-time
        type: string
      name:
        description: Name of the PVM instance snapshot
        type: string
      percentComplete:
        description: Snapshot completion percentage
        type: integer
      pvmInstanceID:
        description: PCloud PVM Instance ID
        type: string
      snapshotID:
        description: ID of the PVM instance snapshot
        type: string
      status:
        description: Status of the PVM instancesnapshot
        type: string
      volumeSnapshots:
        additionalProperties:
          description: a volume snapshot ID
          type: string
        description: A map of volume snapshots included in the PVM instance snapshot
        type: object
    required:
      - snapshotID
      - pvmInstanceID
      - name
      - volumeSnapshots
    type: object
  SnapshotCreate:
    properties:
      description:
        description: Description of the PVM instance snapshot
        type: string
      name:
        description: Name of the PVM instance snapshot to create
        type: string
      volumeIDs:
        description: List of volumes to include in the PVM instance snapshot
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - name
    type: object
  SnapshotCreateResponse:
    properties:
      snapshotID:
        description: ID of the PVM instance snapshot
        type: string
    required:
      - snapshotID
    type: object
  SnapshotRestore:
    properties:
      force:
        default: false
        description: By default the VM must be shutoff during a snapshot restore, force set to true will relax the VM shutoff pre-condition.
        type: boolean
    type: object
  SnapshotUpdate:
    properties:
      description:
        description: Description of the PVM instance snapshot
        type: string
      name:
        description: Name of the PVM instance snapshot
        type: string
    type: object
  Snapshots:
    properties:
      snapshots:
        description: List of PVM instance snapshots
        items:
          $ref: '#/definitions/Snapshot'
        type: array
    required:
      - snapshots
    type: object
  SoftlayerSubscription:
    description: Softlayer subscription object
    properties:
      id:
        description: Softlayer ID
        type: string
      state:
        description: State of softlayer subscription
        type: string
    required:
      - id
      - state
    type: object
  SoftwareLicenses:
    properties:
      ibmiCSS:
        default: false
        description: IBMi Cloud Storage Solution
        type: boolean
      ibmiDBQ:
        default: false
        description: IBMi Cloud Storage Solution
        type: boolean
      ibmiPHA:
        default: false
        description: IBMi Power High Availability
        type: boolean
      ibmiRDS:
        default: false
        description: IBMi Rational Dev Studio
        type: boolean
      ibmiRDSUsers:
        description: IBMi Rational Dev Studio Number of User Licenses
        type: integer
        x-omitempty: true
    type: object
  Status:
    properties:
      message:
        description: message detailing current state
        type: string
      progress:
        description: progress of a job
        type: string
      state:
        description: state of a job
        type: string
    required:
      - state
      - progress
    type: object
  StatusDescription:
    description: Status details of the volume group
    properties:
      errors:
        description: List of descriptive error messages.
        items:
          $ref: '#/definitions/StatusDescriptionError'
        type: array
    type: object
  StatusDescriptionError:
    description: Error status details of a volume group
    properties:
      key:
        description: Indicates the volume group error key
        type: string
      message:
        description: Failure message providing more details about the error key
        type: string
      volIDs:
        description: List of volume IDs, which failed to be added/removed to/from the volume-group, with the given error.
        items:
          type: string
        type: array
    type: object
  StockImage:
    description: Stock image detail
    properties:
      id:
        description: Image ID
        type: string
      storagePool:
        description: Storage pool for a stock image
        type: string
      storageType:
        description: Storage type for a stock image
        type: string
    type: object
  StockImages:
    description: List of stock images
    items:
      $ref: '#/definitions/StockImage'
    type: array
  StorageAffinity:
    properties:
      affinityPVMInstance:
        description: PVM Instance (ID or Name) to base storage affinity policy against; required if requesting storage affinity and affinityVolume is not provided
        type: string
        x-isnullable: true
      affinityPolicy:
        description: Affinity policy for storage pool selection; ignored if storagePool provided; for policy 'affinity' requires one of affinityPVMInstance or affinityVolume to be specified; for policy 'anti-affinity' requires one of antiAffinityPVMInstances or antiAffinityVolumes to be specified
        enum:
          - affinity
          - anti-affinity
        type: string
        x-isnullable: true
      affinityVolume:
        description: Volume (ID or Name) to base storage affinity policy against; required if requesting storage affinity and affinityPVMInstance is not provided
        type: string
        x-isnullable: true
      antiAffinityPVMInstances:
        description: List of pvmInstances to base storage anti-affinity policy against; required if requesting storage anti-affinity and antiAffinityVolumes is not provided
        items:
          description: PVM Instance (ID or Name)
          type: string
        type: array
      antiAffinityVolumes:
        description: List of volumes to base storage anti-affinity policy against; required if requesting storage anti-affinity and antiAffinityPVMInstances is not provided
        items:
          description: Volume (ID or Name)
          type: string
        type: array
    type: object
  StorageEntities:
    properties:
      existingEntity:
        description: threshold value to apply to an existing storage entity
        type: integer
      newEntity:
        description: threshold value to apply to a new storage entity
        type: integer
    type: object
  StoragePool:
    properties:
      displayName:
        description: display name of storage pool
        type: string
      drEnabled:
        description: indicates if the storage pool is disaster recovery (dr) enabled
        type: boolean
      name:
        description: name of storage pool
        type: string
      overrideThresholds:
        $ref: '#/definitions/Thresholds'
        description: threshold override settings of a pool
      state:
        description: state of storage pool
        enum:
          - closed
          - opened
        type: string
      type:
        description: type of storage pool
        type: string
    required:
      - name
      - displayName
      - drEnabled
      - state
      - type
    type: object
  StoragePoolCapacity:
    description: Storage pool capacity
    properties:
      maxAllocationSize:
        description: Maximum allocation storage size (GB)
        type: integer
      poolName:
        description: Pool name
        type: string
      storageType:
        description: Storage type of the storage pool
        type: string
      totalCapacity:
        description: Total pool capacity (GB)
        type: integer
    required:
      - maxAllocationSize
    type: object
  StoragePools:
    description: list of storage pools for a region-zone
    items:
      $ref: '#/definitions/StoragePool'
    type: array
  StoragePoolsCapacity:
    description: Storage capacity for all storage pools
    properties:
      maximumStorageAllocation:
        $ref: '#/definitions/MaximumStorageAllocation'
        description: maximum storage allocation
        type: object
      storagePoolsCapacity:
        items:
          $ref: '#/definitions/StoragePoolCapacity'
        type: array
    type: object
  StorageType:
    description: Storage type detail
    properties:
      default:
        description: Identifies if the storage type is the default for a region
        type: boolean
      description:
        description: Description, storage type label
        type: string
      state:
        default: active
        description: State of the storage type (active or inactive)
        enum:
          - active
          - inactive
        type: string
      type:
        description: Storage type
        type: string
    type: object
  StorageTypeCapacity:
    description: Storage type capacity
    properties:
      maximumStorageAllocation:
        $ref: '#/definitions/MaximumStorageAllocation'
        description: maximum storage allocation
        type: object
      storagePoolsCapacity:
        description: List of storage pool capacity for storage type
        items:
          $ref: '#/definitions/StoragePoolCapacity'
        type: array
      storageType:
        description: Storage type
        type: string
    type: object
  StorageTypes:
    additionalProperties:
      $ref: '#/definitions/RegionStorageTypes'
    description: A map of an array of storage types supported in a region
    type: object
  StorageTypesCapacity:
    description: Storage types capacity
    properties:
      maximumStorageAllocation:
        $ref: '#/definitions/MaximumStorageAllocation'
        description: maximum storage allocation
        type: object
      storageTypesCapacity:
        items:
          $ref: '#/definitions/StorageTypeCapacity'
        type: array
    type: object
  System:
    properties:
      cores:
        description: The host available Processor units
        type: number
      id:
        description: The host identifier
        type: integer
      memory:
        description: The host available RAM memory in GiB
        type: integer
    required:
      - memory
      - cores
    type: object
  SystemPool:
    description: Hardware platform detailing its limits and statistics
    properties:
      capacity:
        $ref: '#/definitions/System'
        description: Advertised capacity cores and memory (GB)
        type: object
      coreMemoryRatio:
        description: Processor to Memory (GB) Ratio
        type: number
      maxAvailable:
        $ref: '#/definitions/System'
        description: Maximum configurable cores and memory (GB) (aggregated from all hosts)
        type: object
      maxCoresAvailable:
        $ref: '#/definitions/System'
        description: Maximum configurable cores available combined with available memory of that host
        type: object
      maxMemoryAvailable:
        $ref: '#/definitions/System'
        description: Maximum configurable memory available combined with available cores of that host
        type: object
      sharedCoreRatio:
        $ref: '#/definitions/MinMaxDefault'
        description: min-max-default allocation percentage of shared core per vCPU
        type: object
      systems:
        description: The DataCenter list of servers and their available resources
        items:
          $ref: '#/definitions/System'
        type: array
      type:
        description: Type of system hardware
        type: string
    type: object
  SystemPools:
    additionalProperties:
      $ref: '#/definitions/SystemPool'
    description: List of available system pools within a particular DataCenter
    type: object
  TargetObject:
    description: List of available capabilities for a specific service
    properties:
      name:
        description: The name of the target
        type: string
      type:
        description: The type of the target
        type: string
    required:
      - name
      - type
    type: object
  Task:
    properties:
      cloudInstanceID:
        description: Cloud Instance ID of task owner
        type: string
      componentID:
        description: the component id of the task
        type: string
      componentType:
        description: the component type of the task
        type: string
      creationDate:
        description: Creation Date
        format: date-time
        type: string
      lastUpdateDate:
        description: Last Update Date
        format: date-time
        type: string
      operation:
        description: Task Operation
        type: string
      status:
        description: status code of the task
        type: string
      statusDetail:
        description: status detail of the task
        type: string
      taskID:
        description: Pcloud Task ID
        type: string
    required:
      - taskID
      - cloudInstanceID
      - componentType
      - componentID
      - operation
      - status
      - statusDetail
      - creationDate
      - lastUpdateDate
    type: object
  TaskReference:
    properties:
      href:
        description: Link to Task resource
        type: string
      taskID:
        description: ID of Task used to get status of long running operation
        type: string
    required:
      - taskID
      - href
    type: object
  Tenant:
    properties:
      cloudInstances:
        description: Cloud Instances owned by the Tenant
        items:
          $ref: '#/definitions/CloudInstanceReference'
        type: array
      creationDate:
        description: Date of Tenant creation
        format: date-time
        type: string
      enabled:
        description: Indicates if the tenant is enabled
        type: boolean
      icn:
        description: IBM Customer Number
        type: string
        x-omitempty: true
      peeringNetworks:
        description: Peering Network Information (optional)
        items:
          $ref: '#/definitions/PeeringNetwork'
        type: array
        x-omitempty: true
      sshKeys:
        description: Tenant SSH Keys
        items:
          $ref: '#/definitions/SSHKey'
        type: array
      tenantID:
        description: Tenant ID
        type: string
    required:
      - tenantID
      - enabled
      - creationDate
      - cloudInstances
    type: object
  TenantUpdate:
    properties:
      icn:
        description: IBM Customer Number
        type: string
        x-isnullable: true
      peeringNetworks:
        description: Peering Network Information (optional)
        items:
          $ref: '#/definitions/PeeringNetwork'
        type: array
    type: object
  Thresholds:
    description: storage threshold settings
    properties:
      capacity:
        $ref: '#/definitions/StorageEntities'
        description: capacity threshold
      overcommit:
        $ref: '#/definitions/StorageEntities'
        description: overcommt threshold
      physicalCapacity:
        $ref: '#/definitions/StorageEntities'
        description: physical capacity threshold
      vdiskCapacity:
        $ref: '#/definitions/StorageEntities'
        description: vdisk capacity threshold
      vdiskLimit:
        $ref: '#/definitions/StorageEntities'
        description: vdisk limit threshold
    type: object
  Token:
    properties:
      accessToken:
        description: AccessToken
        type: string
      expires:
        description: Token Expires
        format: date-time
        type: string
      refreshToken:
        description: Refresh Token
        type: string
      type:
        description: Token Type
        type: string
    required:
      - accessToken
      - type
      - refreshToken
      - expires
    type: object
  TokenExtra:
    properties:
      expiresIn:
        description: Number of seconds token will expire
        type: number
      serverTime:
        description: Time on the service broker
        format: date-time
        type: string
      token:
        $ref: '#/definitions/Token'
        description: OAuth Token
      valid:
        description: Is this token valid
        type: boolean
    required:
      - token
      - serverTime
      - expiresIn
      - valid
    type: object
  TokenRequest:
    properties:
      refreshToken:
        description: The refresh token to request the new Access Token
        type: string
      source:
        default: cli
        description: Source type of the token request (web or cli)
        enum:
          - web
          - cli
        type: string
    required:
      - refreshToken
      - source
    type: object
  TransitConnectionErrorItem:
    properties:
      code:
        description: The status code of the transit connection
        type: string
      message:
        description: The trace id for debugging purposes
        type: string
      target:
        $ref: '#/definitions/TargetObject'
    required:
      - code
      - message
    type: object
  TransitGatewayInstance:
    properties:
      errors:
        items:
          $ref: '#/definitions/TransitConnectionErrorItem'
        type: array
        x-omitempty: true
      resourceGroupId:
        description: IBM Resource Group ID associated with the PowerVS Service Instance
        example: 2bf1887bf5c947b1966de2bd88220489
        type: string
      routeDistinguisher:
        description: The route distinguisher for a network
        example: 47902:3255120092
        type: string
      routeTarget:
        description: The route target for a network
        example: 47902:3255120092
        type: string
      serviceCrn:
        description: The PowerVS Service Instance CRN
        example: 'crn:v1:bluemix:public:power-iaas:dal12:a/2bc3df23c0d14ebe921397bd8aa2573a:3a5798f1-4d2b-4e0a-9311-9b0fd6b94698::'
        type: string
      serviceId:
        description: The PowerVS Service Instance ID
        example: 3a5798f1-4d2b-4e0a-9311-9b0fd6b94698
        type: string
      trace:
        description: The trace id for debugging purposes
        type: string
    type: object
  TransitGatewayLocation:
    description: The PER enabled PowerVS Service Location
    properties:
      location:
        description: The Location of the PowerVS Service
        example: dal12
        type: string
      locationType:
        description: Location Type of the PowerVS Service
        enum:
          - region
          - data-center
          - zone
        example: data-center
        type: string
      locationUrl:
        description: The PowerVS Location URL path to access specific service instance information
        example: https://us-south.power-iaas.cloud.ibm.com
        type: string
    required:
      - location
      - locationType
      - locationUrl
    type: object
  TransitGatewayLocations:
    properties:
      transitGatewayLocations:
        description: The List of PER enabled PowerVS Service Locations
        items:
          $ref: '#/definitions/TransitGatewayLocation'
        type: array
    required:
      - transitGatewayLocations
    type: object
  UpdateStoragePool:
    properties:
      displayName:
        description: display name of storage pool
        type: string
        x-isnullable: true
      drEnabled:
        description: indicates if the storage pool is disaster recovery (dr) enabled
        type: boolean
        x-isnullable: true
      overrideThresholds:
        $ref: '#/definitions/Thresholds'
        description: threshold override settings of a pool
      state:
        description: state of storage pool
        enum:
          - closed
          - opened
        type: string
        x-isnullable: true
    type: object
  UpdateVolume:
    properties:
      bootable:
        description: Indicates if the volume is boot capable
        type: boolean
        x-isnullable: true
      name:
        description: Name
        type: string
        x-isnullable: true
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: New Volume size
        type: number
    type: object
  UserAccess:
    description: Keeps tracks of individual user's access and roles
    properties:
      _id:
        description: User ID
        type: string
        x-go-custom-tag: datastore:"id"
        x-go-name: UserID
      _rev:
        type: string
        x-go-custom-tag: datastore:"-"
      baseRole:
        default: user-readonly
        description: Base Role for this User
        enum:
          - user-admin
          - user-readonly
          - service-admin
          - service-readonly
          - disabled
          - pending
        type: string
        x-go-custom-tag: datastore:"baseRole"
        x-isnullable: false
      cloudInstances:
        $ref: '#/definitions/UserAccessCloudInstanceMap'
        description: A map of cloudInstanceID to role
        x-go-custom-tag: datastore:"cloudInstances"
      memberOf:
        description: Member of (Tenants)
        items:
          type: string
        type: array
        x-go-custom-tag: datastore:"memberOf"
      notes:
        description: Notes for development (not used internally)
        type: string
        x-go-custom-tag: datastore:"notes,noindex,omitempty"
    type: object
  UserAccessCloudInstanceMap:
    additionalProperties:
      default: user-readonly
      enum:
        - user-admin
        - user-readonly
        - service-admin
        - service-readonly
        - disabled
        - pending
      type: string
      x-isnullable: false
    type: object
    x-go-type:
      import:
        alias: datastoremodels
        package: github.ibm.com/power-iaas/service-broker/models/datastore
      type: UserAccessCloudInstanceMap
  UserAuthenticationInfo:
    properties:
      accountID:
        description: User Account ID
        type: string
      capabilities:
        $ref: '#/definitions/ResourceAccess'
        description: Map of internal capabilities the user has access to and their level of access
      credentialType:
        description: Workaround for AT event tracker
        type: string
      crnAccess:
        $ref: '#/definitions/ResourceAccess'
        description: Map of the user's CRNs to their level of access
      email:
        description: User Email
        type: string
      id:
        description: User ID
        type: string
      memberOf:
        description: Member of the following tenants
        items:
          description: Tenant Project ID
          type: string
        type: array
      name:
        description: User Name
        type: string
      token:
        $ref: '#/definitions/Token'
        description: OAuth2 Token
    required:
      - id
      - name
      - email
      - accountID
      - token
    type: object
  UserInfo:
    properties:
      email:
        description: User Email
        type: string
      id:
        description: User ID
        type: string
      imageURL:
        description: User Image URL
        type: string
      memberOf:
        description: Member of the following tenants
        items:
          description: Tenant Project ID
          type: string
        type: array
      name:
        description: User Name
        type: string
    required:
      - id
      - name
      - email
    type: object
  VPNConnection:
    properties:
      deadPeerDetection:
        $ref: '#/definitions/DeadPeerDetection'
      id:
        description: unique identifier for VPN Connection
        example: 123e4567-e89b-12d3-a456-42661475
        type: string
      ikePolicy:
        $ref: '#/definitions/IKEPolicyRef'
      ipSecPolicy:
        $ref: '#/definitions/IPSecPolicyRef'
      localGatewayAddress:
        description: local Gateway address, only in 'route' mode.
        example: 192.168.1.1
        type: string
      mode:
        description: Mode used by this VPNConnection, either policy-based, or route-based, this attribute is set at the creation and cannot be updated later.
        enum:
          - policy
          - route
        example: policy
        type: string
      name:
        description: VPN Connection name
        example: VPN-Connection-1
        type: string
      networkIDs:
        description: an array of network IDs
        items:
          type: string
        type: array
      peerGatewayAddress:
        $ref: '#/definitions/PeerGatewayAddress'
      peerSubnets:
        description: an array of strings containing CIDR of peer subnets
        example:
          - 128.170.1.0/20
          - 128.169.1.0/24
          - 128.168.1.0/27
          - 128.170.1.0/32
        items:
          type: string
        type: array
      status:
        description: status of the VPN connection
        enum:
          - active
          - warning
          - disabled
        type: string
      vpnGatewayAddress:
        description: public IP address of the VPN Gateway (vSRX) attached to this VPNConnection
        example: 192.168.204.1
        type: string
    required:
      - deadPeerDetection
      - id
      - ikePolicy
      - ipSecPolicy
      - localGatewayAddress
      - mode
      - name
      - networkIDs
      - peerGatewayAddress
      - peerSubnets
      - status
      - vpnGatewayAddress
    type: object
  VPNConnectionCreate:
    properties:
      ikePolicy:
        description: unique identifier of IKEPolicy selected for this VPNConnection
        example: c36723ec-8593-11eb-8dcd-0242ac133853
        type: string
      ipSecPolicy:
        description: unique identifier of IPSecPolicy selected for this VPNConnection
        example: c12345d-8593-11eb-8dcd-0242ac134573
        type: string
      mode:
        description: Mode used by this VPNConnection, either policy-based, or route-based, this attribute is set at the creation and cannot be updated later.
        enum:
          - policy
          - route
        example: policy
        type: string
      name:
        description: VPN Connection name
        example: VPN-Connection-1
        type: string
      networks:
        description: an array of network IDs to attach to this VPNConnection
        example:
          - 7f950c76-8582-11veb-8dcd-0242ac153
          - 7f950c76-8582-11veb-8dcd-0242ac144
          - 7f950c76-8582-11veb-8dcd-0242ac199
        items:
          type: string
        type: array
      peerGatewayAddress:
        $ref: '#/definitions/PeerGatewayAddress'
      peerSubnets:
        description: an array of strings containing CIDR of peer subnets
        example:
          - 128.170.1.0/20
          - 128.169.1.0/24
          - 128.168.1.0/27
          - 128.170.1.0/32
        items:
          type: string
        type: array
    required:
      - ikePolicy
      - ipSecPolicy
      - mode
      - name
      - networks
      - peerGatewayAddress
      - peerSubnets
    type: object
  VPNConnectionCreateResponse:
    allOf:
      - $ref: '#/definitions/VPNConnection'
    properties:
      jobRef:
        $ref: '#/definitions/JobReference'
  VPNConnectionUpdate:
    additionalProperties: true
    description: VPN Connection object to send during the update
    minProperties: !!float 1
    properties:
      ikePolicy:
        description: unique identifier of IKEPolicy selected for this VPNConnection
        example: c36723ec-8593-11eb-8dcd-0242ac133853
        type: string
      ipSecPolicy:
        description: unique identifier of IPSecPolicy selected for this VPNConnection
        example: c12345d-8593-11eb-8dcd-0242ac134573
        type: string
      name:
        description: VPN Connection name
        example: VPN-Connection-1
        type: string
      peerGatewayAddress:
        $ref: '#/definitions/PeerGatewayAddress'
    type: object
  VPNConnections:
    properties:
      vpnConnections:
        description: an array of VPN Connections
        example:
          - deadPeerDetection:
              action: restart
              interval: !!float 10
              threshold: !!float 5
            id: 123e4567-e89b-12d3-a456-42661475
            ikePolicy:
              id: 7654e321-e89b-12d3-a456-4566447
              name: IKE Policy 3
            ipSecPolicy:
              id: 456f7890-e89b-12d3-a456-4569934
              name: IPSec Policy 2
            localGatewayAddress: 192.168.1.1
            mode: route
            name: VPN Connection 2
            peerGatewayAddress: 192.168.44.1
            peerSubnets:
              - 128.169.1.0/24
              - 128.168.1.0/27
            status: Active
            vpnGatewayAddress: 192.168.24.1
        items:
          $ref: '#/definitions/VPNConnection'
        type: array
    type: object
  VPNaaSOptions:
    properties:
      deadPeerDetection:
        $ref: '#/definitions/DeadPeerDetection'
      ikePolicyOptions:
        $ref: '#/definitions/IKEPolicyOptions'
      ikePolicyTemplate:
        $ref: '#/definitions/IKEPolicyTemplate'
      ipSecPolicyOptions:
        $ref: '#/definitions/IPSecPolicyOptions'
      ipSecPolicyTemplate:
        $ref: '#/definitions/IPSecPolicyTemplate'
    required:
      - deadPeerDetection
      - ikePolicyOptions
      - ikePolicyTemplate
      - ipSecPolicyOptions
      - ipSecPolicyTemplate
    type: object
  Version:
    properties:
      buildDate:
        description: Returns the build time
        type: string
      goVersion:
        description: Returns the current go runtime version
        type: string
      hostname:
        description: Hostname of the responding system
        type: string
      version:
        description: Returns the git versioning information
        type: string
    type: object
  VirtualCores:
    properties:
      assigned:
        description: The active virtual Cores
        minimum: !!float 1
        type: integer
      max:
        description: The maximum DLPAR range for virtual Cores (Display only support)
        type: integer
      min:
        description: The minimum DLPAR range for virtual Cores (Display only support)
        type: integer
    required:
      - assigned
    type: object
  Volume:
    properties:
      auxVolumeName:
        description: Auxiliary volume name at storage host level
        type: string
      auxiliary:
        description: true if volume is auxiliary otherwise false
        type: boolean
        x-isnullable: true
      bootVolume:
        description: Indicates if the volume is the server's boot volume
        type: boolean
        x-isnullable: true
      bootable:
        description: Indicates if the volume is boot capable
        type: boolean
        x-isnullable: true
      consistencyGroupName:
        description: Consistency Group Name if volume is a part of volume group
        type: string
      creationDate:
        description: Creation Date
        format: date-time
        type: string
      deleteOnTermination:
        description: Indicates if the volume should be deleted when the server terminates
        type: boolean
        x-isnullable: true
      diskType:
        description: Type of Disk
        type: string
      groupID:
        description: Volume Group ID
        type: string
      lastUpdateDate:
        description: Last Update Date
        format: date-time
        type: string
      masterVolumeName:
        description: Master volume name at storage host level
        type: string
      mirroringState:
        description: Mirroring state for replication enabled volume
        type: string
      name:
        description: Volume Name
        type: string
      outOfBandDeleted:
        description: true if volume does not exist on storage controller, as volume has been deleted by deleting its paired volume from the mapped replication site.
        type: boolean
      primaryRole:
        description: indicates whether master/aux volume is playing the primary role
        enum:
          - master
          - aux
        type: string
      pvmInstanceIDs:
        description: List of PCloud PVM Instance attached to the volume
        items:
          description: PCloud PVM Instance ID
          type: string
        type: array
      replicationEnabled:
        description: True if volume is replication enabled otherwise false
        type: boolean
        x-isnullable: true
      replicationStatus:
        description: Replication status of a volume
        type: string
      replicationType:
        description: type of replication(metro,global)
        type: string
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: Volume Size
        type: number
      state:
        description: Volume State
        type: string
      volumeID:
        description: Volume ID
        type: string
      volumePool:
        description: Volume pool, name of storage pool where the volume is located
        type: string
      volumeType:
        description: Volume type, name of storage template used to create the volume
        type: string
      wwn:
        description: Volume world wide name
        type: string
    required:
      - volumeID
      - name
      - size
      - creationDate
      - lastUpdateDate
    type: object
  VolumeAction:
    properties:
      replicationEnabled:
        description: Indicates if the volume should be replication enabled or not
        type: boolean
    required:
      - replicationEnabled
    type: object
  VolumeGroup:
    properties:
      consistencyGroupName:
        description: The name of consistencyGroup at storage host level
        type: string
      id:
        description: The ID of the volume group
        type: string
      name:
        description: The name of the volume group
        type: string
      replicationStatus:
        description: Replication status of volume group
        type: string
      status:
        description: Status of the volume group
        type: string
      statusDescription:
        $ref: '#/definitions/StatusDescription'
        description: Status details of the volume group
    required:
      - id
      - name
    type: object
  VolumeGroupAction:
    additionalProperties: true
    description: Performs an action (start stop reset ) on a volume group(one at a time).
    maxProperties: !!float 1
    minProperties: !!float 1
    properties:
      reset:
        $ref: '#/definitions/VolumeGroupActionReset'
      start:
        $ref: '#/definitions/VolumeGroupActionStart'
      stop:
        $ref: '#/definitions/VolumeGroupActionStop'
    type: object
  VolumeGroupActionReset:
    description: Performs reset action on the volume group to update its status value
    properties:
      status:
        default: available
        description: New status to be set for a volume group
        enum:
          - available
        type: string
    required:
      - status
    type: object
  VolumeGroupActionStart:
    description: Performs start action on a volume group
    properties:
      source:
        default: master
        description: Indicates the source of the action
        enum:
          - master
          - aux
        type: string
    required:
      - source
    type: object
  VolumeGroupActionStop:
    description: Performs stop action on a volume group
    properties:
      access:
        description: Indicates the access mode of aux volumes
        type: boolean
    required:
      - access
    type: object
  VolumeGroupCreate:
    properties:
      consistencyGroupName:
        description: The name of consistencyGroup at storage controller level. This is required to onboard existing volume group on the target site for DR set up; name and consistencyGroupName are mutually exclusive.
        type: string
      name:
        description: The name of the volume group. This field is required for creation of new volume group; name and consistencyGroupName are mutually exclusive.
        type: string
      volumeIDs:
        description: List of volume IDs,members of VolumeGroup
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - volumeIDs
    type: object
  VolumeGroupCreateResponse:
    properties:
      id:
        description: The ID of the volume group
        type: string
      name:
        description: The name of the volume group
        type: string
      status:
        description: Status of the volume group
        type: string
      statusDetail:
        description: Status details of the volume group
        type: string
    required:
      - id
      - name
      - status
    type: object
  VolumeGroupDetails:
    properties:
      consistencyGroupName:
        description: The name of volume group at storage host level
        type: string
      id:
        description: The ID of the volume group
        type: string
      name:
        description: The name of the volume group
        type: string
      replicationStatus:
        description: Replication status of volume group
        type: string
      status:
        description: Status of the volume group
        type: string
      statusDescription:
        $ref: '#/definitions/StatusDescription'
        description: Status details of the volume group
      volumeIDs:
        description: List of volume IDs,member of VolumeGroup
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - id
      - name
    type: object
  VolumeGroupRemoteCopyRelationships:
    properties:
      id:
        description: The ID of the volume group
        type: string
      remoteCopyRelationships:
        description: List of remote copy relationships
        items:
          $ref: '#/definitions/RemoteCopyRelationship'
        type: array
    type: object
  VolumeGroupStorageDetails:
    properties:
      consistencyGroupName:
        description: The name of consistency group at storage controller level
        type: string
      cyclePeriodSeconds:
        description: Indicates the minimum period in seconds between multiple cycles
        type: integer
      cyclingMode:
        description: Indicates the type of cycling mode used
        type: string
      numOfvols:
        description: Number of volumes in volume group
        type: integer
      primaryRole:
        description: Indicates whether master/aux volume is playing the primary role
        type: string
      remoteCopyRelationshipNames:
        description: List of remote-copy relationship names in a volume group
        items:
          description: Indicates remote-copy relationship name
          type: string
        type: array
      replicationType:
        description: Type of replication(metro,global)
        type: string
      state:
        description: Indicates the relationship state
        type: string
      sync:
        description: Indicates whether the relationship is synchronized
        type: string
    required:
      - consistencyGroupName
    type: object
  VolumeGroupUpdate:
    properties:
      addVolumes:
        description: List of volume IDs to add to the volume-group
        items:
          description: Volume ID
          type: string
        type: array
      removeVolumes:
        description: List of volume IDs to remove from the volume-group
        items:
          description: Volume ID
          type: string
        type: array
    type: object
  VolumeGroups:
    properties:
      volumeGroups:
        description: The list of volume groups
        items:
          $ref: '#/definitions/VolumeGroup'
        type: array
    required:
      - volumeGroups
    type: object
  VolumeGroupsDetails:
    properties:
      volumeGroups:
        description: The list of volume groups with details
        items:
          $ref: '#/definitions/VolumeGroupDetails'
        type: array
    required:
      - volumeGroups
    type: object
  VolumeInfo:
    properties:
      name:
        description: Name of the volume
        type: string
      volumeID:
        description: ID of the volume
        type: string
    type: object
  VolumeOnboarding:
    allOf:
      - $ref: '#/definitions/VolumeOnboardingCommon'
    properties:
      creationTimestamp:
        description: Indicates the create-time of volume onboarding operation
        format: date-time
        type: string
      progress:
        description: Indicates the progress of volume onboarding operation
        type: number
      results:
        properties:
          onboardedVolumes:
            description: List of volumes which are onboarded successfully
            items:
              type: string
            type: array
          volumeOnboardingFailures:
            items:
              $ref: '#/definitions/VolumeOnboardingFailure'
              type: object
            type: array
        type: object
    type: object
  VolumeOnboardingCommon:
    properties:
      description:
        description: Description of the volume onboarding operation
        type: string
      id:
        description: Indicates the volume onboarding operation id
        type: string
      inputVolumes:
        description: List of volumes requested to be onboarded
        items:
          type: string
        type: array
      status:
        description: Indicates the status of volume onboarding operation
        type: string
    required:
      - id
    type: object
  VolumeOnboardingCreate:
    properties:
      Volumes:
        items:
          $ref: '#/definitions/AuxiliaryVolumesForOnboarding'
          type: object
        type: array
      description:
        description: Description of the volume onboarding operation
        type: string
    required:
      - Volumes
    type: object
  VolumeOnboardingCreateResponse:
    properties:
      description:
        description: Description of the volume onboarding operation
        type: string
      id:
        description: Indicates the volume onboarding operation id
        type: string
    type: object
  VolumeOnboardingFailure:
    properties:
      failureMessage:
        description: The failure reason for the volumes which have failed to be onboarded
        type: string
      volumes:
        description: List of volumes which have failed to be onboarded
        items:
          type: string
        type: array
    type: object
  VolumeOnboardings:
    properties:
      onboardings:
        description: The list of volume onboardings
        items:
          $ref: '#/definitions/VolumeOnboardingCommon'
        type: array
    required:
      - onboardings
    type: object
  VolumeReference:
    properties:
      auxVolumeName:
        description: Auxiliary volume name at storage host level
        type: string
      auxiliary:
        description: true if volume is auxiliary otherwise false
        type: boolean
        x-isnullable: true
      bootVolume:
        description: Indicates if the volume is the server's boot volume
        type: boolean
        x-isnullable: true
      bootable:
        description: Indicates if the volume is boot capable
        type: boolean
        x-isnullable: true
      consistencyGroupName:
        description: Consistency Group Name if volume is a part of volume group
        type: string
      creationDate:
        description: Creation Date
        format: date-time
        type: string
      deleteOnTermination:
        description: Indicates if the volume should be deleted when the server terminates
        type: boolean
        x-isnullable: true
      diskType:
        description: Type of Disk
        type: string
      groupID:
        description: Volume Group ID
        type: string
      href:
        description: Link to Volume resource
        type: string
      lastUpdateDate:
        description: Last Update Date
        format: date-time
        type: string
      masterVolumeName:
        description: Master volume name at storage host level
        type: string
      mirroringState:
        description: mirroring state for replication enabled volume
        type: string
      name:
        description: Volume Name
        type: string
      outOfBandDeleted:
        description: true if volume does not exist on storage controller, as volume has been deleted by deleting its paired volume from the mapped replication site.
        type: boolean
      primaryRole:
        description: indicates whether master/aux volume is playing the primary role
        enum:
          - master
          - aux
        type: string
      pvmInstanceIDs:
        description: List of PCloud PVM Instance attached to the volume
        items:
          description: PCloud PVM Instance ID
          type: string
        type: array
      replicationEnabled:
        description: True if volume is replication enabled otherwise false
        type: boolean
        x-isnullable: true
      replicationStatus:
        description: shows the replication status of a volume
        type: string
      replicationType:
        description: type of replication(metro, global)s
        type: string
      shareable:
        description: Indicates if the volume is shareable between VMs
        type: boolean
        x-isnullable: true
      size:
        description: Volume Size
        type: number
      state:
        description: Volume State
        type: string
      volumeID:
        description: Volume ID
        type: string
      volumePool:
        description: Volume pool, name of storage pool where the volume is located
        type: string
      volumeType:
        description: Volume type, name of storage template used to create the volume
        type: string
      wwn:
        description: Volume world wide name
        type: string
    required:
      - volumeID
      - name
      - state
      - size
      - shareable
      - bootable
      - wwn
      - diskType
      - href
      - creationDate
      - lastUpdateDate
    type: object
  VolumeRemoteCopyRelationship:
    allOf:
      - $ref: '#/definitions/RemoteCopyRelationship'
    properties:
      cyclePeriodSeconds:
        description: Indicates the minimum period in seconds between multiple cycles
        type: integer
      id:
        description: Volume ID
        type: string
    type: object
  Volumes:
    properties:
      volumes:
        description: Volumes
        items:
          $ref: '#/definitions/VolumeReference'
        type: array
    required:
      - volumes
    type: object
  VolumesAttachmentResponse:
    properties:
      summary:
        description: status summary for volume attachment to a PVM Instance
        type: string
    required:
      - summary
    type: object
  VolumesClone:
    properties:
      action:
        description: Current action performed for the volumes-clone request
        type: string
      creationDate:
        description: Creation Date
        format: date-time
        type: string
      failureMessage:
        description: Failure reason for a failed volumes-clone request
        type: string
      lastUpdateDate:
        description: Last Update Date
        format: date-time
        type: string
      name:
        description: Name assigned to a volumes-clone request
        type: string
      percentComplete:
        description: The percent completion for the current action
        type: integer
      status:
        description: Current status of the volumes-clone request
        type: string
      volumesCloneID:
        description: ID assigned to a volumes-clone request
        type: string
    required:
      - percentComplete
    type: object
  VolumesCloneAsyncRequest:
    properties:
      name:
        description: |
          Base name of the new cloned volume(s).
          Cloned Volume names will be prefixed with 'clone-'
              and suffixed with '-#####' (where ##### is a 5 digit random number)
          If multiple volumes cloned they will be further suffixed with an incremental number starting with 1.
            Example volume names using name="volume-abcdef"
              single volume clone will be named "clone-volume-abcdef-83081"
              multi volume clone will be named "clone-volume-abcdef-73721-1", "clone-volume-abcdef-73721-2", ...
        type: string
      volumeIDs:
        description: List of volumes to be cloned
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - name
      - volumeIDs
    type: object
  VolumesCloneCancel:
    properties:
      force:
        description: |
          default False, Cancel will only be allowed if the status is 'prepared', or 'available'
          True, Cancel will be allowed when the status is NOT completed, cancelling, cancelled, or failed
        type: boolean
    type: object
  VolumesCloneCreate:
    properties:
      name:
        description: |
          Unique name within a cloud instance used to identify a volumes-clone request
          name can be used in replace of a volumesCloneID when used as a URL path parameter
        type: string
      volumeIDs:
        description: List of volumes to be cloned
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - name
      - volumeIDs
    type: object
  VolumesCloneDetail:
    properties:
      action:
        description: Current action performed for the volumes-clone request
        type: string
      clonedVolumes:
        description: List of cloned volumes created from the volumes-clone request
        items:
          $ref: '#/definitions/ClonedVolumeDetail'
        type: array
      creationDate:
        description: Creation Date
        format: date-time
        type: string
      failureMessage:
        description: Failure reason for a failed volumes-clone request
        type: string
      lastUpdateDate:
        description: Last Update Date
        format: date-time
        type: string
      name:
        description: Name assigned to a volumes-clone request
        type: string
      percentComplete:
        description: The percent completion for the current action
        type: integer
      status:
        description: Current status of the volumes-clone request
        type: string
      volumesCloneID:
        description: ID assigned to a volumes-clone request
        type: string
    required:
      - percentComplete
    type: object
  VolumesCloneExecute:
    properties:
      name:
        description: |
          Base name of the new cloned volume(s).
          Cloned Volume names will be prefixed with 'clone-'
              and suffixed with '-#####' (where ##### is a 5 digit random number)
          If multiple volumes cloned they will be further suffixed with an incremental number starting with 1.
            Example volume names using name="volume-abcdef"
              single volume clone will be named "clone-volume-abcdef-83081"
              multi volume clone will be named "clone-volume-abcdef-73721-1", "clone-volume-abcdef-73721-2", ...
        type: string
      rollbackPrepare:
        description: |
          default False, Execute failure rolls back clone activity but leaves prepared snapshot
          True, Execute failure rolls back clone activity and removes the prepared snapshot
        type: boolean
    required:
      - name
    type: object
  VolumesCloneRequest:
    properties:
      displayName:
        description: |
          Display name for the new cloned volumes.
          Cloned Volume names will be prefixed with 'clone-'.
          If multiple volumes cloned they will be suffix with a '-' and an incremental number starting with 1.
            Example volume names using displayName="volume-abcdef"
              single volume clone will be named "clone-volume-abcdef"
              multi volume clone will be named "clone-volume-abcdef-1", "clone-volume-abcdef-2", ...
        type: string
      volumeIDs:
        description: List of volumes to be cloned
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - displayName
      - volumeIDs
    type: object
  VolumesCloneResponse:
    properties:
      additionalProperties:
        description: ID of the new cloned volume
        type: string
      clonedVolumes:
        description: A map of volume IDs to cloned volume IDs
        type: object
    type: object
  VolumesClones:
    properties:
      volumesClone:
        description: list of volumes-clone requests
        items:
          $ref: '#/definitions/VolumesClone'
        type: array
    type: object
  volumesAttach:
    properties:
      volumeIDs:
        description: List of volumes to be attached to a PVM instance
        items:
          description: Volume ID
          type: string
        type: array
    required:
      - volumeIDs
    type: object
externalDocs:
  description: IBM Power IAAS Service Broker
  url: https://github.ibm.com/power-iaas/service-broker
info:
  contact:
    email: kylej@us.ibm.com
    name: Power iaas Service Broker
    url: https://github.ibm.com/power-iaas
  description: Power IAAS API
  title: Power iaas API
  version: 1.0.0
parameters:
  APIVersion:
    description: version number of the Service Broker API that the Platform will use
    in: header
    name: X-Broker-API-Version
    required: true
    type: string
  IBM-UserAuthorization:
    description: Authentication of the user that initiated the request from the TGW Platform
    in: header
    name: IBM-UserAuthorization
    required: true
    type: string
  OriginatingIdentity:
    description: identity of the user that initiated the request from the Platform
    in: header
    name: X-Broker-API-Originating-Identity
    type: string
  accept_language:
    description: The language requested for the return document
    in: header
    name: Accept-Language
    type: string
  accepts_incomplete:
    description: asynchronous operations supported
    in: query
    name: accepts_incomplete
    type: boolean
  accessType:
    default: online
    description: Determines if a refresh token is returned
    enum:
      - online
      - offline
    in: query
    name: access_type
    type: string
  affinity:
    description: A pvmInstance (id or name), limits a volumes list response to only volumes that have affinity to the pvmInstance
    in: query
    name: affinity
    type: string
  auxiliary:
    description: true or false, limits a volume list to auxiliary or non auxiliary volumes
    in: query
    name: auxiliary
    type: boolean
  binding_id:
    description: binding id of binding to create
    in: path
    name: binding_id
    required: true
    type: string
  clone_task_id:
    description: Volumes Clone Task ID
    in: path
    name: clone_task_id
    required: true
    type: string
  cloud_connection_id:
    description: Cloud Connection ID
    in: path
    name: cloud_connection_id
    required: true
    type: string
  cloud_instance_id:
    description: Cloud Instance ID of a PCloud Instance
    in: path
    name: cloud_instance_id
    required: true
    type: string
  delete_data_volumes:
    description: Indicates if all data volumes attached to the PVMInstance should be deleted when deleting the PVMInstance. Shared data volumes will be deleted if there are no other PVMInstances attached.
    in: query
    name: delete_data_volumes
    type: boolean
  dhcp_id:
    description: The ID of the DHCP Server
    in: path
    name: dhcp_id
    required: true
    type: string
    x-tag: Internal
  event_id:
    description: Event ID
    in: path
    name: event_id
    required: true
    type: string
  filter:
    description: A filter expression that filters resources listed in the response
    in: query
    name: filter
    type: string
  from_time:
    description: A from query time in either ISO 8601 or unix epoch format
    in: query
    name: from_time
    type: string
  hostname:
    description: Hostname
    in: path
    name: hostname
    required: true
    type: string
  icn:
    description: IBM Customer Number (ICN) for this tenant
    in: query
    name: icn
    required: true
    type: string
  ike_policy_id:
    description: ID of a IKE Policy
    in: path
    name: ike_policy_id
    required: true
    type: string
  image_id:
    description: Image ID of a image
    in: path
    name: image_id
    required: true
    type: string
  include_sap_images:
    description: Include SAP images with get available stock images
    in: query
    name: sap
    type: boolean
  include_vtl_images:
    description: Include VTL images with get available stock images
    in: query
    name: vtl
    type: boolean
  instance_id:
    description: instance id of instance to provision
    in: path
    name: instance_id
    required: true
    type: string
  ipsec_policy_id:
    description: ID of a IPSec Policy
    in: path
    name: ipsec_policy_id
    required: true
    type: string
  job_id:
    description: PCloud Job ID
    in: path
    name: job_id
    required: true
    type: string
  network_id:
    description: Network ID
    in: path
    name: network_id
    required: true
    type: string
  openstack_id:
    description: Openstack ID
    in: path
    name: openstack_id
    required: true
    type: string
  operation_action:
    description: Operation action to filter jobs (optional) vmCapture - includes operation action value (vmCapture) imageExport - includes operation action value (imageExport) imageImport - includes operation action value (imageImport) storage - includes operation action values (vmCapture,imageExport,imageImport)
    enum:
      - vmCapture
      - imageExport
      - imageImport
      - storage
    in: query
    name: operation.action
    type: string
  operation_id:
    description: Operation ID to filter jobs (optional)
    in: query
    name: operation.id
    type: string
  operation_target:
    description: Operation target to filter jobs (optional)
    enum:
      - cloudConnection
      - pvmInstance
      - image
      - vpnConnection
    in: query
    name: operation.target
    type: string
  placement_group_id:
    description: Placement Group ID
    in: path
    name: placement_group_id
    required: true
    type: string
  plan:
    description: Plan for this tenant and entitlement
    in: query
    name: plan
    required: true
    type: string
  plan_id:
    description: id of the plan associated with the instance being deleted
    in: query
    name: plan_id
    required: true
    type: string
  port_id:
    description: Port ID
    in: path
    name: port_id
    required: true
    type: string
  powervs_location:
    description: The PowerVS Location
    in: query
    name: powervs_location
    type: string
  powervs_service_crn:
    description: The PowerVS Service Instance CRN (Targeting)
    in: path
    name: powervs_service_crn
    required: true
    type: string
  pvm_instance_id:
    description: PCloud PVM Instance ID
    in: path
    name: pvm_instance_id
    required: true
    type: string
  redirectURL:
    description: The URL to redirect to after login/registration
    in: query
    name: redirect_url
    type: string
  regionZone:
    description: The region zone of the cloud instance
    enum:
      - us-south
      - us-east
      - eu-de-1
      - eu-de-2
      - us-east4
    in: query
    name: regionZone
    type: string
  region_zone_id:
    description: ID of a Power Cloud Region Zone
    in: path
    name: region_zone_id
    required: true
    type: string
  regions:
    description: An array of regions matching the number of cloud-instances in the plan
    in: query
    items:
      type: string
    name: regions
    required: true
    type: array
  registrationEntitlementID:
    description: Entitlement ID of for this tenant
    in: query
    name: entitlement_id
    required: true
    type: string
  registrationTenantID:
    description: Tenant ID of a pcloud tenant
    in: query
    name: tenant_id
    required: true
    type: string
  replication_enabled:
    description: true or false, limits a volumes list to replication or non replication enabled volumes
    in: query
    name: replicationEnabled
    type: boolean
  restore_fail_action:
    description: Action to take on a failed snapshot restore
    enum:
      - retry
      - rollback
    in: query
    name: restore_fail_action
    type: string
  sap_profile_id:
    description: SAP Profile ID
    in: path
    name: sap_profile_id
    required: true
    type: string
  service_id:
    description: id of the service associated with the instance being deleted
    in: query
    name: service_id
    required: true
    type: string
  shared_processor_pool_id:
    description: Shared Processor Pool ID or Name
    in: path
    name: shared_processor_pool_id
    required: true
    type: string
  snapshot_id:
    description: PVM Instance snapshot id
    in: path
    name: snapshot_id
    required: true
    type: string
  spp_placement_group_id:
    description: Shared Processor Pool Placement Group ID or Name
    in: path
    name: spp_placement_group_id
    required: true
    type: string
  sshkey_name:
    description: SSH key name for a pcloud tenant
    in: path
    name: sshkey_name
    required: true
    type: string
  storage_pool_name:
    description: Storage pool name
    in: path
    name: storage_pool_name
    required: true
    type: string
  storage_type_name:
    description: Storage type name
    in: path
    name: storage_type_name
    required: true
    type: string
  t:
    description: seconds
    in: query
    name: t
    required: true
    type: integer
  task_id:
    description: PCloud Task ID
    in: path
    name: task_id
    required: true
    type: string
  tenant_id:
    description: Tenant ID of a pcloud tenant
    in: path
    name: tenant_id
    required: true
    type: string
  time:
    description: (deprecated - use from_time) A time in either ISO 8601 or unix epoch format
    in: query
    name: time
    type: string
  to_time:
    description: A to query time in either ISO 8601 or unix epoch format
    in: query
    name: to_time
    type: string
  userID:
    description: The user id of the user
    in: query
    name: user_id
    type: string
  volume_group_id:
    description: The ID of the volume group
    in: path
    name: volume_group_id
    required: true
    type: string
  volume_id:
    description: Volume ID
    in: path
    name: volume_id
    required: true
    type: string
  volume_onboarding_id:
    description: Indicates volume onboarding operation id
    in: path
    name: volume_onboarding_id
    required: true
    type: string
  volumes_clone_filter:
    description: |
      volumes-clone filter to limit list items:
        prepare - includes status values (preparing, prepared)
        start   - includes status values (starting, available)
        execute - includes status values (executing, available-rollback)
        cancel  - includes status values (cancelling)
        completed - includes status values (completed)
        failed - includes status values (failed)
        cancelled - includes status values (cancelled)
        finalized - included status values (completed, failed, cancelled)
    enum:
      - prepare
      - start
      - execute
      - cancel
      - completed
      - failed
      - cancelled
      - finalized
    in: query
    name: filter
    type: string
  volumes_clone_id:
    description: Volumes Clone ID
    in: path
    name: volumes_clone_id
    required: true
    type: string
  vpn_connection_id:
    description: ID of a VPN connection
    in: path
    name: vpn_connection_id
    required: true
    type: string
paths:
  /auth/v1/callback:
    get:
      operationId: serviceBroker.auth.callback
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Returns an accessToken (and set cookie)
      tags:
        - Authentication
  /auth/v1/callback-registration:
    get:
      operationId: serviceBroker.auth.registration.callback
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Associates the user with a tenant and returns an accessToken
      tags:
        - Authentication
  /auth/v1/device/code:
    post:
      consumes:
        - application/json
      operationId: serviceBroker.auth.device.code.post
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeviceCode'
        "403":
          description: Quota exceeded
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Request a authorization device code
      tags:
        - Authentication
  /auth/v1/device/token:
    post:
      consumes:
        - application/json
      operationId: serviceBroker.auth.device.token.post
      parameters:
        - description: Parameters for polling authorization device code
          in: body
          name: body
          required: true
          schema:
            properties:
              deviceCode:
                description: The deviceCode that the authorization server returned
                type: string
            type: object
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Authorization pending
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: User refused grant
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: Polling too frequently
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Poll for authorization device token
      tags:
        - Authentication
  /auth/v1/info/token:
    get:
      operationId: serviceBroker.auth.info.token
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TokenExtra'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Information about current access token
      tags:
        - Authentication
  /auth/v1/info/user:
    get:
      operationId: serviceBroker.auth.info.user
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Information about current user
      tags:
        - Authentication
  /auth/v1/login:
    get:
      operationId: serviceBroker.auth.login
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Login
      tags:
        - Authentication
    parameters:
      - $ref: '#/parameters/userID'
      - $ref: '#/parameters/redirectURL'
      - $ref: '#/parameters/accessType'
  /auth/v1/logout:
    get:
      operationId: serviceBroker.auth.logout
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Logout
      tags:
        - Authentication
  /auth/v1/registration:
    get:
      operationId: serviceBroker.auth.registration
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Registration of a new Tenant and Login
      tags:
        - Authentication
    parameters:
      - $ref: '#/parameters/registrationTenantID'
      - $ref: '#/parameters/registrationEntitlementID'
      - $ref: '#/parameters/plan'
      - $ref: '#/parameters/icn'
      - $ref: '#/parameters/regions'
      - $ref: '#/parameters/redirectURL'
  /auth/v1/token:
    post:
      consumes:
        - application/json
      operationId: serviceBroker.auth.token.post
      parameters:
        - description: Parameters for requesting a new Token from a Refresh Token
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TokenRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Authorization pending
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: User refused grant
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: Polling too frequently
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Request a new token from a refresh token
      tags:
        - Authentication
  /bluemix_v1/service_instances/{instance_id}:
    get:
      operationId: bluemix.serviceInstance.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: Get the current state information associated with the service instance
      tags:
        - BluemixServiceInstances
    parameters:
      - $ref: '#/parameters/instance_id'
    put:
      consumes:
        - application/json
      operationId: bluemix.serviceInstance.put
      parameters:
        - description: parameters for the requested state of a provisioned service
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceInstanceRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: Update (disable or enable) the state of a provisioned service instance.
      tags:
        - BluemixServiceInstances
  /broker/v1/hardware-platforms:
    get:
      operationId: serviceBroker.hardwareplatforms.get
      parameters:
        - $ref: '#/parameters/regionZone'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HardwarePlatforms'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Available hardware statistics and limits
      tags:
        - HardwarePlatforms
  /broker/v1/health:
    get:
      operationId: serviceBroker.health
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Health'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Get current server health
      tags:
        - IaasServiceBroker
    head:
      operationId: serviceBroker.health.head
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Health'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Get current server health
      tags:
        - IaasServiceBroker
  /broker/v1/openstacks:
    get:
      operationId: serviceBroker.openstacks.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OpenStacks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List all OpenStack instances being managed
      tags:
        - OpenStacks
    post:
      consumes:
        - application/json
      operationId: serviceBroker.openstacks.post
      parameters:
        - description: Parameters for the creation of a new Open Stack Instance
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OpenStackCreate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OpenStack'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/OpenStack'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new OpenStack instance to be managed
      tags:
        - OpenStacks
  /broker/v1/openstacks/{openstack_id}:
    get:
      operationId: serviceBroker.openstacks.openstack.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OpenStackInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List account information for all pvm instances on hostname
      tags:
        - OpenStacks
    parameters:
      - $ref: '#/parameters/openstack_id'
  /broker/v1/openstacks/{openstack_id}/hosts/{hostname}:
    get:
      operationId: serviceBroker.openstacks.hosts.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HostInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List account information for all pvm instances on hostname
      tags:
        - OpenStacks
    parameters:
      - $ref: '#/parameters/hostname'
      - $ref: '#/parameters/openstack_id'
  /broker/v1/openstacks/{openstack_id}/servers/{pvm_instance_id}:
    get:
      operationId: serviceBroker.openstacks.servers.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HostPVMInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List account information for a pvm instance
      tags:
        - OpenStacks
    parameters:
      - $ref: '#/parameters/openstack_id'
      - $ref: '#/parameters/pvm_instance_id'
  /broker/v1/storage-types:
    get:
      operationId: serviceBroker.storagetypes.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StorageTypes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security: []
      summary: Available storage types in a region
      tags:
        - StorageTypes
  /broker/v1/test/timeout:
    get:
      operationId: serviceBroker.test.timeout
      parameters:
        - $ref: '#/parameters/t'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
      security: []
      summary: Get current server version
      tags:
        - IaasServiceBroker
  /broker/v1/version:
    get:
      operationId: serviceBroker.version
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Version'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
      summary: Get current server version
      tags:
        - IaasServiceBroker
  /internal/v1/powervs/instances:
    get:
      operationId: internal.v1.powervs.instances.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PowerVSInstances'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get List of PowerVS Cloud Instances
      tags:
        - InternalPowerVSInstances
    parameters:
      - $ref: '#/parameters/powervs_location'
  /internal/v1/powervs/locations/transit-gateway:
    get:
      operationId: internal.v1.powervs.locations.transitgateway.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransitGatewayLocations'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get List of PER enabled PowerVS Locations
      tags:
        - InternalPowerVSLocations
  /internal/v1/storage/regions/{region_zone_id}/storage-pools:
    get:
      operationId: internal.v1.storage.regions.storage-pools.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StoragePools'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the current storage pools settings for a region-zone
      tags:
        - InternalStorageRegions
    parameters:
      - $ref: '#/parameters/region_zone_id'
  /internal/v1/storage/regions/{region_zone_id}/storage-pools/{storage_pool_name}:
    get:
      operationId: internal.v1.storage.regions.storage-pools.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StoragePools'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the settings for given pool name
      tags:
        - InternalStorageRegions
    parameters:
      - $ref: '#/parameters/region_zone_id'
      - $ref: '#/parameters/storage_pool_name'
    put:
      consumes:
        - application/json
      operationId: internal.v1.storage.regions.storage-pools.put
      parameters:
        - description: Parameters for updating a storage pool
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateStoragePool'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StoragePool'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update the settings for given pool name
      tags:
        - InternalStorageRegions
  /internal/v1/storage/regions/{region_zone_id}/thresholds:
    get:
      operationId: internal.v1.storage.regions.thresholds.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Thresholds'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the current default threshold settings for a region-zone
      tags:
        - InternalStorageRegions
    parameters:
      - $ref: '#/parameters/region_zone_id'
    put:
      consumes:
        - application/json
      operationId: internal.v1.storage.regions.thresholds.put
      parameters:
        - description: Parameters for updating default threshold settings for a region-zone
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Thresholds'
      produces:
        - application/json
      responses:
        "202":
          description: OK, region-zone default threshold settings update
          schema:
            $ref: '#/definitions/Thresholds'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a default threshold setting for a region-zone
      tags:
        - InternalStorageRegions
  /internal/v1/transit-gateway/{powervs_service_crn}:
    get:
      operationId: internal.v1.transitgateway.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TransitGatewayInstance'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
      summary: Get the Cloud Instance Transit Gateway information
      tags:
        - InternalTransitGateway
    parameters:
      - $ref: '#/parameters/powervs_service_crn'
      - $ref: '#/parameters/IBM-UserAuthorization'
  /pcloud/v1/cloud-instances/{cloud_instance_id}:
    delete:
      operationId: pcloud.cloudinstances.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Power Cloud Instance
      tags:
        - PCloudInstances
      x-tag: Internal
    get:
      operationId: pcloud.cloudinstances.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CloudInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a Cloud Instance's current state/information
      tags:
        - PCloudInstances
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.cloudinstances.put
      parameters:
        - description: Parameters for updating a Power Cloud Instance
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CloudInstanceUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CloudInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update / Upgrade a Cloud Instance
      tags:
        - PCloudInstances
      x-tag: Internal
  /pcloud/v1/cloud-instances/{cloud_instance_id}/cloud-connections:
    get:
      operationId: pcloud.cloudconnections.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              cloudConnections:
                - cloudConnectionID: fc010e03-4a07-4bd0-aec9-571fcac5f17f
                  creationDate: "2021-02-26T20:39:53.696Z"
                  globalRouting: false
                  ibmIPAddress: 1.2.3.4/5
                  linkStatus: connect
                  metered: false
                  name: powervs-cloud-connection-1
                  port: !!float 0
                  speed: !!float 1000
                  userIPAddress: 1.2.3.4/5
                - cloudConnectionID: ec610e13-4a07-4bd0-aec9-571fcac5f17d
                  creationDate: "2021-02-26T20:40:52.100Z"
                  globalRouting: false
                  ibmIPAddress: 1.2.3.4/5
                  linkStatus: connect
                  metered: false
                  name: powervs-cloud-connection-2
                  port: !!float 0
                  speed: !!float 1000
                  userIPAddress: 1.2.3.4/5
          schema:
            $ref: '#/definitions/CloudConnections'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all cloud connections in this cloud instance
      tags:
        - PCloudCloudConnections
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.cloudconnections.post
      parameters:
        - description: Parameters for the creation of a new cloud connection
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CloudConnectionCreate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              cloudConnectionID: fc010e03-4a07-4bd0-aec9-571fcac5f17f
              creationDate: "2021-02-28T22:42:54.574Z"
              globalRouting: true
              ibmIPAddress: 1.2.3.4/5
              linkStatus: idle
              metered: true
              name: powervs-cloud-connection
              port: !!float 0
              speed: !!float 5000
              userIPAddress: 1.2.3.4/5
          schema:
            $ref: '#/definitions/CloudConnection'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/CloudConnection'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/CloudConnectionCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        "504":
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new cloud connection
      tags:
        - PCloudCloudConnections
  /pcloud/v1/cloud-instances/{cloud_instance_id}/cloud-connections-virtual-private-clouds:
    get:
      operationId: pcloud.cloudconnections.virtualprivateclouds.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              virtualPrivateClouds:
                - classicAccess: false
                  name: datacenter1-powervs-virtual-private-cloud
                  status: available
                  vpcID: crn:v1...
                - classicAccess: false
                  name: datacenter2-powervs-virtual-private-cloud
                  status: available
                  vpcID: crn:v1...
          schema:
            $ref: '#/definitions/CloudConnectionVirtualPrivateClouds'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        "504":
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
      summary: Get all virtual private cloud connections in this cloud instance
      tags:
        - PCloudCloudConnections
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/cloud-connections/{cloud_connection_id}:
    delete:
      operationId: pcloud.cloudconnections.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Cloud Connection
      tags:
        - PCloudCloudConnections
    get:
      operationId: pcloud.cloudconnections.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              classic:
                enabled: true
                gre:
                  destIPAddress: 1.2.3.4
                  sourceIPAddress: 10.0.0.1
              cloudConnectionID: fc010e03-4a07-4bd0-aec9-571fcac5f17f
              creationDate: "2021-02-28T22:42:54.574Z"
              globalRouting: true
              ibmIPAddress: 1.2.3.4/5
              linkStatus: idle
              metered: false
              name: powervs-cloud-connection-1
              networks:
                - href: /pcloud/v1/cloud-instances/9f7b1c66a7bc6404908dd5e0c2e24ec8/networks/295784b0-a7d2-4752-8ad5-e894529895b2
                  jumbo: false
                  name: powervs-cloud-connections-network
                  networkID: 295784b0-a7d2-4752-8ad5-e894529895b2
                  type: vlan
                  vlanID: !!float 3254
              port: !!float 0
              speed: !!float 5000
              userIPAddress: 1.2.3.4/5
              vpc:
                enabled: true
                vpcs:
                  - name: vpc-fc010e03-4a07-4bd0-aec9-571fcac5f17f-0
                    vpcID: crn:v1...
          schema:
            $ref: '#/definitions/CloudConnection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a cloud connection's state/information
      tags:
        - PCloudCloudConnections
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/cloud_connection_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.cloudconnections.put
      parameters:
        - description: Parameters to update a Cloud Connection
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CloudConnectionUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CloudConnection'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/Error'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a Cloud Connection
      tags:
        - PCloudCloudConnections
  /pcloud/v1/cloud-instances/{cloud_instance_id}/cloud-connections/{cloud_connection_id}/networks/{network_id}:
    delete:
      operationId: pcloud.cloudconnections.networks.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a network from a Cloud Connection
      tags:
        - PCloudCloudConnections
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/cloud_connection_id'
      - $ref: '#/parameters/network_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.cloudconnections.networks.put
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add a network to the cloud connection
      tags:
        - PCloudCloudConnections
  /pcloud/v1/cloud-instances/{cloud_instance_id}/cos-images:
    get:
      operationId: pcloud.v1.cloudinstances.cosimages.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              createTimestamp: "2021-08-09T20:17:39.827Z"
              id: c113467d-8419-449c-8d81-259dda713d9f
              operation:
                action: imageImport
                id: b81ea020-bb47-452e-af96-8523c68e
                target: image
              status:
                message: download of  <imageFileName>.ova.gz from <bucketname> is in progress
                progress: imageDownloadMonitor
                state: running
          schema:
            $ref: '#/definitions/Job'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get detail of last cos-image import job
      tags:
        - PCloudImages
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v1.cloudinstances.cosimages.post
      parameters:
        - description: Parameters for the creation of a new cos-image import job
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateCosImageImportJob'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted, cos-image import successfully added to the jobs queue
          examples:
            application/json:
              href: pcloud/v1/jobs/c113467d-8419-449c-8d83-259dda713d9e
              jobID: c113467d-8419-449c-8d83-259dda713d9e
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create an cos-image import job
      tags:
        - PCloudImages
  /pcloud/v1/cloud-instances/{cloud_instance_id}/events:
    get:
      operationId: pcloud.events.getquery
      parameters:
        - $ref: '#/parameters/time'
        - $ref: '#/parameters/from_time'
        - $ref: '#/parameters/to_time'
        - $ref: '#/parameters/accept_language'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              events:
                - action: create
                  eventID: d20d80f7-c87c-4ab7-bea2-2bc4736e7c2e
                  level: info
                  message: Power virtual server instance 'stg-provision-test-eu-de' has been created successfully.
                  metadata:
                    pvmInstanceID: 27380612-2062-46ec-ae5b-9e723ede304d
                  resource: pvm-instance
                  time: "2020-04-20T00:17:40.772Z"
                  timestamp: !!float 1587341860
                  user:
                    email: unknown@us.ibm.com
                    name: Unknown User
                    userID: "1234567890"
          schema:
            $ref: '#/definitions/Events'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get events from this cloud instance since a specific timestamp
      tags:
        - PCloudEvents
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/events/{event_id}:
    get:
      operationId: pcloud.events.get
      parameters:
        - $ref: '#/parameters/accept_language'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              action: create
              eventID: d20d80f7-c87c-4ab7-bea2-2bc4736e7c2e
              level: info
              message: Power virtual server instance 'stg-provision-test-eu-de' has been created successfully.
              metadata:
                pvmInstanceID: 27380612-2062-46ec-ae5b-9e723ede304d
              resource: pvm-instance
              time: "2020-04-20T00:17:40.772Z"
              timestamp: !!float 1587341860
              user:
                email: unknown@us.ibm.com
                name: Unknown User
                userID: "1234567890"
          schema:
            $ref: '#/definitions/Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a single event
      tags:
        - PCloudEvents
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/event_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/images:
    get:
      operationId: pcloud.cloudinstances.images.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              images:
                - creationDate: "2019-12-04T19:45:48.000Z"
                  description: ""
                  href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/images/938b1104-18bc-4666-a384-b205793aab86
                  imageID: 938b1104-18bc-4666-a384-b205793aab86
                  lastUpdateDate: "2019-12-04T19:46:19.000Z"
                  name: "7100-05-04"
                  specifications:
                    architecture: ppc64
                    containerFormat: bare
                    diskFormat: raw
                    endianness: big-endian
                    hypervisorType: phyp
                    imageType: stock
                    operatingSystem: aix
                  state: active
                  storageType: tier3-gen2
                - creationDate: "2019-09-11T16:10:00.000Z"
                  description: ""
                  href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/images/b39f1013-6d26-4585-856d-8aa4ea5e9ee9
                  imageID: b39f1013-6d26-4585-856d-8aa4ea5e9ee9
                  lastUpdateDate: "2019-09-11T16:10:17.000Z"
                  name: "7200-03-03"
                  specifications:
                    architecture: ppc64
                    containerFormat: bare
                    diskFormat: raw
                    endianness: big-endian
                    hypervisorType: phyp
                    imageType: stock
                    operatingSystem: aix
                  state: active
                  storageType: tier3-gen2
                - creationDate: "2020-01-08T20:35:36.000Z"
                  description: ""
                  href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/images/e3c453a9-40b0-4fd6-89f9-3b71273446b0
                  imageID: e3c453a9-40b0-4fd6-89f9-3b71273446b0
                  lastUpdateDate: "2020-01-08T20:45:09.000Z"
                  name: COS-import-7100-05-04-img
                  specifications:
                    architecture: ppc64
                    containerFormat: bare
                    diskFormat: raw
                    endianness: big-endian
                    hypervisorType: phyp
                    imageType: import
                    operatingSystem: aix
                  state: active
                  storageType: standard
                - creationDate: "2019-12-05T18:13:27.000Z"
                  description: ""
                  href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/images/affa57fc-493d-4599-bfb6-755f99c9cab6
                  imageID: affa57fc-493d-4599-bfb6-755f99c9cab6
                  lastUpdateDate: "2019-12-05T18:14:14.000Z"
                  name: IBMi-72-09-002
                  specifications:
                    architecture: ppc64
                    containerFormat: bare
                    diskFormat: raw
                    endianness: big-endian
                    hypervisorType: phyp
                    imageType: stock
                    operatingSystem: ibmi
                  state: active
                  storageType: standard
                - creationDate: "2019-09-17T10:55:13.000Z"
                  description: ""
                  href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/images/8105a084-0360-478f-bfe8-c5a2af98f690
                  imageID: 8105a084-0360-478f-bfe8-c5a2af98f690
                  lastUpdateDate: "2019-09-17T10:55:41.000Z"
                  name: IBMi-73-06-001
                  specifications:
                    architecture: ppc64
                    containerFormat: bare
                    diskFormat: raw
                    endianness: big-endian
                    hypervisorType: phyp
                    imageType: stock
                    operatingSystem: ibmi
                  state: active
                  storageType: tier3-gen2
                - creationDate: "2019-11-04T22:26:04.000Z"
                  description: ""
                  href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/images/75be671c-9e45-49c0-b462-7672e28fc80c
                  imageID: 75be671c-9e45-49c0-b462-7672e28fc80c
                  lastUpdateDate: "2019-11-04T22:27:14.000Z"
                  name: IBMi-74-00-001
                  specifications:
                    architecture: ppc64
                    containerFormat: bare
                    diskFormat: raw
                    endianness: big-endian
                    hypervisorType: phyp
                    imageType: stock
                    operatingSystem: ibmi
                  state: active
                  storageType: tier3-gen2
          schema:
            $ref: '#/definitions/Images'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List all images for this cloud instance
      tags:
        - PCloudImages
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.cloudinstances.images.post
      parameters:
        - description: Parameters for the creation of a new image from available images
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateImage'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Image'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new Image (from available images)
      tags:
        - PCloudImages
  /pcloud/v1/cloud-instances/{cloud_instance_id}/images/{image_id}:
    delete:
      operationId: pcloud.cloudinstances.images.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete an Image from a Cloud Instance
      tags:
        - PCloudImages
    get:
      operationId: pcloud.cloudinstances.images.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              creationDate: "2019-09-11T16:10:00.000Z"
              imageID: b39f1013-6d26-4585-856d-8aa4ea5e9ee9
              lastUpdateDate: "2019-09-11T16:10:17.000Z"
              name: "7200-03-03"
              servers:
                - kylej-pointer-test
                - dl02-test
                - nni-vm01
                - gre-vm02
              size: !!float 20
              specifications:
                architecture: ppc64
                containerFormat: bare
                diskFormat: raw
                endianness: big-endian
                hypervisorType: phyp
                imageType: stock
                operatingSystem: aix
              state: active
              storageType: standard
              volumes:
                - bootable: true
                  name: volume-969afb22cb00-23977--cf758b7d-e30b
                  size: !!float 20
          schema:
            $ref: '#/definitions/Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Detailed info of an image
      tags:
        - PCloudImages
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/image_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/images/{image_id}/export:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/image_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.cloudinstances.images.export.post
      parameters:
        - description: Parameters for exporting an image
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExportImage'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Export an image
      tags:
        - PCloudImages
  /pcloud/v1/cloud-instances/{cloud_instance_id}/jobs:
    get:
      operationId: pcloud.cloudinstances.jobs.getall
      parameters:
        - $ref: '#/parameters/operation_id'
        - $ref: '#/parameters/operation_target'
        - $ref: '#/parameters/operation_action'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              createTimestamp: "2022-04-27T09:48:44.620Z"
              id: 3f09ffff-7d95-480b-b5ff-e2ba6ac3699c
              operation:
                - action: imageImport
                  id: testImg
                  target: image
              status:
                - message: imageImport operation::import of image file testImg.ova.gz to image testImg has completed successfully
                  progress: imageImportMonitor
                  state: completed
          schema:
            $ref: '#/definitions/Jobs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List up to the last 5 jobs initiated by the cloud instance
      tags:
        - PCloudJobs
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/jobs/{job_id}:
    delete:
      operationId: pcloud.cloudinstances.jobs.delete
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a cloud instance job
      tags:
        - PCloudJobs
    get:
      operationId: pcloud.cloudinstances.jobs.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              createTimestamp: "2021-08-09T20:17:39.827Z"
              id: c113467d-8419-449c-8d81-259dda713d9f
              operation:
                - action: vmCapture
                  id: b81ea020-bb47-452e-af96-8523c68e
                  target: pvmInstance
              status:
                - message: capturing VM to an image file
                  progress: capture
                  state: running
          schema:
            $ref: '#/definitions/Job'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List the detail of a job
      tags:
        - PCloudJobs
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/job_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/locations/disaster-recovery:
    get:
      operationId: pcloud.locations.disasterrecovery.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              location: dal12
              replicationSites:
                - isActive: true
                  location: us-east
          schema:
            $ref: '#/definitions/DisasterRecoveryLocation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the disaster recovery site details for the current location
      tags:
        - PCloudDisasterRecovery
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/networks:
    get:
      operationId: pcloud.networks.getall
      parameters:
        - $ref: '#/parameters/filter'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/networks/392913e3-e8ac-406b-a061-b431ee4bd239
              jumbo: false
              name: test-ibm-network
              networkID: 392913e3-e8ac-406b-a061-b431ee4bd239
              type: vlan
              vlanID: !!float 3314
          schema:
            $ref: '#/definitions/Networks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all networks in this cloud instance
      tags:
        - PCloudNetworks
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.networks.post
      parameters:
        - description: Parameters for the creation of a new network
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NetworkCreate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Network'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Network'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new Network
      tags:
        - PCloudNetworks
  /pcloud/v1/cloud-instances/{cloud_instance_id}/networks/{network_id}:
    delete:
      operationId: pcloud.networks.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Network
      tags:
        - PCloudNetworks
    get:
      operationId: pcloud.networks.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              cidr: 172.16.5.0/24
              dnsServers:
                - 9.9.9.9
                - 127.0.0.3
              gateway: 172.16.5.1
              ipAddressMetrics:
                available: !!float 250
                total: !!float 251
                used: !!float 1
                utilization: !!float 0
              ipAddressRanges:
                - endingIPAddress: 172.16.5.254
                  startingIPAddress: 172.16.5.4
              jumbo: false
              name: testMangala1
              networkID: 392913e3-e8ac-406b-a061-b431ee4bd239
              type: vlan
              vlanID: !!float 3314
          schema:
            $ref: '#/definitions/Network'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a network's current state/information
      tags:
        - PCloudNetworks
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/network_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.networks.put
      parameters:
        - description: Parameters to update a Network
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NetworkUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Network'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a Network
      tags:
        - PCloudNetworks
  /pcloud/v1/cloud-instances/{cloud_instance_id}/networks/{network_id}/ports:
    get:
      operationId: pcloud.networks.ports.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              ports:
                - description: ""
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/networks/4d8713c5-123d-4662-8f58-8578c79d6814/ports/10890e8a-158b-49b5-8d05-96efd9f44824
                  ipAddress: 192.168.140.28
                  macAddress: fa:16:3e:6a:35:cd
                  portID: 10890e8a-158b-49b5-8d05-96efd9f44824
                  pvmInstance:
                    href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/08490a29-ce61-4064-9a3b-ca051e005cf7
                    pvmInstanceID: 08490a29-ce61-4064-9a3b-ca051e005cf7
                  status: DOWN
                - description: ""
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/networks/4d8713c5-123d-4662-8f58-8578c79d6814/ports/6a863b69-aa0c-48fa-8ce7-b69051f844ee
                  ipAddress: 192.168.140.26
                  macAddress: fa:68:11:17:77:20
                  portID: 6a863b69-aa0c-48fa-8ce7-b69051f844ee
                  pvmInstance:
                    href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/ad2f6b96-9063-456c-a1a7-725eebdc86c1
                    pvmInstanceID: ad2f6b96-9063-456c-a1a7-725eebdc86c1
                  status: ACTIVE
          schema:
            $ref: '#/definitions/NetworkPorts'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all ports for this network
      tags:
        - PCloudNetworks
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/network_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.networks.ports.post
      parameters:
        - description: Create a Network Port
          in: body
          name: body
          schema:
            $ref: '#/definitions/NetworkPortCreate'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          examples:
            application/json:
              ports:
                - description: ""
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/networks/4d8713c5-123d-4662-8f58-8578c79d6814/ports/10890e8a-158b-49b5-8d05-96efd9f44824
                  ipAddress: 192.168.140.28
                  macAddress: fa:16:3e:6a:35:cd
                  portID: 10890e8a-158b-49b5-8d05-96efd9f44824
                  pvmInstance:
                    href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/08490a29-ce61-4064-9a3b-ca051e005cf7
                    pvmInstanceID: 08490a29-ce61-4064-9a3b-ca051e005cf7
                  status: DOWN
                - description: ""
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/networks/4d8713c5-123d-4662-8f58-8578c79d6814/ports/6a863b69-aa0c-48fa-8ce7-b69051f844ee
                  ipAddress: 192.168.140.26
                  macAddress: fa:68:11:17:77:20
                  portID: 6a863b69-aa0c-48fa-8ce7-b69051f844ee
                  pvmInstance:
                    href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/ad2f6b96-9063-456c-a1a7-725eebdc86c1
                    pvmInstanceID: ad2f6b96-9063-456c-a1a7-725eebdc86c1
                  status: ACTIVE
          schema:
            $ref: '#/definitions/NetworkPort'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Perform port addition, deletion, and listing
      tags:
        - PCloudNetworks
  /pcloud/v1/cloud-instances/{cloud_instance_id}/networks/{network_id}/ports/{port_id}:
    delete:
      operationId: pcloud.networks.ports.delete
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Network Port
      tags:
        - PCloudNetworks
    get:
      operationId: pcloud.networks.ports.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            applicaton/json:
              description: ""
              ipAddress: 192.168.140.28
              macAddress: fa:16:3e:6a:35:cd
              portID: 10890e8a-158b-49b5-8d05-96efd9f44824
              pvmInstance:
                href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/08490a29-ce61-4064-9a3b-ca051e005cf7
                pvmInstanceID: 08490a29-ce61-4064-9a3b-ca051e005cf7
              status: DOWN
          schema:
            $ref: '#/definitions/NetworkPort'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a port's information
      tags:
        - PCloudNetworks
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/network_id'
      - $ref: '#/parameters/port_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.networks.ports.put
      parameters:
        - description: Parameters for updating a Port
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NetworkPortUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              examples:
                description: ""
                ipAddress: 192.168.140.28
                macAddress: fa:16:3e:6a:35:cd
                portID: 10890e8a-158b-49b5-8d05-96efd9f44824
                pvmInstance:
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/08490a29-ce61-4064-9a3b-ca051e005cf7
                  pvmInstanceID: 08490a29-ce61-4064-9a3b-ca051e005cf7
                status: DOWN
          schema:
            $ref: '#/definitions/NetworkPort'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a port's information
      tags:
        - PCloudNetworks
  /pcloud/v1/cloud-instances/{cloud_instance_id}/placement-groups:
    get:
      operationId: pcloud.placementgroups.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              placementGroups:
                - id: 7a3583cc-85ec-4589-b5b5-b5d7af58354f
                  members: []
                  name: MyAffinity-servergroup-1620150831
                  policy: affinity
                - id: 7af58354f-85ec-4589-b5b5-b5d77a3583cc
                  members: []
                  name: MyAnti-Affinity-servergroup
                  policy: anti-affinity
          schema:
            $ref: '#/definitions/PlacementGroups'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all Server Placement Groups
      tags:
        - PCloudPlacementGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.placementgroups.post
      parameters:
        - description: Parameters for the creation of a new Server Placement Group
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PlacementGroupCreate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: 7a3583cc-85ec-4589-b5b5-b5d7af58354f
              members: []
              name: MyAffinity-servergroup-1620150831
              policy: affinity
          schema:
            $ref: '#/definitions/PlacementGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new Server Placement Group
      tags:
        - PCloudPlacementGroups
  /pcloud/v1/cloud-instances/{cloud_instance_id}/placement-groups/{placement_group_id}:
    delete:
      operationId: pcloud.placementgroups.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete Server Placement Group
      tags:
        - PCloudPlacementGroups
    get:
      operationId: pcloud.placementgroups.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: 7a3583cc-85ec-4589-b5b5-b5d7af58354f
              members:
                - 541c1cda-a8da-4081-8020-3a0ce9850ca0
              name: MyAffinity-servergroup-1620150831
              policy: affinity
          schema:
            $ref: '#/definitions/PlacementGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get Server Placement Group detail
      tags:
        - PCloudPlacementGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/placement_group_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/placement-groups/{placement_group_id}/members:
    delete:
      consumes:
        - application/json
      operationId: pcloud.placementgroups.members.delete
      parameters:
        - description: Parameters for removing a Server in a Placement Group
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PlacementGroupServer'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: 7a3583cc-85ec-4589-b5b5-b5d7af58354f
              members: []
              name: MyAffinity-servergroup-1620150831
              policy: affinity
          schema:
            $ref: '#/definitions/PlacementGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Remove Server from Placement Group
      tags:
        - PCloudPlacementGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/placement_group_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.placementgroups.members.post
      parameters:
        - description: Parameters for adding a server to a Server Placement Group
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PlacementGroupServer'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: 7a3583cc-85ec-4589-b5b5-b5d7af58354f
              members:
                - 541c1cda-a8da-4081-8020-3a0ce9850ca0
              name: MyAffinity-servergroup-1620150831
              policy: affinity
          schema:
            $ref: '#/definitions/PlacementGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add Server to Placement Group
      tags:
        - PCloudPlacementGroups
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances:
    get:
      operationId: pcloud.pvminstances.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              addresses:
                externalIP: 172.70.134.153
                href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/pvm-instances/6da0fd14-f7d3-4142-96f5-078df36c2539/networks/testMangala
                ip: 172.16.5.168
                ipAddress: 172.16.5.168
                macAddress: fa:a0:34:00:14:20
                networkID: 8838dcff-d423-4490-aa95-7bfed54adbae
                networkName: ibm-test-network
                type: fixed
                version: !!float 4
              creationDate: "2019-11-21T10:41:33.000Z"
              health:
                lastUpdate: 2019-11-21T16:31:09.443463
                status: WARNING
              href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/pvm-instances/6da0fd14-f7d3-4142-96f5-078df36c2539
              imageID: 732a5136-10b0-4c65-8882-7dc46601f3d5
              storagePool: StoragePool-2
              storagePoolAffinity: true
              storageType: tier1
          schema:
            $ref: '#/definitions/PVMInstances'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all the pvm instances for this cloud instance
      tags:
        - PCloudPVMInstances
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.post
      parameters:
        - description: Parameters for the creation of a new Power VM Instance
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceCreate'
        - description: Option to skip host validation on PVMInstance Create API
          in: query
          name: skipHostValidation
          type: boolean
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              addresses:
                - href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/pvm-instances/35c0e26c-e51f-4230-b556-49ada44d8831/networks/64782dfc-820f-45e7-9975-7320a548f116
                  ip: 192.168.2.153
                  ipAddress: 192.168.2.153
                  macAddress: fa:f2:5f:3c:86:20
                  networkID: 64782dfc-820f-45e7-9975-7320a548f116
                  networkName: MoyTest
                  type: fixed
                  version: !!float 4
              creationDate: "2020-01-17T05:55:28.000Z"
              diskSize: !!float 80
              health:
                lastUpdate: 2020-01-17T17:23:04.070950
                status: OK
              imageID: 8105a084-0360-478f-bfe8-c5a2af98f690
              maxmem: !!float 4
              maxproc: 0.5
              memory: !!float 2
              migratable: false
              minmem: !!float 2
              minproc: 0.25
              networkIDs:
                - 64782dfc-820f-45e7-9975-7320a548f116
              networks:
                - href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0/pvm-instances/35c0e26c-e51f-4230-b556-49ada44d8831/networks/64782dfc-820f-45e7-9975-7320a548f116
                  ip: 192.168.2.153
                  ipAddress: 192.168.2.153
                  macAddress: fa:f2:5f:3c:86:20
                  networkID: 64782dfc-820f-45e7-9975-7320a548f116
                  networkName: MoyTest
                  type: fixed
                  version: !!float 4
              procType: shared
              processors: 0.25
              pvmInstanceID: 35c0e26c-e51f-4230-b556-49ada44d8831
              serverName: MoyMetadataTest3
              status: ACTIVE
              storageType: standard
              sysType: s922
              updatedDate: "2020-01-17T05:55:28.000Z"
              volumeIDs:
                - 3a40ee8a-e80c-49bc-9db4-b09687c38bd1
          schema:
            $ref: '#/definitions/PVMInstanceList'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/PVMInstanceList'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/PVMInstanceList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        "504":
          description: Gateway Timeout. Request is still processing and taking longer than expected.
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new Power VM Instance
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}:
    delete:
      operationId: pcloud.pvminstances.delete
      parameters:
        - $ref: '#/parameters/delete_data_volumes'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a PCloud PVM Instance
      tags:
        - PCloudPVMInstances
    get:
      operationId: pcloud.pvminstances.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              addresses:
                - externalIP: xxx.xxx.xxx.xxx
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/8ab7ede5-540e-44bc-99cf-9c8bf1ac6297/networks/8838dcff-d423-4490-aa95-7bfed54adbae
                  ip: 192.168.140.38
                  ipAddress: 192.168.140.38
                  macAddress: fa:38:e6:a8:19:20
                  networkID: 8838dcff-d423-4490-aa95-7bfed54adbae
                  networkName: public-192_168_140_32-29-VLAN_3305
                  type: fixed
                  version: !!float 4
              creationDate: "2020-04-22T17:12:41.000Z"
              diskSize: !!float 20
              health:
                lastUpdate: 2020-04-22T17:16:28.099847
                status: WARNING
              imageID: dd04bafb-fda2-49c5-825b-1c1d274a8a99
              maxmem: !!float 4
              maxproc: 0.5
              memory: !!float 2
              migratable: false
              minmem: !!float 2
              minproc: 0.25
              networkIDs:
                - 8838dcff-d423-4490-aa95-7bfed54adbae
              networks:
                - externalIP: 161.156.179.134
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/8ab7ede5-540e-44bc-99cf-9c8bf1ac6297/networks/8838dcff-d423-4490-aa95-7bfed54adbae
                  ip: 192.168.140.38
                  ipAddress: 192.168.140.38
                  macAddress: fa:38:e6:a8:19:20
                  networkID: 8838dcff-d423-4490-aa95-7bfed54adbae
                  networkName: public-192_168_140_32-29-VLAN_3305
                  type: fixed
                  version: !!float 4
              pinPolicy: none
              placementGroup: none
              procType: shared
              processors: 0.25
              pvmInstanceID: 8ab7ede5-540e-44bc-99cf-9c8bf1ac6297
              serverName: stg-provision-test-eu-de-1
              status: ACTIVE
              storagePool: StoragePool-1
              storagePoolAffinity: true
              storageType: tier3
              sysType: s922
              updatedDate: "2020-04-22T17:12:41.000Z"
              volumeIDs:
                - d2c0e860-bceb-48a1-aa54-e8c5af9bdefc
          schema:
            $ref: '#/definitions/PVMInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a PVM Instance's current state or information
      tags:
        - PCloudPVMInstances
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.put
      parameters:
        - description: Parameters to update a PCloud PVM Instance
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceUpdate'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted (this is a long running operation)
          examples:
            application/json:
              addresses:
                - externalIP: xxx.xxx.xxx.xxx
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/8ab7ede5-540e-44bc-99cf-9c8bf1ac6297/networks/8838dcff-d423-4490-aa95-7bfed54adbae
                  ip: 192.168.140.38
                  ipAddress: 192.168.140.38
                  macAddress: fa:38:e6:a8:19:20
                  networkID: 8838dcff-d423-4490-aa95-7bfed54adbae
                  networkName: public-192_168_140_32-29-VLAN_3305
                  type: fixed
                  version: !!float 4
              creationDate: "2020-04-22T17:12:41.000Z"
              diskSize: !!float 20
              health:
                lastUpdate: 2020-04-22T17:16:28.099847
                status: WARNING
              imageID: dd04bafb-fda2-49c5-825b-1c1d274a8a99
              maxmem: !!float 4
              maxproc: 0.5
              memory: !!float 4
              migratable: false
              minmem: !!float 2
              minproc: 0.25
              networkIDs:
                - 8838dcff-d423-4490-aa95-7bfed54adbae
              networks:
                - externalIP: xxx.xxx.xxx.xxx
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/8ab7ede5-540e-44bc-99cf-9c8bf1ac6297/networks/8838dcff-d423-4490-aa95-7bfed54adbae
                  ip: 192.168.140.38
                  ipAddress: 192.168.140.38
                  macAddress: fa:38:e6:a8:19:20
                  networkID: 8838dcff-d423-4490-aa95-7bfed54adbae
                  networkName: public-192_168_140_32-29-VLAN_3305
                  type: fixed
                  version: !!float 4
              pinPolicy: soft
              procType: dedicated
              processors: 0.25
              pvmInstanceID: 8ab7ede5-540e-44bc-99cf-9c8bf1ac6297
              serverName: stg-provision-test-eu-de-1
              status: ACTIVE
              storageType: tier1
              sysType: s922
              updatedDate: "2020-04-22T17:12:41.000Z"
              volumeIDs:
                - d2c0e860-bceb-48a1-aa54-e8c5af9bdefc
          schema:
            $ref: '#/definitions/PVMInstanceUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a PCloud PVM Instance
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/action:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.action.post
      parameters:
        - description: Parameters for the desired action
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceAction'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Perform an action (start stop reboot immediate-shutdown reset) on a PVMInstance
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/capture:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.capture.post
      parameters:
        - description: Parameters for the capture PVMInstance
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceCapture'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted, upload to cloud storage in progress
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Capture a PVMInstance and create a deployable image
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/clone:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.clone.post
      parameters:
        - description: Clone PVM Instance parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceClone'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/PVMInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Clone a PVMInstance
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/console:
    get:
      operationId: pcloud.pvminstances.console.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ConsoleLanguages'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List all console languages
      tags:
        - PCloudPVMInstances
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.console.post
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/PVMInstanceConsole'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Generate the noVNC Console URL
      tags:
        - PCloudPVMInstances
    put:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.console.put
      parameters:
        - description: Parameters to update a PVMInstance console required codepage
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConsoleLanguage'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ConsoleLanguage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update PVMInstance console laguage code
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/networks:
    get:
      operationId: pcloud.pvminstances.networks.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              networks:
                - externalIP: xxx.xxx.xxx.xxx
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/pvm-instances/8ab7ede5-540e-44bc-99cf-9c8bf1ac6297/networks/8838dcff-d423-4490-aa95-7bfed54adbae
                  ip: 192.168.140.38
                  ipAddress: 192.168.140.38
                  macAddress: fa:38:e6:a8:19:20
                  networkID: 8838dcff-d423-4490-aa95-7bfed54adbae
                  networkName: public-192_168_140_32-29-VLAN_3305
                  type: fixed
                  version: !!float 4
          schema:
            $ref: '#/definitions/PVMInstanceNetworks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all networks for this PVM Instance
      tags:
        - PCloudPVMInstances
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.networks.post
      parameters:
        - description: Add network to PVM Instance parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceAddNetwork'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/PVMInstanceNetwork'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Perform network addition
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/networks/{network_id}:
    delete:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.networks.delete
      parameters:
        - description: Remove a network from PVM Instance parameters
          in: body
          name: body
          schema:
            $ref: '#/definitions/PVMInstanceRemoveNetwork'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Remove all Address of Network from a PVM Instance
      tags:
        - PCloudPVMInstances
    get:
      operationId: pcloud.pvminstances.networks.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              networks:
                - externalIP: xxx.xxx.xxx.xxx
                  ip: 192.168.140.38
                  ipAddress: 192.168.140.38
                  macAddress: fa:38:e6:a8:19:20
                  networkID: 8838dcff-d423-4490-aa95-7bfed54adbae
                  networkName: public-192_168_140_32-29-VLAN_3305
                  type: fixed
                  version: !!float 4
          schema:
            $ref: '#/definitions/PVMInstanceNetworks'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a PVM Instance's network information
      tags:
        - PCloudPVMInstances
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
      - $ref: '#/parameters/network_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/operations:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.operations.post
      parameters:
        - description: Parameters for the desired operations
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceOperation'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Perform an operation on a PVMInstance
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/snapshots:
    get:
      operationId: pcloud.pvminstances.snapshots.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              snapshots:
                - action: snapshot
                  creationDate: "2022-08-16T08:02:05.000Z"
                  description: test
                  lastUpdateDate: "2022-08-16T08:02:14.000Z"
                  name: test-abcd-snap
                  percentComplete: !!float 100
                  pvmInstanceID: 2eee5ae2-66d2-435d-8e8b-32f80a65df23
                  snapshotID: 4f37a134-4822-4e86-b56b-d95e82cb056c
                  status: available
                  volumeSnapshots:
                    f57e242f-203d-4678-bde5-a8f1792e9117: fa62198c-f614-4750-983a-671b67a38ef3
                - action: snapshot
                  creationDate: "2022-08-16T08:13:25.000Z"
                  description: test
                  lastUpdateDate: "2022-08-16T08:13:34.000Z"
                  name: test-abcd-snap1
                  percentComplete: !!float 100
                  pvmInstanceID: 2eee5ae2-66d2-435d-8e8b-32f80a65df23
                  snapshotID: 59cadf8d-e553-4509-81f4-2889f2a21104
                  status: available
                  volumeSnapshots:
                    f57e242f-203d-4678-bde5-a8f1792e9117: c37a50dc-cda3-4cba-8254-2cc8b8ee806
          schema:
            $ref: '#/definitions/Snapshots'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all snapshots for this PVM Instance
      tags:
        - PCloudPVMInstances
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.snapshots.post
      parameters:
        - description: PVM Instance snapshot create parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SnapshotCreate'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              snapshotID: je47ff70-55c9-4cf5-965a-ecdf90e7d78a
          schema:
            $ref: '#/definitions/SnapshotCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        "504":
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/Error'
      summary: Create a PVM Instance snapshot
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/snapshots/{snapshot_id}/restore:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
      - $ref: '#/parameters/snapshot_id'
      - $ref: '#/parameters/restore_fail_action'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.snapshots.restore.post
      parameters:
        - description: PVM Instance snapshot restore parameters
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SnapshotRestore'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              action: action
              creationDate: "2000-01-23T04:56:07.000+00:00"
              description: snapshot restore
              lastUpdateDate: "2000-01-23T04:56:07.000+00:00"
              name: name
              percentComplete: !!float 0
              pvmInstanceID: pvmInstanceID
              snapshotID: snapshotID
              status: status
              volumeSnapshots:
                key: volumeSnapshots
          schema:
            $ref: '#/definitions/Snapshot'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Restore a PVM Instance snapshot
      tags:
        - PCloudPVMInstances
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/volumes:
    get:
      operationId: pcloud.pvminstances.volumes.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              volumes:
                - bootVolume: true
                  bootable: true
                  creationDate: "2020-04-22T16:16:08.000Z"
                  diskType: tier1
                  href: /pcloud/v1/cloud-instances/66b2c271412a4726b4ba72db3637ee60/volumes/22f701a6-81a5-4df9-8c0b-eaec1c5e8bc7
                  lastUpdateDate: "2020-04-22T16:16:21.000Z"
                  name: testVolume
                  pvmInstanceIDs:
                    - 6c98be83-bc60-441d-bd37-9894b58ec98c
                  shareable: false
                  size: !!float 20
                  state: in-use
                  volumeID: 22f701a6-81a5-4df9-8c0b-eaec1c5e8bc7
                  volumePool: Tier1-Flash-1
                  volumeType: Tier1-Flash-1
                  wwn: 90050764008102900000000000000000
          schema:
            $ref: '#/definitions/Volumes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List all volumes attached to a PVM Instance
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/volumes/{volume_id}:
    delete:
      operationId: pcloud.pvminstances.volumes.delete
      produces:
        - application/json
      responses:
        "202":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Detach a volume from a PVMInstance
      tags:
        - PCloudVolumes
    get:
      operationId: pcloud.pvminstances.volumes.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              bootable: true
              creationDate: "2020-04-22T16:16:08.000Z"
              diskType: tier1
              lastUpdateDate: "2020-04-22T16:16:21.000Z"
              name: testVolume
              pvmInstanceIDs:
                - 6c98be83-bc60-441d-bd37-9894b58ec98c
              shareable: false
              size: !!float 20
              state: in-use
              volumeID: 22f701a6-81a5-4df9-8c0b-eaec1c5e8bc7
              volumePool: Tier1-Flash-1
              volumeType: Tier1-Flash-1
              wwn: 90050764008102900000000000000000
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Detailed info of a volume attached to a PVMInstance
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
      - $ref: '#/parameters/volume_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.volumes.post
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Attach a volume to a PVMInstance
      tags:
        - PCloudVolumes
    put:
      consumes:
        - application/json
      operationId: pcloud.pvminstances.volumes.put
      parameters:
        - description: Parameters to update a volume attached to a PVMInstance
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceVolumeUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a volume attached to a PVMInstance
      tags:
        - PCloudVolumes
  /pcloud/v1/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/volumes/{volume_id}/setboot:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
      - $ref: '#/parameters/volume_id'
    put:
      operationId: pcloud.pvminstances.volumes.setboot.put
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Set the PVMInstance volume as the boot volume
      tags:
        - PCloudVolumes
  /pcloud/v1/cloud-instances/{cloud_instance_id}/sap:
    get:
      operationId: pcloud.sap.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              profiles:
                - certified: true
                  cores: !!float 1
                  memory: !!float 4
                  profileID: test-1x4
                  type: compute
                - certified: false
                  cores: !!float 16
                  memory: !!float 1600
                  profileID: test-16x1600
                  type: balanced
                - certified: false
                  cores: !!float 20
                  memory: !!float 2000
                  profileID: test-20x2000
                  type: balanced
          schema:
            $ref: '#/definitions/SAPProfiles'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get list of SAP profiles
      tags:
        - PCloudSAP
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.sap.post
      parameters:
        - description: Parameters for the creation of a new SAP PVM Instance
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SAPCreate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              - addresses:
                  - networkID: 26038c24-fdde-4982-8d86-eaf01ab0cf7d
                creationDate: "0001-01-01T00:00:00.000Z"
                diskSize: !!float 100
                imageID: ed37bc0b-1968-4d88-96a2-30fe4e977e1b
                memory: !!float 4
                networkIDs:
                  - 26038c24-fdde-4982-8d86-eaf01ab0cf7d
                networks:
                  - networkID: 26038c24-fdde-4982-8d86-eaf01ab0cf7d
                osType: rhel
                pinPolicy: none
                procType: dedicated
                processors: !!float 1
                pvmInstanceID: 72820ebc-97fb-4898-a763-4a6ccfc60dff
                sapProfile:
                  href: /pcloud/v1/cloud-instances/a28e43001b7748b0acbdfb2d36288643/sap/tinytest-1x4
                  profileID: tinytest-1x4
                serverName: test-rj-sap
                srcs: []
                status: BUILDING
                storagePool: Tier1-Flash-2
                storageType: tier1
                sysType: e980
                updatedDate: "0001-01-01T00:00:00.000Z"
                volumeIDs: []
          schema:
            $ref: '#/definitions/PVMInstanceList'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/PVMInstanceList'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/PVMInstanceList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new SAP PVM Instance
      tags:
        - PCloudSAP
  /pcloud/v1/cloud-instances/{cloud_instance_id}/sap/{sap_profile_id}:
    get:
      operationId: pcloud.sap.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SAPProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the information on an SAP profile
      tags:
        - PCloudSAP
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/sap_profile_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/services/dhcp:
    get:
      operationId: pcloud.dhcp.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DHCPServers'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all DHCP Servers information (OpenShift Internal Use Only)
      tags:
        - PCloudServiceDHCP
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      operationId: pcloud.dhcp.post
      parameters:
        - description: Parameters used during creation of DHCP service
          in: body
          name: body
          schema:
            $ref: '#/definitions/DHCPServerCreate'
      produces:
        - application/json
      responses:
        "202":
          description: OK
          schema:
            $ref: '#/definitions/DHCPServer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a DHCP Server (OpenShift Internal Use Only)
      tags:
        - PCloudServiceDHCP
    x-tag: Internal
  /pcloud/v1/cloud-instances/{cloud_instance_id}/services/dhcp/{dhcp_id}:
    delete:
      operationId: pcloud.dhcp.delete
      produces:
        - application/json
      responses:
        "202":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete DHCP Server (OpenShift Internal Use Only)
      tags:
        - PCloudServiceDHCP
        - Internal
    get:
      operationId: pcloud.dhcp.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DHCPServerDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get DHCP Server information (OpenShift Internal Use Only)
      tags:
        - PCloudServiceDHCP
        - Internal
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/dhcp_id'
    x-tag: Internal
  /pcloud/v1/cloud-instances/{cloud_instance_id}/shared-processor-pools:
    get:
      operationId: pcloud.sharedprocessorpools.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              sharedProcessorPools:
                - allocatedCores: !!float 5
                  availableCores: !!float 0
                  hostGroup: s922
                  hostID: !!float 308
                  id: 5f0e3a10-0a33-4197-bb51-c9db4f530951
                  name: SPP1
                  reservedCores: !!float 5
                  sharedProcessorPoolPlacementGroups:
                    - id: ad20e260-b4cd-4d51-aad7-95f75487dc67
                      name: SPPPG4
                      policy: anti-affinity
                    - id: 402f58c5-bbe5-4d07-9853-8a7bc6522717
                      name: SPPPG3
                      policy: affinity
                  status: active
                  statusDetail: shared processor pool SPP1 is active
                - allocatedCores": !!float 0
                  availableCores: !!float 4
                  hostGroup: e980
                  hostID: !!float 408
                  id: 4f22601f-28e2-4eb3-b6ef-6d5a6328ea3b
                  name: spp_2
                  reservedCores: !!float 4
                  sharedProcessorPoolPlacementGroups: []
                  status: active
                  statusDetail: shared processor pool spp_2 is active
          schema:
            $ref: '#/definitions/SharedProcessorPools'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the list of Shared Processor Pools for a cloud instance
      tags:
        - PCloudSharedProcessorPools
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.sharedprocessorpools.post
      parameters:
        - description: Parameters for the creation of a new Shared Processor Pool
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SharedProcessorPoolCreate'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              id: 95e79570-1339-46da-9999-2a49ee141dda
              name: SPP2
              reservedCores: !!float 3
              status: configuring
              statusDetail: “configuration of shared processor pool SPP2 in progress”
          schema:
            $ref: '#/definitions/SharedProcessorPool'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new Shared Processor Pool
      tags:
        - PCloudSharedProcessorPools
  /pcloud/v1/cloud-instances/{cloud_instance_id}/shared-processor-pools/{shared_processor_pool_id}:
    delete:
      operationId: pcloud.sharedprocessorpools.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Shared Processor Pool from a cloud instance
      tags:
        - PCloudSharedProcessorPools
    get:
      operationId: pcloud.sharedprocessorpools.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              allocatedCores: !!float 5
              availableCores: !!float 0
              hostGroup: s922
              hostID: !!float 308
              id: 5f0e3a10-0a33-4197-bb51-c9db4f530951
              name: SPP1
              reservedCores: !!float 5
              sharedProcessorPoolPlacementGroups:
                - id: ad20e260-b4cd-4d51-aad7-95f75487dc67
                  name: SPPPG4
                  policy: anti-affinity
                - id: 402f58c5-bbe5-4d07-9853-8a7bc6522717
                  name: SPPPG3
                  policy: affinity
              status: active
              statusDetail: shared processor pool SPP1 is active
          schema:
            $ref: '#/definitions/SharedProcessorPoolDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the detail of a Shared Processor Pool for a cloud instance
      tags:
        - PCloudSharedProcessorPools
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/shared_processor_pool_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.sharedprocessorpools.put
      parameters:
        - description: Parameters for the update of a Shared Processor Pool
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SharedProcessorPoolUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              allocatedCores: !!float 6
              availableCores: !!float 0
              hostGroup: s922
              hostID: !!float 308
              id: 5f0e3a10-0a33-4197-bb51-c9db4f530951
              name: SPP_DB
              reservedCores: !!float 6
              sharedProcessorPoolPlacementGroups: []
              status: active
              statusDetail: shared processor pool SPP1 is active
          schema:
            $ref: '#/definitions/SharedProcessorPool'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a Shared Processor Pool for a cloud instance
      tags:
        - PCloudSharedProcessorPools
  /pcloud/v1/cloud-instances/{cloud_instance_id}/snapshots:
    get:
      operationId: pcloud.cloudinstances.snapshots.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              snapshots:
                - action: snapshot1
                  creationDate: "2022-08-16T08:02:05.000Z"
                  description: test1
                  lastUpdateDate: "2022-08-16T08:02:14.000Z"
                  name: test-abc-snap1
                  percentComplete: !!float 100
                  pvmInstanceID: 2eee5ae2-66d2-435d-8e8b-32f80a65df23
                  snapshotID: 4f37a134-4822-4e86-b56b-d95e82cb056c
                  status: available
                  volumeSnapshots:
                    f57e242f-203d-4678-bde5-a8f1792e9117: fa62198c-f614-4750-983a-671b67a38ef3
                - action: snapshot2
                  creationDate: "2022-09-16T08:02:05.000Z"
                  description: test2
                  lastUpdateDate: "2022-09-16T08:02:14.000Z"
                  name: test-abc-snap2
                  percentComplete: !!float 100
                  pvmInstanceID: 3abc5bf3-66d2-435d-8e8b-33f80a65df24
                  snapshotID: 5g48b245-4822-4e86-b56b-d95e82cc167d
                  status: available
                  volumeSnapshots:
                    g68f353g-203d-4678-bde5-a8f1792f0228: gb73209d-f614-4750-983a-782c78b49ff4
          schema:
            $ref: '#/definitions/Snapshots'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List all PVM instance snapshots for this cloud instance
      tags:
        - PCloudSnapshots
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/snapshots/{snapshot_id}:
    delete:
      operationId: pcloud.cloudinstances.snapshots.delete
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a PVM instance snapshot of a cloud instance
      tags:
        - PCloudSnapshots
    get:
      operationId: pcloud.cloudinstances.snapshots.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              snapshots:
                - action: snapshot
                  creationDate: "2022-08-16T08:02:05.000Z"
                  description: test
                  lastUpdateDate: "2022-08-16T08:02:14.000Z"
                  name: test-abcd-snap
                  percentComplete: !!float 100
                  pvmInstanceID: 2eee5ae2-66d2-435d-8e8b-32f80a65df23
                  snapshotID: 4f37a134-4822-4e86-b56b-d95e82cb056c
                  status: available
                  volumeSnapshots:
                    f57e242f-203d-4678-bde5-a8f1792e9117: fa62198c-f614-4750-983a-671b67a38ef3
                - action: snapshot
                  creationDate: "2022-08-16T08:13:25.000Z"
                  description: test1
                  lastUpdateDate: "2022-08-16T08:13:34.000Z"
                  name: test-abcd-snap1
                  percentComplete: !!float 100
                  pvmInstanceID: 2eee5ae2-66d2-435d-8e8b-32f80a65df23
                  snapshotID: 59cadf8d-e553-4509-81f4-2889f2a21104
                  status: available
                  volumeSnapshots:
                    f57e242f-203d-4678-bde5-a8f1792e9117: c37a50dc-cda3-4cba-8254-2cc8b8ee806
          schema:
            $ref: '#/definitions/Snapshot'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the detail of a snapshot
      tags:
        - PCloudSnapshots
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/snapshot_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.cloudinstances.snapshots.put
      parameters:
        - description: Parameters for the update of a  PVM instance snapshot
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SnapshotUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a PVM instance snapshot
      tags:
        - PCloudSnapshots
  /pcloud/v1/cloud-instances/{cloud_instance_id}/spp-placement-groups:
    get:
      operationId: pcloud.sppplacementgroups.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              sppPlacementGroups:
                - id: 95445036-ee96-454d-869e-535ddc45c4a1
                  memberSharedProcessorPools: []
                  name: SPG_Anti
                  policy: anti-affinity
                - id: 402f58c5-bbe5-4d07-9853-8a7bc6522717
                  memberSharedProcessorPools":
                    - SPP1
                  name: SPPPG3
                  policy": affinity
          schema:
            $ref: '#/definitions/SPPPlacementGroups'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the list of Shared Processor Pool Placement Groups for a cloud instance
      tags:
        - PCloudSPPPlacementGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.sppplacementgroups.post
      parameters:
        - description: Parameters for the creation of a Shared Processor Pool Placement Group
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SPPPlacementGroupCreate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: 95445036-ee96-454d-869e-535ddc45c4a1
              memberSharedProcessorPools: []
              name: Tim_Anti
              policy: anti-affinity
          schema:
            $ref: '#/definitions/SPPPlacementGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new Shared Processor Pool Placement Group
      tags:
        - PCloudSPPPlacementGroups
  /pcloud/v1/cloud-instances/{cloud_instance_id}/spp-placement-groups/{spp_placement_group_id}:
    delete:
      operationId: pcloud.sppplacementgroups.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Shared Processor Pool Placement Group from a cloud instance
      tags:
        - PCloudSPPPlacementGroups
    get:
      operationId: pcloud.sppplacementgroups.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: 95445036-ee96-454d-869e-535ddc45c4a1
              memberSharedProcessorPools: []
              name: Tim_Anti
              policy: anti-affinity
          schema:
            $ref: '#/definitions/SPPPlacementGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the detail of a Shared Processor Pool Placement Group for a cloud instance
      tags:
        - PCloudSPPPlacementGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/spp_placement_group_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/spp-placement-groups/{spp_placement_group_id}/members/{shared_processor_pool_id}:
    delete:
      operationId: pcloud.sppplacementgroups.members.delete
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: 95445036-ee96-454d-869e-535ddc45c4a1
              memberSharedProcessorPools: []
              name: Tim_Anti
              policy: anti-affinity
          schema:
            $ref: '#/definitions/SPPPlacementGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete Shared Processor Pool member from a Shared Processor Pool Placement Group
      tags:
        - PCloudSPPPlacementGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/spp_placement_group_id'
      - $ref: '#/parameters/shared_processor_pool_id'
    post:
      operationId: pcloud.sppplacementgroups.members.post
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: 95445036-ee96-454d-869e-535ddc45c4a1
              memberSharedProcessorPools:
                - SPP1
              name: Tim_Anti
              policy: anti-affinity
          schema:
            $ref: '#/definitions/SPPPlacementGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add Shared Processor Pool as a member of a Shared Processor Pool Placement Group
      tags:
        - PCloudSPPPlacementGroups
  /pcloud/v1/cloud-instances/{cloud_instance_id}/stock-images:
    get:
      operationId: pcloud.cloudinstances.stockimages.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Images'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List all available stock images
      tags:
        - PCloudImages
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/include_sap_images'
      - $ref: '#/parameters/include_vtl_images'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/stock-images/{image_id}:
    get:
      operationId: pcloud.cloudinstances.stockimages.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Detailed info of an available stock image
      tags:
        - PCloudImages
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/image_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/storage-capacity/storage-pools:
    get:
      operationId: pcloud.storagecapacity.pools.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              maximumStorageAllocation:
                maxAllocationSize: !!float 147401
                storagePool: Tier1-Pool-1
                storageType: tier1
              storagePoolsCapacity:
                - maxAllocationSize: !!float 7680
                  poolName: Tier1-Pool-cp1
                  storageType: tier1
                  totalCapacity: !!float 10240
                - maxAllocationSize: !!float 147401
                  poolName: Tier1-Pool-1
                  storageType: tier1
                  totalCapacity: !!float 182906
                - maxAllocationSize: !!float 9214
                  poolName: Tier3-Pool-cp2
                  storageType: tier3
                  totalCapacity: !!float 10240
          schema:
            $ref: '#/definitions/StoragePoolsCapacity'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Storage capacity for all available storage pools in a region
      tags:
        - PCloudStorageCapacity
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/storage-capacity/storage-pools/{storage_pool_name}:
    get:
      operationId: pcloud.storagecapacity.pools.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              maxAllocationSize: !!float 7680
              poolName: Tier1-Pool-cp1
              storageType: tier1
              totalCapacity: !!float 10240
          schema:
            $ref: '#/definitions/StoragePoolCapacity'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Storage capacity for a storage pool in a region
      tags:
        - PCloudStorageCapacity
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/storage_pool_name'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/storage-capacity/storage-types:
    get:
      operationId: pcloud.storagecapacity.types.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StorageTypesCapacity'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Storage capacity for all available storage types in a region
      tags:
        - PCloudStorageCapacity
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/storage-capacity/storage-types/{storage_type_name}:
    get:
      operationId: pcloud.storagecapacity.types.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/StorageTypeCapacity'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Storage capacity for a storage type in a region
      tags:
        - PCloudStorageCapacity
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/storage_type_name'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/system-pools:
    get:
      operationId: pcloud.systempools.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SystemPools'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List of available system pools within a particular DataCenter
      tags:
        - PCloudSystemPools
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups:
    get:
      operationId: pcloud.volumegroups.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              volumeGroups:
                - consistencyGroupName: rccg-36e8-543wa
                  id: 7e34b8a2-5101-43e6-b0cd-906667f2f0as
                  name: VG-Test-1
                  replicationStatus: enabled
                  status: available
                  statusDescription:
                    errors: []
                - consistencyGroupName: rccg-987e-1161as
                  id: 987e4439-eb01-43c1-b922-7c9d644116112
                  name: VG-Test-2
                  replicationStatus: enabled
                  status: error
                  statusDescription:
                    errors:
                      - key: VOL-NOT-IN-GROUP
                        message: Failed to add volume to CG rccg-987e-1161as because volume aaaca558-3dc9-4956-8980-6f4a5496eb03 is already part of CG rccg-36e8-543ui.
                        volIDs:
                          - aaaca558-3dc9-4956-8980-6f4a5496eb56
          schema:
            $ref: '#/definitions/VolumeGroups'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all volume groups
      tags:
        - PCloudVolumeGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.volumegroups.post
      parameters:
        - description: Parameters for the creation of a new volume group
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumeGroupCreate'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              id: 83f31c4c-ffdb-4af3-8e19-5a836b6d6634
              name: test-volume-group-1
              status: available
          schema:
            $ref: '#/definitions/VolumeGroupCreateResponse'
        "206":
          description: Partial Content
          schema:
            $ref: '#/definitions/VolumeGroupCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        "504":
          description: Gateway Timeout. Request is still processing and taking longer than expected.
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new volume group
      tags:
        - PCloudVolumeGroups
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/details:
    get:
      operationId: pcloud.volumegroups.getallDetails
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              volumeGroups:
                - consistencyGroupName: rccg-36e8-543wa
                  id: 36e83257-f7f5-4848-96f6-47a7b4e54323
                  name: VG-Test-1
                  replicationStatus: enabled
                  status: available
                  statusDescription:
                    errors: []
                  volumeIDs:
                    - 1711cbc9-3456-42ef-a9c0-b2373561147b
                    - 4356217e-af84-4579-b419-497b4cddc751
                - consistencyGroupName: rccg-987e-1161as
                  id: 987e4439-eb01-43c1-b922-7c9d644116112
                  name: VG-Test-2
                  replicationStatus: enabled
                  status: error
                  statusDescription:
                    errors:
                      - key: VOL-NOT-IN-GROUP
                        message: Failed to add volume to CG rccg-987e-1161as because volume aaaca558-3dc9-4956-8980-6f4a5496eb03 is already part of CG rccg-36e8-543ui.
                        volIDs:
                          - aaaca558-3dc9-4956-8980-6f4a5496eb56
                  volumeIDs: []
          schema:
            $ref: '#/definitions/VolumeGroupsDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all volume groups with details
      tags:
        - PCloudVolumeGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}:
    delete:
      operationId: pcloud.volumegroups.delete
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a cloud instance volume group
      tags:
        - PCloudVolumeGroups
    get:
      operationId: pcloud.volumegroups.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              consistencyGroupName: rccg-36e8-543wa
              id: 7e34b8a2-5101-43e6-b0cd-906667f2f0as
              name: VG-Test-1
              replicationStatus: enabled
              status: available
              statusDescription:
                errors: []
          schema:
            $ref: '#/definitions/VolumeGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get volume Group
      tags:
        - PCloudVolumeGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_group_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.volumegroups.put
      parameters:
        - description: Parameters for updating a volume-group
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumeGroupUpdate'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: updates the volume group
      tags:
        - PCloudVolumeGroups
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}/action:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_group_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.volumegroups.action.post
      parameters:
        - description: Parameters for the desire action.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumeGroupAction'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Perform an action (start stop reset ) on a volume group
      tags:
        - PCloudVolumeGroups
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}/details:
    get:
      operationId: pcloud.volumegroups.getDetails
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              consistencyGroupName: rccg-36e8-543wa
              id: 36e83257-f7f5-4848-96f6-47a7b4e54323
              name: VG-Test-1
              replicationStatus: enabled
              status: available
              statusDescription:
                errors: []
              volumeIDs:
                - 1711cbc9-3456-42ef-a9c0-b2373561147b
                - 4356217e-af84-4579-b419-497b4cddc751
          schema:
            $ref: '#/definitions/VolumeGroupDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get volume Group details
      tags:
        - PCloudVolumeGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_group_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}/remote-copy-relationships:
    get:
      operationId: pcloud.volumegroups.remoteCopyRelationships.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              id: af9e9d1c-c8c9-4f44-8dd9-1831d3524333
              remoteCopyRelationships:
                - auxChangedVolumeName: chg_aux_volume-test_vg-vol-3-7066e348-cc1c1210664
                  auxVolumeName: aux_volume-test_vg-vol-3-7066e348-cc1c1210664
                  consistencyGroupName: rccg-af9e-243dd
                  copyType: global
                  cyclingMode: multi
                  freezeTime: "2022-06-09T14:46:59.000Z"
                  masterChangedVolumeName: chg_volume-test_vg-vol-3-7066e348-cc1c
                  masterVolumeName: volume-test_vg-vol-3-7066e348-cc1c
                  name: rcrel490
                  primaryRole: master
                  progress: !!float 100
                  remoteCopyID: "1050"
                  state: consistent_copying
                - auxChangedVolumeName: chg_aux_volume-test_vg-vol-4-0a40be7a-21b31210664
                  auxVolumeName: aux_volume-test_vg-vol-4-0a40be7a-21b31210664
                  consistencyGroupName: rccg-af9e-243dd
                  copyType: global
                  cyclingMode: multi
                  freezeTime: "2022-06-09T14:46:59.000Z"
                  masterChangedVolumeName: chg_volume-test_vg-vol-4-0a40be7a-21b3
                  masterVolumeName: volume-test_vg-vol-4-0a40be7a-21b3
                  name: rcrel499
                  primaryRole: master
                  progress: !!float 100
                  remoteCopyID: "1099"
                  state: consistent_copying
          schema:
            $ref: '#/definitions/VolumeGroupRemoteCopyRelationships'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get remote copy relationships of the volume belonging to volume group
      tags:
        - PCloudVolumeGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_group_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}/storage-details:
    get:
      operationId: pcloud.volumegroups.storageDetails.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              consistencyGroupName: rccg-15da-98ecc
              cyclePeriodSeconds: !!float 500
              cyclingMode: multi
              numOfvols: !!float 2
              remoteCopyRelationshipNames:
                - rcrel999
                - rcrel1100
              replicationType: global
              state: idling
              sync: out_of_sync
          schema:
            $ref: '#/definitions/VolumeGroupStorageDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get storage details of volume group
      tags:
        - PCloudVolumeGroups
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_group_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes:
    get:
      operationId: pcloud.cloudinstances.volumes.getall
      parameters:
        - $ref: '#/parameters/replication_enabled'
        - $ref: '#/parameters/affinity'
        - $ref: '#/parameters/auxiliary'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              - bootVolume: false
                bootable: true
                creationDate: "2019-11-21T10:41:38.000Z"
                diskType: tier1
                href: /pcloud/v1/cloud-instances/969afb22cb004e807ab84b827abfa1b0/volumes/8a78e4b2-fc59-473e-9260-51a753634fd9
                lastUpdateDate: "2019-11-21T10:42:16.000Z"
                name: testr-6da0fd14-00000953-boot-0
                shareable: false
                size: !!float 20
                state: in-use
                volumeID: 8a78e4b2-fc59-473e-9260-51a753634fd9
                volumePool: StoragePool-1
                volumeType: StoragePool-1
                wwn: wwn-id
              - auxVolumeName: aux_test-vol-1-ff2dd3a6-17ed44275611
                auxiliary: false
                bootVolume: false
                bootable: false
                creationDate: "2022-07-08T12:28:41.000Z"
                diskType: tier1
                href: /pcloud/v1/cloud-instances/6dc23f8f500f44a180661501eee2d9f8/volumes/ff2dd3a6-17ed-453d-88fc-7f77882c4d81
                lastUpdateDate: "2022-07-08T12:28:47.000Z"
                masterVolumeName: volume-test-vol-1-ff2dd3a6-17ed
                mirroringState: inconsistent_copying
                name: test-vol-1
                primaryRole: master
                pvmInstanceIDs: []
                replicationEnabled: true
                replicationStatus: enabled
                replicationType: global
                shareable: false
                size: !!float 2
                state: available
                volumeID: ff2dd3a6-17ed-453d-88fc-7f77882c4d66
                volumePool: Tier1-Flash-1
                volumeType: Tier1-Flash-1-DR
                wwn: 6005076400810289700000000000B788
          schema:
            $ref: '#/definitions/Volumes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List all volumes for this cloud instance
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.cloudinstances.volumes.post
      parameters:
        - description: Parameters for the creation of a new data volume
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDataVolume'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              bootVolume: false
              bootable: false
              creationDate: "2021-08-31T19:26:55.000Z"
              diskType: tier3
              href: /pcloud/v1/cloud-instances/a28e43001b7748b0acbdfb2d36288643/volumes/322d6d22-5006-4813-9f9c-92d6acea84ee
              lastUpdateDate: "1970-01-01T00:00:00.000Z"
              name: data-volume-1
              pvmInstanceIDs: []
              replicationStatus: not-capable
              shareable: false
              size: !!float 2000
              state: creating
              volumeID: 322d6d22-5006-4813-9f9c-92d6acea84ee
              volumePool: Tier3-Flash-1
              volumeType: Tier3-Flash-1
              wwn: 322d6d22-5006-4813-9f9c-92d6acea84ee
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a new data Volume
      tags:
        - PCloudVolumes
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/clone:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.volumes.clone.post
      parameters:
        - description: Parameters for the cloning of volumes
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumesCloneRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              clonedVolumes:
                volume-id-1: cloned-volume-id-1
                volume-id-2: cloned-volume-id-2
          schema:
            $ref: '#/definitions/VolumesCloneResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a volume clone for specified volumes
      tags:
        - PCloudVolumes
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/onboarding:
    get:
      operationId: pcloud.volume.onboarding.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              onboardings:
                - description: onboardingDemo1
                  id: 845e40d3-035d-499a-a147-02e2adf8123
                  inputVolumes:
                    - aux_volume-vol-demo15-a608b408-051c
                    - aux_volume-vol-demo16-a608b408-051c
                  status: SUCCESS
                - description: onboardingDemo2
                  id: 0bd0c4a7-df48-4b82-8aa2-31e267cdc213
                  inputVolumes:
                    - aux_volume-vol-demo17-a608b408-051c
                    - aux_volume-vol-demo10-a608b408-051c
                  status: REVERTED
          schema:
            $ref: '#/definitions/VolumeOnboardings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List all volume onboardings for this cloud instance
      tags:
        - PCloudVolumeOnboarding
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.volume.onboarding.post
      parameters:
        - description: Parameters for the creation of volume onboarding
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumeOnboardingCreate'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              description: onboarding-test-1
              id: 6392eaf7-6edf-4edd-ae3e-a18583946241
          schema:
            $ref: '#/definitions/VolumeOnboardingCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Onboard auxiliary volumes to target site
      tags:
        - PCloudVolumeOnboarding
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/onboarding/{volume_onboarding_id}:
    get:
      operationId: pcloud.volume.onboarding.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              creationTimestamp: "2022-09-03T11:37:42.000Z"
              description: onboardingDemo1
              id: 76ab88a3-8078-4a69-abff-31cafd1f96qq
              inputVolumes:
                - aux_vol-1-80ed3950-ae0044275619
                - aux_vol-2-80ed3950-ae0044275619
              progress: !!float 100
              results:
                onboardedVolumes: []
                volumeOnboardingFailures:
                  - failureMessage: Unauthorized onboard of auxilary volumes.
                    volumes:
                      - aux_DRVMTest-29e8ee86-000037b0-boot-0-0e71999a-857a44275619
                      - aux_volume-vol-demo-test-99593-3-5414edfc-e1f144275619
              status: REVERTED
          schema:
            $ref: '#/definitions/VolumeOnboarding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the information of volume onboarding operation
      tags:
        - PCloudVolumeOnboarding
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_onboarding_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/{volume_id}:
    delete:
      operationId: pcloud.cloudinstances.volumes.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a cloud instance volume
      tags:
        - PCloudVolumes
    get:
      operationId: pcloud.cloudinstances.volumes.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              bootable: false
              creationDate: "2020-01-10T16:43:39.000Z"
              diskType: tier3
              lastUpdateDate: "2020-01-13T17:58:45.000Z"
              name: tim-data-vol-4
              shareable: false
              size: !!float 32
              state: in-use
              volumeID: e8cc1226-a4d5-46c8-875c-312b8b5bdda6
              volumePool: StoragePool-1
              volumeType: StoragePool-1
              wwn: wwn-id
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Detailed info of a volume
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.cloudinstances.volumes.put
      parameters:
        - description: Parameters to update a cloud instance volume
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateVolume'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              bootable: false
              creationDate: "2020-01-10T16:43:39.000Z"
              diskType: tier1
              lastUpdateDate: "2020-01-13T17:58:45.000Z"
              name: test-data-vol-4
              shareable: true
              size: !!float 32
              state: in-use
              volumeID: e8cc1226-a4d5-46c8-875c-312b8b5bdda6
          schema:
            $ref: '#/definitions/Volume'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a cloud instance volume
      tags:
        - PCloudVolumes
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/{volume_id}/action:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.cloudinstances.volumes.action.post
      parameters:
        - description: Parameters for the desired action
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumeAction'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Perform an action on a Volume
      tags:
        - PCloudVolumes
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/{volume_id}/flash-copy-mappings:
    get:
      operationId: pcloud.cloudinstances.volumes.FlashCopyMappings.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              - flashCopyName: fcmap44
                sourceVolumeName: volume-vol-demo-b52b93df-746c
                startTime: "0001-01-01T00:00:00.000Z"
                status: stopped
                targetVolumeName: chg_volume-vol-demo-b52b93df-746c
              - copyRate: 50,
                flashCopyName: fcmap45
                sourceVolumeName: chg_volume-vol-demo-b52b93df-746c
                startTime: "0001-01-01T00:00:00.000Z"
                status: idle_or_copied
                targetVolumeName: volume-vol-demo-b52b93df-746c
          schema:
            $ref: '#/definitions/FlashCopyMappings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a list of flashcopy mappings of a given volume
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/{volume_id}/remote-copy:
    get:
      operationId: pcloud.cloudinstances.volumes.remoteCopyRelationship.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              auxChangedVolumeName: chg_aux_volume-vol-demo-b52b93df-746c1210664
              auxVolumeName: aux_volume-vol-demo-b52b93df-746c1210664
              copyType: global
              cyclePeriodSeconds: 500,
              cyclingMode: multi
              freezeTime: "2022-09-14T06:10:42.000Z"
              id: b52b93df-746c-4ff0-9885-292b4be86sdsd
              masterChangedVolumeName: chg_volume-vol-demo-b52b93df-746c
              masterVolumeName: volume-vol-demo-b52b93df-746c
              name: rcrel23
              primaryRole: master
              progress: 100,
              remoteCopyID: "101"
              state: consistent_copying
          schema:
            $ref: '#/definitions/VolumeRemoteCopyRelationship'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get remote copy relationship of a volume
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volume_id'
  /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn/ike-policies:
    get:
      description: List all IKE Policies with all attributes
      operationId: pcloud.ikepolicies.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              ikePolicies:
                authentication: sha1
                dhGroup: 19,
                encryption: 3des-cbc
                id: 7edc8988-eb18-4b5c-a594-0d73d8254463
                keyLifetime: !!float 28800
                name: ikePolicy1
                version: !!float 2
          schema:
            $ref: '#/definitions/IKEPolicies'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all IKE Policies
      tags:
        - PCloudVPNPolicies
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      description: Add a new IKE Policy
      operationId: pcloud.ikepolicies.post
      parameters:
        - description: Parameters for the creation of a new IKE Policy
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IKEPolicyCreate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              authentication: sha1
              dhGroup: !!float 19
              encryption: 3des-cbc
              id: 7edc8988-eb18-4b5c-a594-0d73d8254463
              keyLifetime: !!float 28800
              name: ikePolicy1
              version: !!float 2
          schema:
            $ref: '#/definitions/IKEPolicy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add IKE Policy
      tags:
        - PCloudVPNPolicies
  /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn/ike-policies/{ike_policy_id}:
    delete:
      description: Delete an IKE Policy (by its unique identifier)
      operationId: pcloud.ikepolicies.delete
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete IKE Policy
      tags:
        - PCloudVPNPolicies
    get:
      description: Get an IKE Policy (by its unique identifier)
      operationId: pcloud.ikepolicies.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              ikePolicies:
                - authentication: sha1
                  dhGroup: !!float 19
                  encryption: 3des-cbc
                  id: 7edc8988-eb18-4b5c-a594-0d73d8254463
                  keyLifetime: !!float 28800
                  name: ikePolicy1
                  version: !!float 2
          schema:
            $ref: '#/definitions/IKEPolicy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the specified IKE Policy
      tags:
        - PCloudVPNPolicies
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/ike_policy_id'
    put:
      consumes:
        - application/json
      description: update an IKE Policy (by its unique identifier)
      operationId: pcloud.ikepolicies.put
      parameters:
        - description: Parameters for updating IKE Policy
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IKEPolicyUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              authentication: sha1
              dhGroup: !!float 19
              encryption: 3des-cbc
              id: 7edc8988-eb18-4b5c-a594-0d73d8254463
              keyLifetime: !!float 28800
              name: ikePolicy1
              version: !!float 2
          schema:
            $ref: '#/definitions/IKEPolicy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update IKE Policy
      tags:
        - PCloudVPNPolicies
  /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn/ipsec-policies:
    get:
      description: Get all IPSec Policies with all their attributes
      operationId: pcloud.ipsecpolicies.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              ipSecPolicies:
                authentication: hmac-md5-96
                dhGroup: !!float 2
                encryption: 3des-cbc
                id: 6edc8988-eb18-4b5c-a594-0d73d8254463
                keyLifetime: !!float 28800
                name: ipSecPolicy2
                pfs: true
          schema:
            $ref: '#/definitions/IPSecPolicies'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all IPSec Policies
      tags:
        - PCloudVPNPolicies
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      description: Add a new IPSec Policy
      operationId: pcloud.ipsecpolicies.post
      parameters:
        - description: Parameters for the creation of a new IPSec Policy
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IPSecPolicyCreate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              authentication: hmac-md5-96
              dhGroup: !!float 2
              encryption: 3des-cbc
              id: 6edc8988-eb18-4b5c-a594-0d73d8254463
              keyLifetime: !!float 28800
              name: ipSecPolicy2
              pfs: true
          schema:
            $ref: '#/definitions/IPSecPolicy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add IPSec Policy
      tags:
        - PCloudVPNPolicies
  /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn/ipsec-policies/{ipsec_policy_id}:
    delete:
      description: Delete an IPSec Policy (by its unique identifier)
      operationId: pcloud.ipsecpolicies.delete
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete IPSec Policy
      tags:
        - PCloudVPNPolicies
    get:
      description: Get an IPSec Policy (by its unique identifier)
      operationId: pcloud.ipsecpolicies.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              ipSecPolicies:
                - authentication: hmac-md5-96
                  dhGroup: !!float 2
                  encryption: 3des-cbc
                  id: 6edc8988-eb18-4b5c-a594-0d73d8254463
                  keyLifetime: !!float 28800
                  name: ipSecPolicy2
                  pfs: true
          schema:
            $ref: '#/definitions/IPSecPolicy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the specified IPSec Policy
      tags:
        - PCloudVPNPolicies
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/ipsec_policy_id'
    put:
      consumes:
        - application/json
      description: update an IPSec Policy
      operationId: pcloud.ipsecpolicies.put
      parameters:
        - description: Parameters for the update of an IPSec Policy
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IPSecPolicyUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              authentication: hmac-md5-96
              dhGroup: !!float 2
              encryption: 3des-cbc
              id: 6edc8988-eb18-4b5c-a594-0d73d8254463
              keyLifetime: !!float 28800
              name: ipSecPolicy2
              pfs: true
          schema:
            $ref: '#/definitions/IPSecPolicy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update IPSec Policy
      tags:
        - PCloudVPNPolicies
  /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn/vpn-connections:
    get:
      description: Get all VPN Connections
      operationId: pcloud.vpnconnections.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              vpnConnections:
                - deadPeerDetection:
                    action: restart
                    interval: !!float 10
                    threshold: !!float 5
                  id: e4111a8eb2374b3eb317a6b8f3fe263d
                  ikePolicy:
                    id: d1c0a9508e724cf4b93a06cda0c3a415
                    name: ui-test-updated
                  ipSecPolicy:
                    id: 7ed08c4227284d4cba853c8968f18202
                    name: ipsec-policy-ui-test-1
                  localGatewayAddress: 169.48.225.198
                  mode: route
                  name: vpn-connection-1
                  networkIDs:
                    - d603cf33-3d4e-4e2b-b6ed-f846ee6b5831
                  peerGatewayAddress: 1.1.1.1
                  peerSubnets:
                    - 128.197.11.0/24
                  status: active
                  vpnGatewayAddress: 169.48.225.198
          schema:
            $ref: '#/definitions/VPNConnections'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all VPN Connections
      tags:
        - PCloudVPNConnections
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      description: Create a new VPN Connection
      operationId: pcloud.vpnconnections.post
      parameters:
        - description: VPN Connection object used for creation
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VPNConnectionCreate'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              deadPeerDetection:
                action: restart
                interval: !!float 10
                threshold: !!float 5
              id: 123e4567-e89b-12d3-a456-42661475
              ikePolicy:
                id: 6edc8988-ab18-4b5c-b123-0d73e8254463
                name: IKE Policy 1
              ipSecPolicy:
                id: 7abc1234-ab18-4b5c-b123-0d73e8254463
                name: IPSec Policy 1
              jobRef:
                href: pcloud/v1/cloud-instances/a28e43001b7748b0acbdfb2d36288643/jobs/cb6db5dd-17b9-4236-8754-8b82d1357e74
                id: cb6db5dd-17b9-4236-8754-8b82d1357e74
              localGatewayAddress: 192.168.1.1
              mode: policy
              name: VPN-Connection-1
              networkIDs:
                - 99b7cf8835eb4c77abdadd9e6ed5009c
              peerGatewayAddress: 192.168.1.1
              peerSubnets:
                - 128.170.1.0/20
                - 128.169.1.0/24
                - 128.168.1.0/27
                - 128.170.1.0/32
              status: active
              vpnGatewayAddress: 192.168.204.1
          schema:
            $ref: '#/definitions/VPNConnectionCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create VPN Connection
      tags:
        - PCloudVPNConnections
  /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn/vpn-connections/{vpn_connection_id}:
    delete:
      description: Delete VPN Connection (by its identifier)
      operationId: pcloud.vpnconnections.delete
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              href: pcloud/v1/cloud-instances/a28e43001b7748b0acbdfb2d36288643/jobs/565783da-268a-41df-8742-f4e2929af9e6
              id: 565783da-268a-41df-8742-f4e2929af9e6
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete VPN Connection
      tags:
        - PCloudVPNConnections
    get:
      description: Get a VPN Connection
      operationId: pcloud.vpnconnections.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              deadPeerDetection:
                action: restart
                interval: !!float 10
                threshold: !!float 5
              id: 1dfb9c031c4145cfa7c696711ba0ef0d
              ikePolicy:
                id: d1c0a9508e724cf4b93a06cda0c3a415
                name: ui-test-updated
              ipSecPolicy:
                id: ad1517c55e68450b9a160e0c1e52c0b6
                name: tbsec
              localGatewayAddress: 169.48.225.198
              mode: route
              name: cli-test-vpn-connection-new-1
              networkIDs:
                - 3a3dffcb-3621-40b4-82c3-ae393d2805ba
              peerGatewayAddress: 10.0.0.1
              peerSubnets:
                - 1.2.5.0/24
              status: active
              vpnGatewayAddress: 169.48.225.198
          schema:
            $ref: '#/definitions/VPNConnection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get VPN Connection
      tags:
        - PCloudVPNConnections
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/vpn_connection_id'
    put:
      consumes:
        - application/json
      description: update a VPN Connection (by its identifier)
      operationId: pcloud.vpnconnections.put
      parameters:
        - description: VPN Connection object used for update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VPNConnectionUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              deadPeerDetection:
                action: restart
                interval: !!float 10
                threshold: !!float 5
              id: 1dfb9c031c4145cfa7c696711ba0ef0d
              ikePolicy:
                id: d1c0a9508e724cf4b93a06cda0c3a415
                name: ui-test-updated
              ipSecPolicy:
                id: ad1517c55e68450b9a160e0c1e52c0b6
                name: tbsec
              localGatewayAddress: 169.48.225.198
              mode: route
              name: cli-test-vpn-connection-new
              networkIDs:
                - 3a3dffcb-3621-40b4-82c3-ae393d2805ba
              peerGatewayAddress: 10.0.0.1
              peerSubnets:
                - 1.2.5.0/24
              status: active
              vpnGatewayAddress: 169.48.225.198
          schema:
            $ref: '#/definitions/VPNConnection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update VPN Connection
      tags:
        - PCloudVPNConnections
  /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn/vpn-connections/{vpn_connection_id}/networks:
    delete:
      description: Detach network from a specific VPN Connection
      operationId: pcloud.vpnconnections.networks.delete
      parameters:
        - description: network to detach
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NetworkID'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              href: pcloud/v1/cloud-instances/a28e43001b7748b0acbdfb2d36288643/jobs/565783da-268a-41df-8742-f4e2929af9e6
              id: 565783da-268a-41df-8742-f4e2929af9e6
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Detach network
      tags:
        - PCloudVPNConnections
    get:
      description: Get a list of network IDs attached to a VPN Connection
      operationId: pcloud.vpnconnections.networks.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              networkIDs:
                - 7f950c76-8582-11qeb-8dcd-0242ac143
                - 7f950c76-8582-11veb-8dcd-0242ac153
                - 7f950c76-8582-11deb-8dcd-0242ac163
          schema:
            $ref: '#/definitions/NetworkIDs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get attached networks
      tags:
        - PCloudVPNConnections
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/vpn_connection_id'
    put:
      consumes:
        - application/json
      description: Attach a network to a VPN Connection
      operationId: pcloud.vpnconnections.networks.put
      parameters:
        - description: network to attach
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NetworkID'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              href: pcloud/v1/cloud-instances/a28e43001b7748b0acbdfb2d36288643/jobs/565783da-268a-41df-8742-f4e2929af9e6
              id: 565783da-268a-41df-8742-f4e2929af9e6
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Attach network
      tags:
        - PCloudVPNConnections
  /pcloud/v1/cloud-instances/{cloud_instance_id}/vpn/vpn-connections/{vpn_connection_id}/peer-subnets:
    delete:
      description: Detach peer subnet from a VPN Connection
      operationId: pcloud.vpnconnections.peersubnets.delete
      parameters:
        - description: Peer subnet to detach
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PeerSubnetUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              peerSubnets:
                - 128.170.1.0/20
                - 128.169.1.0/24
                - 128.168.1.0/27
          schema:
            $ref: '#/definitions/PeerSubnets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Detach Peer Subnet
      tags:
        - PCloudVPNConnections
    get:
      description: Get a list of peer subnets attached to a specific VPN Connection
      operationId: pcloud.vpnconnections.peersubnets.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              peerSubnets:
                - 128.170.1.0/20
                - 128.169.1.0/24
                - 128.168.1.0/27
                - 128.170.1.0/32
          schema:
            $ref: '#/definitions/PeerSubnets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get Peer Subnets
      tags:
        - PCloudVPNConnections
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/vpn_connection_id'
    put:
      consumes:
        - application/json
      description: Attach peer subnet to a VPN Connection
      operationId: pcloud.vpnconnections.peersubnets.put
      parameters:
        - description: peer subnet to attach
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PeerSubnetUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              peerSubnets:
                - 128.170.1.0/20
                - 128.169.1.0/24
                - 128.168.1.0/27
                - 128.170.1.0/32
          schema:
            $ref: '#/definitions/PeerSubnets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Attach Peer Subnet
      tags:
        - PCloudVPNConnections
  /pcloud/v1/images:
    get:
      deprecated: true
      operationId: pcloud.images.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Images'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Deprecated for /pcloud/v1/cloud-instances/{cloud_instance_id}/stock-images - List all available stock images
      tags:
        - PCloudImages
    parameters:
      - $ref: '#/parameters/include_sap_images'
      - $ref: '#/parameters/include_vtl_images'
  /pcloud/v1/images/{image_id}:
    get:
      deprecated: true
      operationId: pcloud.images.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Deprecated for /pcloud/v1/cloud-instances/{cloud_instance_id}/stock-images/{image_id} - Detailed info of an available stock image
      tags:
        - PCloudImages
    parameters:
      - $ref: '#/parameters/image_id'
  /pcloud/v1/locations/disaster-recovery:
    get:
      operationId: pcloud.locations.disasterrecovery.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              disasterRecoveryLocations:
                - location: dal12
                  replicationSites:
                    - isActive: true
                      location: us-east
                - location: us-east
                  replicationSites:
                    - isActive: true
                      location: dal12
          schema:
            $ref: '#/definitions/DisasterRecoveryLocations'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all disaster recovery locations supported by Power Virtual Server
      tags:
        - PCloudDisasterRecovery
  /pcloud/v1/tasks/{task_id}:
    delete:
      operationId: pcloud.tasks.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Task
      tags:
        - PCloudTasks
    get:
      operationId: pcloud.tasks.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a Task
      tags:
        - PCloudTasks
    parameters:
      - $ref: '#/parameters/task_id'
  /pcloud/v1/tenants/{tenant_id}:
    get:
      operationId: pcloud.tenants.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              cloudInstances:
                - cloudInstanceID: 78ea9383b1354924bdf97a3057f50110
                  enabled: true
                  href: /pcloud/v1/cloud-instances/78ea9383b1354924bdf97a3057f50110
                  initialized: false
                  limits:
                    instanceMemory: !!float 0
                    instanceProcUnits: !!float 0
                    instances: !!float 0
                    memory: !!float 0
                    peeringBandwidth: !!float 0
                    peeringNetworks: !!float 0
                    procUnits: !!float 0
                    processors: !!float 0
                    storage: !!float 0
                    storageSSD: !!float 0
                  name: 0d8f8fc5-5975-4e78-b541-aec77672ae51
                  region: us-east
                - cloudInstanceID: 7c3d5c3f746c457a95ce3cebba76cf63
                  enabled: true
                  href: /pcloud/v1/cloud-instances/7c3d5c3b746c457a95ce3bebba76cf63
                  initialized: false
                  limits:
                    instanceMemory: !!float 0
                    instanceProcUnits: !!float 0
                    instances: !!float 0
                    memory: !!float 0
                    peeringBandwidth: !!float 0
                    peeringNetworks: !!float 0
                    procUnits: !!float 0
                    processors: !!float 0
                    storage: !!float 0
                    storageSSD: !!float 0
                  name: 37c24ed2-fd6a-4f4b-9119-f6a2817f1d58
                  region: us-east
                - cloudInstanceID: 969afb22cb004e808cb84b827abfa1b0
                  enabled: true
                  href: /pcloud/v1/cloud-instances/969afb22cb004e808ab84b827abfa1b0
                  initialized: false
                  limits:
                    instanceMemory: !!float 0
                    instanceProcUnits: !!float 0
                    instances: !!float 0
                    memory: !!float 0
                    peeringBandwidth: !!float 0
                    peeringNetworks: !!float 0
                    procUnits: !!float 0
                    processors: !!float 0
                    storage: !!float 0
                    storageSSD: !!float 0
              creationDate: "2019-06-21T16:29:17.670Z"
              enabled: true
              name: 781d5ef5-b87c-4a0a-86b8-aaa41213477
              region: us-east
              sshKeys:
                - creationDate: "2019-09-20T18:11:04.508Z"
                  name: ibm-test
                  sshKey: ssh-rsa AAAAB3NzaC1yc2EAAA...
                - creationDate: "2019-11-12T13:16:21.811Z"
                  name: default-key-DO_NOT_DELETE
                  sshKey: ssh-rsa AAAAB3NzaC1yc2EAA... a459814@FR-MP144WBV
                - creationDate: "2019-11-21T09:40:47.042Z"
                  name: e2e1574329171394
                  sshKey: abc
                - creationDate: "2019-11-21T10:04:23.684Z"
                  name: e2e1574330594605
                  sshKey: abc
              tenantID: efe5e8b9d3f04b948790fe5499bd18bc
          schema:
            $ref: '#/definitions/Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a Tenant's current state/information
      tags:
        - PCloudTenants
    parameters:
      - $ref: '#/parameters/tenant_id'
    put:
      consumes:
        - application/json
      operationId: pcloud.tenants.put
      parameters:
        - description: Parameters for updating a Tenant
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TenantUpdate'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a tenant
      tags:
        - PCloudTenants
  /pcloud/v1/tenants/{tenant_id}/sshkeys:
    get:
      operationId: pcloud.tenants.sshkeys.getall
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              sshKeys:
                - creationDate: "2019-09-20T18:11:04.508Z"
                  name: ibm-test
                  sshKey: ssh-rsa AAAAB3...
                - creationDate: "2019-11-12T13:16:21.811Z"
                  name: default-key-DO_NOT_DELETE
                  sshKey: ssh-rsa AAAAB...
          schema:
            $ref: '#/definitions/SSHKeys'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: List a Tenant's SSH Keys
      tags:
        - PCloudTenantsSSHKeys
    parameters:
      - $ref: '#/parameters/tenant_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.tenants.sshkeys.post
      parameters:
        - description: Parameters for the creation of a new SSH key
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SSHKey'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSHKey'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/SSHKey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add a new SSH key to the Tenant
      tags:
        - PCloudTenantsSSHKeys
  /pcloud/v1/tenants/{tenant_id}/sshkeys/{sshkey_name}:
    delete:
      operationId: pcloud.tenants.sshkeys.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a Tenant's SSH key
      tags:
        - PCloudTenantsSSHKeys
    get:
      operationId: pcloud.tenants.sshkeys.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSHKey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a Tenant's SSH Key by name
      tags:
        - PCloudTenantsSSHKeys
    parameters:
      - $ref: '#/parameters/tenant_id'
      - $ref: '#/parameters/sshkey_name'
    put:
      consumes:
        - application/json
      operationId: pcloud.tenants.sshkeys.put
      parameters:
        - description: Parameters for updating a Tenant's SSH Key
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SSHKey'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SSHKey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Update an SSH Key
      tags:
        - PCloudTenantsSSHKeys
  /pcloud/v2/cloud-instances/{cloud_instance_id}/images/{image_id}/export:
    get:
      operationId: pcloud.v2.images.export.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              createTimestamp: "2021-08-09T20:17:39.827Z"
              id: c113467d-8419-449c-8d81-259dda713d9f
              operation:
                action: imageExport
                id: b81ea020-bb47-452e-af96-8523c68f
                target: image
              status:
                message: compression of image ova file is in progress
                progress: imageCompress
                state: running
          schema:
            $ref: '#/definitions/Job'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get detail of last image export job
      tags:
        - PCloudImages
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/image_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v2.images.export.post
      parameters:
        - description: Parameters for the export
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExportImage'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted, image export successfully added to the jobs queue
          examples:
            application/json:
              href: pcloud/v1/jobs/c113467d-8419-449c-8d81-259dda713d9f
              jobID: c113467d-8419-449c-8d81-259dda713d9fcreate
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: image id not found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict, a conflict has prevented adding image export job
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add image export job to the jobs queue
      tags:
        - PCloudImages
  /pcloud/v2/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/capture:
    get:
      operationId: pcloud.v2.pvminstances.capture.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              createTimestamp: "2021-08-09T20:17:39.827Z"
              id: c113467d-8419-449c-8d81-259dda713d9f
              operation:
                - action: vmCapture
                  id: b81ea020-bb47-452e-af96-8523c68e
                  target: pvmInstance
              status:
                - message: capturing VM to an image file
                  progress: capture
                  state: running
          schema:
            $ref: '#/definitions/Job'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get detail of last capture job
      tags:
        - PCloudPVMInstances
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v2.pvminstances.capture.post
      parameters:
        - description: Parameters for the capture
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PVMInstanceCapture'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted, pvm-instance capture successfully added to the jobs queue
          examples:
            application/json:
              href: pcloud/v1/jobs/c113467d-8419-449c-8d81-259dda713d9f
              jobID: c113467d-8419-449c-8d81-259dda713d9f
          schema:
            $ref: '#/definitions/JobReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: pvm instance id not found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict, a conflict has prevented adding the pvm-instance capture job
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Add a capture pvm-instance to the jobs queue
      tags:
        - PCloudPVMInstances
  /pcloud/v2/cloud-instances/{cloud_instance_id}/pvm-instances/{pvm_instance_id}/volumes:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/pvm_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v2.pvminstances.volumes.post
      parameters:
        - description: Parameter to attach volumes to a PVMInstance
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/volumesAttach'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/VolumesAttachmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Attach all volumes to a PVMInstance
      tags:
        - PCloudVolumes
  /pcloud/v2/cloud-instances/{cloud_instance_id}/volumes:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v2.volumes.post
      parameters:
        - description: Parameters for creating multiple volumes
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MultiVolumesCreate'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          examples:
            application/json:
              volumes:
                - bootVolume: false
                  bootable: false
                  creationDate: "2020-08-04T15:34:28.000Z"
                  diskType: tier3
                  href: /pcloud/v1/cloud-instances/${CLOUD_INSTANCE_ID}/volumes/{volume_id}
                  lastUpdateDate: "2020-08-04T15:34:28.000Z"
                  name: base-name-1
                  pvmInstanceIDs: []
                  shareable: false
                  size: !!float 5
                  state: creating
                  volumeID: <uuid>
                  volumePool: Tier3-Flash-1
                  volumeType: Tier3-Flash-1
                  wwn: 322d6d22-5006-4813-9f9c-92d6acea84ee
                - bootVolume: false
                  bootable: false
                  creationDate: "2020-08-04T15:34:28.000Z"
                  diskType: tier1
                  href: /pcloud/v1/cloud-instances/${CLOUD_INSTANCE_ID}/volumes/{volume_id}
                  lastUpdateDate: "2020-08-04T15:34:28.000Z"
                  name: base-name-2
                  pvmInstanceIDs: []
                  shareable: false
                  size: !!float 5
                  state: creating
                  volumeID: <uuid>
                  volumePool: Tier1-Flash-1
                  volumeType: Tier1-Flash-1
                  wwn: 322d6d22-5006-4813-9f9c-92d6acea84ee
          schema:
            $ref: '#/definitions/Volumes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create multiple data volumes from a single definition
      tags:
        - PCloudVolumes
  /pcloud/v2/cloud-instances/{cloud_instance_id}/volumes-clone:
    get:
      operationId: pcloud.v2.volumesclone.getall
      parameters:
        - $ref: '#/parameters/volumes_clone_filter'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              - action: prepare
                creationDate: "2020-09-28T15:09:33.829-05:00"
                lastUpdateDate: "2020-09-28T15:09:50.749-05:00"
                name: test2-Sep28
                percentComplete: !!float 70
                status: preparing
                volumesCloneID: a4945ba6-5b4c-45b5-8312-485e3ac1ec3d
              - action: start
                creationDate: "2020-09-28T14:42:38.618-05:00"
                lastUpdateDate: "2020-09-28T14:44:52.386-05:00"
                name: test1-Sep28
                percentComplete: !!float 100
                status: available
                volumesCloneID: 8553bb63-7eac-405c-af8c-ccfe71186ca8
          schema:
            $ref: '#/definitions/VolumesClones'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the list of volumes-clone request for a cloud instance
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v2.volumesclone.post
      parameters:
        - description: Parameters for preparing a set of volumes to be cloned
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumesCloneCreate'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              action: prepare
              creationDate: "2020-09-28T14:42:38.618-05:00"
              lastUpdateDate: "2020-09-28T14:42:38.618-05:00"
              name: test1-Sep28
              percentComplete: !!float 0
              status: preparing
              volumesCloneID: 8553bb63-7eac-405c-af8c-ccfe71186ca8
          schema:
            $ref: '#/definitions/VolumesClone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: |
        Create a new volumes clone request and initiates the Prepare action
          Requires a minimum of two volumes
          Requires a minimum of one volume to be in the 'in-use' state
          Requires a unique volumes clone name
          Prepare action does the preparatory work for creating the snapshot volumes
      tags:
        - PCloudVolumes
  /pcloud/v2/cloud-instances/{cloud_instance_id}/volumes-clone/{volumes_clone_id}:
    delete:
      operationId: pcloud.v2.volumesclone.delete
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete a volumes-clone request
      tags:
        - PCloudVolumes
    get:
      operationId: pcloud.v2.volumesclone.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              action: execute
              clonedVolumes:
                - clone:
                    name: clone-tim-xyz-23222-5
                    volumeID: 38809cf7-0c9e-4c21-b4f5-b3b99305bf1a
                  source:
                    name: tim-vm-capture-1-data-2
                    volumeID: f2e3d534-c2af-4ead-9ba5-54ccb43ead79
                - clone:
                    name: clone-tim-xyz-23222-4
                    volumeID: 920863d2-f6c1-4e21-8df5-d016bf6c10ef
                  source:
                    name: tim-vm-capture-1-data-3
                    volumeID: bfa57ddb-dcfa-4aad-aee2-e63a95519a07
                - clone:
                    name: clone-tim-xyz-23222-1
                    volumeID: 67316c07-877f-4e2b-8126-dce1e1d36302
                  source:
                    name: tim-test-capture-1-boot
                    volumeID: cf367e26-12b7-4870-9cf3-bf9a75e565ca
                - clone:
                    name: clone-tim-xyz-23222-3
                    volumeID: 3e2c0def-783d-426b-9121-56c7cfd313bb
                  source:
                    name: tim-vm-capture-1-data-4
                    volumeID: 3b58f6ee-095e-4e95-9c82-615a07e7d661
                - clone:
                    name: clone-tim-xyz-23222-2
                    volumeID: d83b83e0-a8db-4ecd-a660-58fe13a12dba
                  source:
                    name: tim-vm-capture-1-data-1
                    volumeID: d313abd1-827d-4803-9712-122aa9b667b7
              creationDate: "2020-09-28T14:42:38.618-05:00"
              lastUpdateDate: "2020-09-28T14:49:03.914-05:00"
              name: test1-Sep28
              percentComplete: !!float 100
              status: completed
              volumesCloneID: 8553bb63-7eac-405c-af8c-ccfe71186ca8
          schema:
            $ref: '#/definitions/VolumesCloneDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the details for a volumes-clone request
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volumes_clone_id'
  /pcloud/v2/cloud-instances/{cloud_instance_id}/volumes-clone/{volumes_clone_id}/cancel:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volumes_clone_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v2.volumesclone.cancel.post
      parameters:
        - description: Parameters for cancelling a volumes-clone request
          in: body
          name: body
          schema:
            $ref: '#/definitions/VolumesCloneCancel'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              action: cancel
              creationDate: "2020-09-28T15:09:33.829-05:00"
              lastUpdateDate: "2020-09-28T15:16:31.950-05:00"
              name: test2-Sep28
              percentComplete: !!float 0
              status: cancelling
              volumesCloneID: a4945ba6-5b4c-45b5-8312-485e3ac1ec3d
          schema:
            $ref: '#/definitions/VolumesClone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: |
        Cancel a volumes-clone request, initiates the Cleanup action
        Cleanup action performs the cleanup of the preparatory clones and snapshot volumes
      tags:
        - PCloudVolumes
  /pcloud/v2/cloud-instances/{cloud_instance_id}/volumes-clone/{volumes_clone_id}/execute:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volumes_clone_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v2.volumesclone.execute.post
      parameters:
        - description: Parameters for the cloning of volumes
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumesCloneExecute'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json:
              action: execute
              creationDate: "2020-09-28T14:42:38.618-05:00"
              lastUpdateDate: "2020-09-28T14:47:04.309-05:00"
              name: test1-Sep28
              percentComplete: !!float 0
              status: executing
              volumesCloneID: 8553bb63-7eac-405c-af8c-ccfe71186ca8
          schema:
            $ref: '#/definitions/VolumesClone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: |
        Initiate the Execute action for a volumes-clone request
        Execute action creates the cloned volumes using the volume snapshots
      tags:
        - PCloudVolumes
  /pcloud/v2/cloud-instances/{cloud_instance_id}/volumes-clone/{volumes_clone_id}/start:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/volumes_clone_id'
    post:
      operationId: pcloud.v2.volumesclone.start.post
      responses:
        "200":
          description: OK
          examples:
            application/json:
              action: start
              creationDate: "2020-09-28T14:42:38.618-05:00"
              lastUpdateDate: "2020-09-28T14:44:52.386-05:00"
              name: test1-Sep28
              percentComplete: !!float 100
              status: available
              volumesCloneID: 8553bb63-7eac-405c-af8c-ccfe71186ca8
          schema:
            $ref: '#/definitions/VolumesClone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: |
        Initiate the Start action for a volumes-clone request
        Start action starts the consistency group to initiate the flash copy
      tags:
        - PCloudVolumes
  /pcloud/v2/cloud-instances/{cloud_instance_id}/volumes/clone:
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
    post:
      consumes:
        - application/json
      operationId: pcloud.v2.volumes.clone.post
      parameters:
        - description: Parameters for the cloning of volumes
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VolumesCloneAsyncRequest'
      produces:
        - application/json
      responses:
        "202":
          description: Accepted
          examples:
            application/json: href:"pcloud/v2/cloud-instances/${CLOUD_INSTANCE_ID}/volumes/clone-tasks/fe14b0f3-9027-41c0-b804-760bf95ffc1d" cloneTaskID:"fe14b0f3-9027-41c0-b804-760bf95ffc1d"
          schema:
            $ref: '#/definitions/CloneTaskReference'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a volume clone for specified volumes
      tags:
        - PCloudVolumes
  /pcloud/v2/cloud-instances/{cloud_instance_id}/volumes/clone-tasks/{clone_task_id}:
    get:
      operationId: pcloud.v2.volumes.clonetasks.get
      produces:
        - application/json
      responses:
        "200":
          description: OK
          examples:
            application/json:
              clonedVolumes:
                - clonedVolumeID: d21f6941-aeb8-467e-9bd1-c11c0c34cd77
                  sourceVolumeID: 3a70a152-c097-4892-914f-57e33aa8af10
                - clonedVolumeID: a649a8dc-8191-490b-8a56-c1da40ae0529
                  sourceVolumeID: 9af30313-79d5-4e40-bedf-8e4cd30fd3fb
            percentComplete: !!float 100
            status: completed
          schema:
            $ref: '#/definitions/CloneTaskStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Get the status of a volumes clone request for the specified clone task ID
      tags:
        - PCloudVolumes
    parameters:
      - $ref: '#/parameters/cloud_instance_id'
      - $ref: '#/parameters/clone_task_id'
  /v1/swagger.json:
    get:
      operationId: serviceBroker.swaggerspec
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
      security: []
      summary: Get swagger json spec
      tags:
        - SwaggerSpec
  /v2/catalog:
    get:
      operationId: catalog.get
      parameters:
        - $ref: '#/parameters/APIVersion'
      produces:
        - application/json
      responses:
        "200":
          description: catalog response
          schema:
            $ref: '#/definitions/Catalog'
      security:
        - basic: []
      summary: get the catalog of services that the service broker offers
      tags:
        - Catalog
  /v2/service_instances/{instance_id}:
    delete:
      operationId: serviceInstance.deprovision
      parameters:
        - $ref: '#/parameters/accepts_incomplete'
        - $ref: '#/parameters/service_id'
        - $ref: '#/parameters/plan_id'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/AsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: deprovision a service instance
      tags:
        - ServiceInstances
    get:
      operationId: serviceInstance.get
      parameters:
        - $ref: '#/parameters/APIVersion'
        - $ref: '#/parameters/OriginatingIdentity'
        - $ref: '#/parameters/instance_id'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceInstanceResource'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: gets a service instance
      tags:
        - ServiceInstances
    parameters:
      - $ref: '#/parameters/APIVersion'
      - $ref: '#/parameters/OriginatingIdentity'
      - $ref: '#/parameters/instance_id'
    patch:
      consumes:
        - application/json
      operationId: serviceInstance.update
      parameters:
        - description: parameters for the requested service instance update
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceInstanceUpdateRequest'
        - $ref: '#/parameters/accepts_incomplete'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/ServiceInstanceAsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: update a service instance
      tags:
        - ServiceInstances
    put:
      consumes:
        - application/json
      operationId: serviceInstance.provision
      parameters:
        - description: parameters for the requested service instance provision
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceInstanceProvisionRequest'
        - $ref: '#/parameters/accepts_incomplete'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceInstanceProvision'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ServiceInstanceProvision'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/ServiceInstanceAsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: provision a service instance
      tags:
        - ServiceInstances
  /v2/service_instances/{instance_id}/last_operation:
    get:
      operationId: serviceInstance.lastOperation.get
      parameters:
        - description: id of the service associated with the instance
          in: query
          name: service_id
          type: string
        - description: id of the plan associated with the instance
          in: query
          name: plan_id
          type: string
        - description: a provided identifier for the operation
          in: query
          name: operation
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LastOperationResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: last requested operation state for service instance
      tags:
        - ServiceInstances
    parameters:
      - $ref: '#/parameters/APIVersion'
      - $ref: '#/parameters/instance_id'
  /v2/service_instances/{instance_id}/service_bindings/{binding_id}:
    delete:
      operationId: serviceBinding.unbinding
      parameters:
        - $ref: '#/parameters/service_id'
        - $ref: '#/parameters/plan_id'
        - $ref: '#/parameters/accepts_incomplete'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Object'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/AsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: deprovision of a service binding
      tags:
        - ServiceBindings
    get:
      operationId: serviceBinding.get
      parameters:
        - $ref: '#/parameters/APIVersion'
        - $ref: '#/parameters/OriginatingIdentity'
        - $ref: '#/parameters/instance_id'
        - $ref: '#/parameters/binding_id'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceBindingResource'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: gets a service binding
      tags:
        - ServiceBindings
    parameters:
      - $ref: '#/parameters/APIVersion'
      - $ref: '#/parameters/OriginatingIdentity'
      - $ref: '#/parameters/instance_id'
      - $ref: '#/parameters/binding_id'
    put:
      operationId: serviceBinding.binding
      parameters:
        - description: parameters for the requested service binding
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceBindingRequest'
        - $ref: '#/parameters/accepts_incomplete'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServiceBinding'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ServiceBinding'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/AsyncOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: generation of a service binding
      tags:
        - ServiceBindings
  /v2/service_instances/{instance_id}/service_bindings/{binding_id}/last_operation:
    get:
      operationId: serviceBinding.lastOperation.get
      parameters:
        - description: id of the service associated with the instance
          in: query
          name: service_id
          type: string
        - description: id of the plan associated with the instance
          in: query
          name: plan_id
          type: string
        - description: a provided identifier for the operation
          in: query
          name: operation
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LastOperationResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Error'
      security:
        - basic: []
      summary: last requested operation state for service binding
      tags:
        - ServiceBindings
    parameters:
      - $ref: '#/parameters/APIVersion'
      - $ref: '#/parameters/instance_id'
      - $ref: '#/parameters/binding_id'
produces:
  - application/json
security:
  - OauthSecurity: []
securityDefinitions:
  OauthSecurity:
    authorizationUrl: /auth/v1/login
    flow: implicit
    type: oauth2
    x-google-audiences: 903592228867-h2v4860vq0lvids6bvqvr4ssjsobqeok.apps.googleusercontent.com
    x-google-issuer: https://accounts.google.com
  basic:
    type: basic
swagger: "2.0"
